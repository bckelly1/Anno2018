{"version":3,"sources":["webpack:///./src/filesystem.ts","webpack:///./src/game/world/world.ts","webpack:///./src/game/island-renderer.ts","webpack:///./src/game/renderer/isometric/renderered-ship.ts","webpack:///./src/game/world/ship-course.ts","webpack:///./src/game/world/ship.ts","webpack:///./src/game/radius.ts","webpack:///./src/game/renderer/isometric/gad-models/info-model.ts","webpack:///./src/game/renderer/isometric/gad-models/ctrl-model.ts","webpack:///./src/translation/translations.ts","webpack:///./src/game/renderer/isometric/hud.ts","webpack:///./src/game/field-type.ts","webpack:///./src/game/game-renderer.ts","webpack:///./src/game/game.ts","webpack:///./src/game-loader.ts","webpack:///./src/game/animation-renderer.ts","webpack:///./src/game/config-loader.ts","webpack:///./src/game/font-loader.ts","webpack:///./src/game/ui/slider-sprite.ts","webpack:///./src/game/gad-renderer.ts","webpack:///./src/game/island-sprite-loader.ts","webpack:///./src/util/pixi.ts","webpack:///./src/game/world/island-ore-location.ts","webpack:///./src/game/world/castle.ts","webpack:///./src/game/world/city.ts","webpack:///./src/game/world/island.ts","webpack:///./src/game/world/good.ts","webpack:///./src/game/world/contract.ts","webpack:///./src/game/world/kontor.ts","webpack:///./src/game/world/player-event.ts","webpack:///./src/game/world/player.ts","webpack:///./src/game/world/producer.ts","webpack:///./src/game/world/soldier.ts","webpack:///./src/game/world/task.ts","webpack:///./src/game/world/timers.ts","webpack:///./src/game/world/world-generation-settings.ts","webpack:///./src/parsers/GAM/block.ts","webpack:///./src/parsers/GAM/world-generator.ts","webpack:///./src/parsers/GAM/gam-parser.ts","webpack:///./src/game/world/trader.ts","webpack:///./src/game/menu/missions.ts","webpack:///./src/game/menu-structure.ts","webpack:///./src/game/music-player.ts","webpack:///./src/game/world/field.ts","webpack:///./src/parsers/GAM/island-loader.ts","webpack:///./src/sprite-loader.ts","webpack:///./src/parsers/BSH/bsh-color-palette.ts","webpack:///./src/parsers/BSH/bin-packer.ts","webpack:///./src/parsers/BSH/bsh-image.ts","webpack:///./src/parsers/BSH/bsh-parser.ts","webpack:///./src/parsers/DAT/dat-parser.ts","webpack:///./src/parsers/SMK/smk-parser.ts","webpack:///./src/parsers/WAV/wav-parser.ts","webpack:///./src/parsers/ZEI/bitmap-font-generator.ts","webpack:///./src/translation/translation-parser.ts","webpack:///./src/uploadInfo.tsx","webpack:///./src/upload.ts","webpack:///./src/translation/translator.ts","webpack:///./src/index.ts","webpack:///./src/util/ffmpeg.ts","webpack:///./src/parsers/stream.ts","webpack:///./src/parsers/COD/cod-parser.ts","webpack:///./src/util/assert.ts","webpack:///./src/util/util.ts"],"names":["SimulationSpeed","Filer","require","FileSystem","filer","this","size","Promise","resolve","reject","init","persistent","filename","create","foldername","mkdir","directory","filterByExtensions","ls","entries","extensions","split","filter","entry","isFile","some","extension","name","endsWith","entryOrPath","path","fullPath","startsWith","Error","parts","part","undefined","find","open","getTextContentFromFile","Stream","getUint8ContentFromFile","file","fileReader","FileReader","onload","event","result","onerror","readAsText","Uint8Array","readAsArrayBuffer","df","used","free","cap","pathOrEntry","content","write","data","rm","all","map","downloadFile","downloadDirectory","fileName","openAndGetContentAsUint8Array","doDownload","zip","JSZip","addToZip","console","log","subEntries","generateAsync","type","zipContent","blob","Blob","element","document","createElement","href","window","URL","createObjectURL","download","click","World","islands","players","tasks","gameName","soldiers","ships","kontors","castles","cities","trader","timers","producers","table","TILE_WIDTH","TILE_HEIGHT","IslandRenderer","world","spriteLoader","render","island","getIslandSprites","islandSprites","forEach","spritesOfIsland","sprites","row","sprite","addChild","CourseState","RenderedShip","id","isTrader","animation","bugAnimation","whiteFlag","flag","hp","HP_WIDTH","HP_HEIGHT","ship","animationRenderer","getShipAnimation","assert","config","Bugfignr","getAnimation","flagAnimationName","playerId","Graphics","beginFill","drawRect","viewport","rotation","GameRenderer","fieldPosToWorldPos","position","x","y","main","animations","rotations","mainX","Math","floor","width","mainY","Posoffs","n","sign","abs","Fahnoffs","flagOffsetX","SQRT2","assertNever","flagOffsetY","waveSprite","play","flagAnimation","flagX","flagY","hpX","hpY","height","set","ShipCourse","state","num","read32","byte2","byte3","byte4","Point","SHIP_TYPES","shipFromSaveGame","readString","read16","read","fromSaveGame","read8","kind","tradeStops","i","push","kontor_id","_1","goods","parseShipGoods","_2","parseShipTradeStops","cargo","good_id","amount","action","isWithinRadius","building","radius","point","center","ceil","HIGHSCORE_BTN_ID","CITIES_BTN_ID","SHIPS_BTN_ID","DIPLOMACY_BTN_ID","InfoModel","hud","translator","container","onLoad","buttons","setStatusAreaContent","texts","57002","translate","57005","57008","57011","57014","57017","57020","57023","57026","ignore","costs","text","getChildByName","toString","GAME","LEISTE","PLAYCOL","VIDEOKIND","SPEECHKIND","PATH","ENDLESSKIND","TUTORKIND","KAMPAGNE","FIGKIND","WARE","ROHST","ROHSTFELD","MILITAR","WOHNHAUS","STRASSE","BERGWERK","HANDWERK","FARM","HAFEN","DIVERS","ABRISS","LANDSCHAFT","CtrlModel","gameRenderer","emit","30001","alert","30002","30003","zoomIn","30004","zoomOut","30011","setSidebarActiveTab","30015","translations","fieldIdToTranslationMap","ids","iconOffset","getIconId","fieldId","each","length","makeDebugText","Text","fontFamily","fontSize","fill","HUD","menuRenderer","sidebar","Container","sidebarDetails","topBar","bottomBar","debugArea","money","coordinates","islandNumber","producerInfo","simulationSpeedDisplay","infoModel","ctrlModel","WARE_ICON_OFFSET","setMoney","setOperatingCosts","renderScreen","tab","removeChildren","47002","47031","47032","47033","setSize","copyFrom","speed","producer","city","field","fieldType","production","showProducerFarm","showProducerHandwerk","showProducerMine","showProducerPublicBuilding","41002","41003","41004","replace","41005","41006","isActive","upkeep","active","inactive","41008","getFieldName","41022","stock","41009","_","pauseProduction","setActive","41010","dontTakeGoods","setGoodsAllowedForPickup","getTextures","textures","texture","get","good","62002","62003","62004","62006","46002","46003","46004","46006","46022","46009","46010","usesTwoInputGoods","good2","37002","37003","37004","37005","37006","37008","secondGoodStock","firstGoodStock","37009","37010","good1","pos","localPosition","GoodIds","game","islandSpriteLoader","app","configLoader","myPlayerId","WIDTH","HEIGHT","fields","keyboardManager","interactionManager","showRadiusOfAllBuildings","radiusSprites","cull","viewportBounds","getVisibleBounds","topLeft","worldPosToFieldPos","bottomRight","visible","KeyboardManager","setupHotKeys","hudContainer","stage","renderer","plugins","interaction","fieldPos","xx","yy","worldX","worldY","worldPos","round","adjustedWorldPos","enable","ticker","add","update","begin","screenWidth","screenHeight","sendHoveredPositionsToHUD","Object","values","spritesPerIsland","smokeSprites","smokeSprite","make2DArray","mapPosition","waterTexture","Sprite","anchor","renderShips","moveCameraToStartPosition","merge","from","fromEvent","pipe","auditTime","subscribe","on","worldPosToFieldPosLand","toWorld","mouse","global","positionRect","contains","producersWithConfig","islandId","fieldData","getFieldAtIsland","fieldConfig","getFieldData","localPositionRect","Rectangle","producerWithConfig","cityIslandNum","islandCityNum","showProducer","addListener","onProduced","setSimulationSpeed","highlightField","annoX","annoY","color","landFieldPosToWorldPos","tmp","alpha","drawPolygon","base","actualSizeX","actualSizeY","buildingRectangle","renderedShips","showTaskKey","Key","F1","onKeyPressedWithPreventDefault","player","assignedTask","assignedTaskId","info","zoomKeys","key","F2","zoom","F3","F4","zoomKey","speedKeys","keys","PAUSE","Paused","F5","Slow","F6","Medium","F7","Fast","SHIFT","F8","SuperFast","speedKey","onKeysPressedWithPreventDefault","LEFT","RIGHT","UP","DOWN","setPreventDefault","moveCorner","corner","R","toggleShowRadiusOfAllBuildings","scale","moveCenter","currentZoom","max","startTime","lastTime","fn","deltaMS","remove","removeChild","startWith","distinctUntilChanged","setHoveredPosition","myKontor","kontor","myShip","moveTo","kontorIsland","FieldType","gfxId","iconGfxId","rotate","animAdd","yOffset","animTime","animAnz","Id","Gfx","Baugfx","Kind","Size","Rotate","AnimAdd","AnimAnz","AnimTime","productionConfig","nested_objects","HAUS_PRODTYP","Array","isArray","Kosten","goodNameToId","Ware","Rohstoff","Workstoff","Prodmenge","amount1","Rohmenge","amount2","Workmenge","Radius","interval","Interval","maxStock","Maxlager","smokeAnimationNames","Rauchfignr","NOWARE","islandPosition","animationStep","smokeAnimations","sx","sy","getTexture","animatedTextures","animatedSprite","AnimatedSprite","animationSpeed","pixelPosition","mapPositionOnIsland","smokeAnimationName","smokeAnimation","tileId","Game","timerId","islandPos","getFieldAt","globalPos","tick","timeGame","cntCity","inc","cntIsland","cntShipyard","cntMilitary","cntProduction","watchTicksForUpkeep","watchTicksForProducing","value","mapArrayById","simulationSpeed","clearInterval","setInterval","arr","reduce","objectMap","obj","upkeeps","calculateUpkeeps","addMoney","parseInt","producerId","timer","buildingId","howMuchIsBeingProduced","oldStock","howMuchCanWeProduce","var11c","notmp5","isProducing","howMuchCanWeProduceWithGood1","min","howMuchCanWeProduceWithGood2","prodCount","setGoodWasProducedTimer","getGoodWasProducedTimer","timeCount","EventEmitter","GameLoader","fs","gamParser","musicPlayer","menuStructure","loadSavesAndMissions","games","saveGame","saveOrMission","join","load","openAndGetContentAsStream","saveGameData","getWorld","gameLogic","playAll","Default","saves","missions","concat","AnimationRenderer","animationData","objects","FIGUR","items","includes","ANIM","0","FAHNEMARKT","baseGfx","baseFramesPerRotation","GfxCategoryMapped","gfxFilename","substr","animatedSprites","animIdx","animatedSpritesForAnim","numSteps","AnimSpeed","gfxPerStep","AnimRept","framesPerRotation","rotationIdx","spritesForRotation","gfx","AnimOffs","frames","step","loop","debugDrawSprite","animationName","rect","lineStyle","ConfigLoader","loaded","Map","JSON","openAndGetContentAsText","parse","HAUS","FontLoader","fontName","font","Loader","shared","uInt8ToBase64","fonts","1","2","SliderSprite","dragging","topY","sizeY","offsetY","sliderSizeY","eventY","originalEvent","clamp","val","GADRenderer","videos","destroyVideos","blockNumMapping","variables","substring","radioButtons","selectableCount","gadgets","GADGET","gadget","blockNr","Blocknr","Gfxnr","Pos","selectable","Noselflg","isToggleButton","Flipflg","pressOff","Pressoff","isRadioButton","Reiheflg","isSlider","Slidverflg","sliderOffset","Slidoffs","sliderSize","Slidsize","defaultTexture","activeTexture","setSliderData","buttonMode","interactive","callback","button","getFontByGadId","BitmapText","pivot","hitArea","warn","videoSprite","onEnd","baseTexture","resource","source","addEventListener","once","clear","video","destroy","IslandSpriteLoader","inited","lock","AsyncLock","acquire","loadSpritesOfField","origin","getSprites","ani","newSprites","newSprite","textureFromUint8ArrayMP4","tmpVideo","src","Texture","OreLocationKind","OreLocationSize","Unit","ready","flags","castleFromSaveGame","numSwords","numMuscets","numCanons","units","parseUnits","cityFromSaveGame","progressAllowed","read8Bool","inhabitants","taxes","IslandFertilityFlags","GoodAction","OreLocation","discoveredBy","islandFromIsland3File","isSouth","numBaseIsland","numOreLocations","oreLocations","fertility","tobacco","sugarcane","wine","cotton","cacao","spice","differsFromBaseIsland","fertilityDiscovered","islandFromIsland4File","islandFromIsland5File","islandFromSaveGame","every","e","TOBACCO","SUGARCANE","WINE","COTTON","CACAO","SPICE","parseFertility","ContractState","Good","goodId","sellingPrice","buyingPrice","wantedSellingAmount","wantedBuyingAmount","currentAmount","kontorFromSaveGame","parseGoods","PlayerEventKind","Contract","time","PlayerKind","PlayerEvent","otherPlayerId","playerFromSaveGame","read32S","killedByPlayerId","_3_3","_3_2","palaceBuilt","cathedralBuilt","enemiesDefeated","triumphArchesBuilt","soldiersKilled","soldiersFallen","shipsSunken","shipsKilled","_4","enablePositiveWillInfluence","enableNegativeWillInfluence","_5","positiveWillInfluence","negativeWillInfluence","accessibleBuildings","statues","statuesBuilt","tradeContracts","peaceContracts","playerEvents","fullName","shortName","SoldierType","Producer","goodWasProduced","speedCnt","p","setAnimCount","stream","write8","write16","getAnimCount","goodsAllowedForPickup","soldierFromSaveGame","isPatrolling","taskFromSaveGame","monopolyGoodId1","monopolyGoodId2","helpOtherToReachInhabitantsPlayerId","playersToKill","_3","requiredBalance","successVideoId","requiredTradeBalance","_6","ownCityReachInhabitants","count","requiredLevel","requiredLevelCount","_7","helpOtherToReachInhabitants","timersFromSaveGame","cntSettlers","cntGrowth","timeCity","timeIsland","timeShipyard","timeMilitary","timeProduction","timeGoodToolsCnt","timeGoodToolsMax","noErzOutFlg","tutorFlg","aiLevel","missionNumber","enableTrader","bigIronRunsOut","enableDroughts","enablePirate","enableVulcano","gameId","cityNameNumber","timeNextDrought","timePirateSec","missionSubNumber","shipMax","timeNextVulcano","cntVulcano","timeSettlers","timeGrowth","WorldGenerationSettings","numNativesNorth","numNativesSouth","numBigIronOre","numSmallIronOre","numGoldOre","numWine","numSugarCane","numSpice","numCacao","numTobacco","numCotton","numTreasures","islandTemplates","slice","numIslands","forceNorth","forceSouth","islandSize","climate","Block","WorldGenerator","islandLoader","worldGenerationSettings","nextIslandId","islandTemplate","loadRandomIslandFile","loadIslandFileNum","blocks","eof","fromStream","inselBlock","block","inselHausBlock","newIsland","setIslandFields","GAMParser","worldGenerator","has","lastIslandBlock","inselHausBlocks","doParse","populateWorld","nameBlock","playerBlock","parsePlayers","islandBlocks","parseIslands","handleBlock","empty","entities","islandBlock","islandBuildingBlocks","islandTopBlock","islandBottomBlock","loadIslandFile","islandFile","Missions","renderNewGame","bind","renderLoadGame","currentPage","newGameLines","ROWS","SCROLL_UP","SCROLL_DOWN","getNewGameLines","_playMainMenuMusic","currentTopItem","bitmapText","off","line","save","padStart","loadMissions","mission","missionNum","ranking","campaignNum","sort","a","b","MenuStructure","gadRenderer","structure","menu_main","stop","loadVideoSprite","renderVideo","renderVideoFullscreen","menu_missions","menu_loading","menu_mission_details","screen","model","videoNumber","videoData","utils","Sound","pixiSound","MusicPlayer","playing","songs","currentSongIdx","files","buffer","loadSound","sound","song","isPlaying","playNext","preload","singleInstance","err","preloadedSound","Field","random","bits","saveGameDataLength","IslandLoader","islandSizes","maxSize","sizeId","islandFiles","loadIslandsWithSizeAndClimate","randomIslandFile","parsedFields","parseIslandFields","parsedField","dataLength","sizeName","exec","SpriteLoader","loadTextures","textureMap","lastIndexOf","dataFileName","spriteSheetData","spriteSheetImageData","tex","spritesheet","Spritesheet","BinPacker","w","h","root","node","findNode","splitNode","right","down","idxToColors","colorsToIdxInner","colorsToIdx","UPNG","BSHImage","pixels","encode","BSHParser","SPRITESHEET_SIZE","HEADER_SIZE","decode","prefix","images","sheets","binPacker","atlasData","meta","image","addBlock","png","startX","startY","j","idx","frame","rotated","trimmed","spriteSourceSize","sourceSize","outName","saveSpriteSheet","SmartBuffer","writeString","padEnd","writeUInt32LE","imageBuffer","encodeImage","toBuffer","writeOffset","writeBuffer","fileType","fileLength","imageOffsets","numImages","seek","bshImage","decodeImage","rowIdx","targetIdx","ch","coloredPixels","colorPalette","FEs","skipPixelsEmpty","writeUInt8","coloredPixelsSlice","pixel","colorIdx","padding","sheet","spritesheetIndex","stringify","DATParser","template","gfxMap","lastGfxName","currentObject","currentNestedObject","currentItem","currentNestedItem","initialVariables","trim","handleConstantAssignment","handleObjFill","handleNestedObjectBegin","handleProperty","handleNestedObjectEnd","mapToObject","gfx_category_map","item","prototype","hasOwnProperty","call","baseItemNum","getValue","baseItem","deepCopy","GfxCategory","isMath","constant","currentGfx","objectName","valueAsString","nestedItem","isObject","deepMerge","arrayElement","oldVal","parseFloat","arrayIdx","res","v","index","op","val1","val2","target","patch","output","assign","SMKParser","ffmpeg","memory","loadFFmpeg","inputFiles","args","prepareArguments","convert","message","mergeAudio","handleOutput","str","arguments","print","printErr","stdin","TOTAL_MEMORY","noExitRuntime","returnCallback","WAVParser","adpcmIndexTable","adpcmStepTable","wav","WaveFile","bitsPerSample","fmt","sampleRate","channels","numChannels","c1","step_index","predictor","c2","samples","left","Int16Array","decodeADPCM_IMA","rawData","numSamples","fromScratch","c","nibble","stepIndex","av_clip","diff","av_clip_int16","xml","BitmapFontGenerator","pages","chars","pageId","page","_attr","char","xoffset","yoffset","xadvance","chnl","letter","String","fromCharCode","face","spacing","italic","bold","stretchH","smooth","aa","common","lineHeight","packed","indent","parseTranslations","currentDomain","UploadInfo","props","msg","error","setState","prevState","messages","zipUploaded","evt","isUploading","onUploaded","worked","resetFiles","onReset","location","reload","setLogger","style","marginLeft","marginRight","maxWidth","multiple","accept","onChange","disabled","toUpperCase","onSaveOrMissionUploaded","onClick","onDownloadFiles","React","escapeStringRegexp","UploadHandler","logger","notes","ReactDOM","uploadAndParse","reset","uploadSaveOrMission","appendChild","exists","rmRoot","zipFileEntry","loadAsync","annoRoot","findRootInZip","copyIslands","copySaves","customMissionPath","copyMissions","decryptCODs","parseDATs","parseGADs","parseBSHs","parseZEIs","parseMusic","parseVideos","r","inName","parser","toolsIncPath","toolsIncFile","findFileCaseInsensitive","async","toolsIncData","gadFile","CODParser","codFile","fromZipObject","codStream","decrypt","bshFile","decodeBSH","createSpriteSheets","saveSpriteSheets","translationFile","codParser","bitmapFontGenerator","zeiFile","decodeZEI","createBitmapFont","hasFolderCaseInsensitive","wavParser","findFilesInZip","wavData","smkParser","copyFolderFromZip","inPath","outPath","fileExtensions","makeLowerCase","fileAndPath","relativePath","toLowerCase","targetPath","fileExtension","caseInsensitiveFileName","RegExp","caseInsensitiveFolderName","folder","Translator","jsonData","translationIdx","domain","keyToIdxMapping","lookup","translationKey","innerText","version","innerHTML","__VERSION__","head","body","uploadHandler","isUploaded","settings","SCALE_MODE","SCALE_MODES","NEAREST","MIPMAP_TEXTURES","MIPMAP_MODES","OFF","Application","innerWidth","innerHeight","antialias","transparent","insertAdjacentElement","view","Viewport","passiveWheel","drag","direction","wheel","mouseEdges","distance","menuViewport","worldWidth","worldHeight","loadTranslations","fontLoader","gameLoader","queryGameName","getQueryParameter","gad","islandName","loadByName","gadName","renderAnimation","loadIslandFileByName","islandRenderer","loadedFFmpeg","doLoadFFmpeg","loadFFmpegInBrowser","eval","__dirname","ffmpeg_run","self","getElementsByTagName","script","onreadystatechange","done","character","readNBytes","writeNBytes","encoding","decryptedBytes","Buffer","allocUnsafe","iconv_decode","iconv_encode","encryptedBytes","expr","CHUNK_SIZE","subarray","apply","btoa","defaultValue","url","results","decodeURIComponent","gfxFolder"],"mappings":"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,4BAAAA,I,gCAAAA,I,+BAAAA,I,qCAAAA,I,6BAAAA,I,iCAAAA,I,+BAAAA,I,2CAAAA,I,uCAAAA,I,yDAAAA,I,iDAAAA,I,2CAAAA,I,mCAAAA,I,yDAAAA,I,6CAAAA,I,6CAAAA,I,mDAAAA,I,qCAAAA,I,6CAAAA,I,uDAAAA,I,iCAAAA,I,mDAAAA,I,+BAAAA,I,mCAAAA,I,yCAAAA,I,6CAAAA,I,6CAAAA,I,iCAAAA,I,iCAAAA,I,iDAAAA,I,+CAAAA,I,uCAAAA,I,iDAAAA,I,uDAAAA,I,uCAAAA,I,+CAAAA,I,iDAAAA,I,6BAAAA,I,+CAAAA,I,mCAAAA,I,uCAAAA,I,iCAAAA,I,yBAAAA,I,6CAAAA,I,+CAAAA,I,+DAAAA,I,2BAAAA,I,6BAAAA,I,iCAAAA,I,mCAAAA,I,yDAAAA,I,iDAAAA,I,6CAAAA,I,qEAAAA,I,+DAAAA,I,2DAAAA,I,+CAAAA,I,+CAAAA,I,uDAAAA,I,+DAAAA,I,uCAAAA,I,mCAAAA,I,mDAAAA,I,uCAAAA,I,mDAAAA,I,qEAAAA,I,iEAAAA,I,yDAAAA,I,yCAAAA,I,2CAAAA,I,2CAAAA,I,iCAAAA,I,+CAAAA,I,mDAAAA,I,+BAAAA,I,uCAAAA,I,+BAAAA,I,qEAAAA,I,qDAAAA,I,6DAAAA,I,mEAAAA,I,uCAAAA,I,0DAAAA,M,KA+FAC,M,aAEAC,O,0CAAAA,I,4CAAAA,I,gDAAAA,I,+CAAAA,M,cAOAC,O,kCAAAA,I,oCAAAA,I,2CAAAA,M,cAMAC,O,kCAAAA,I,kDAAAA,I,oCAAAA,I,kCAAAA,I,oCAAAA,I,kCAAAA,I,2CAAAA,M,cAYAC,O,mDAAAA,Q,cAIAC,O,wDAAAA,I,4DAAAA,I,kEAAAA,I,yDAAAA,Q,cAOAC,O,8CAAAA,I,8CAAAA,I,8CAAAA,I,8CAAAA,I,+CAAAA,Q,cAQAC,O,kDAAAA,I,kDAAAA,I,kDAAAA,I,kDAAAA,I,kDAAAA,I,kDAAAA,I,kDAAAA,I,kDAAAA,I,kDAAAA,I,kDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,mDAAAA,I,oDAAAA,Q,cAsCAC,O,oCAAAA,I,wCAAAA,I,sCAAAA,I,0CAAAA,I,6CAAAA,Q,cAQAC,O,8BAAAA,I,4BAAAA,I,oCAAAA,I,oCAAAA,I,4BAAAA,I,sCAAAA,I,kCAAAA,I,gCAAAA,I,8BAAAA,I,8BAAAA,I,6BAAAA,I,iCAAAA,I,mCAAAA,I,mCAAAA,I,6BAAAA,I,qDAAAA,I,iCAAAA,I,+BAAAA,I,iCAAAA,I,+BAAAA,I,mCAAAA,I,iCAAAA,I,+BAAAA,I,6BAAAA,I,kCAAAA,Q,cA8BAC,O,gCAAAA,I,oCAAAA,I,kCAAAA,I,wCAAAA,I,kCAAAA,I,gCAAAA,I,gCAAAA,I,8CAAAA,I,8BAAAA,I,kCAAAA,I,+BAAAA,I,yCAAAA,I,gCAAAA,Q,cAgBAC,O,4CAAAA,I,gDAAAA,I,8CAAAA,I,oDAAAA,I,8CAAAA,I,4CAAAA,I,4CAAAA,I,0DAAAA,I,0CAAAA,I,8CAAAA,I,2CAAAA,I,qDAAAA,I,4CAAAA,Q,cAgBAC,O,sEAAAA,I,sEAAAA,I,kFAAAA,I,oEAAAA,I,oEAAAA,I,gFAAAA,I,4EAAAA,I,wEAAAA,I,0EAAAA,I,yEAAAA,Q,cAaAC,O,qDAAAA,Q,cAIAC,O,kEAAAA,I,oEAAAA,I,kEAAAA,I,oEAAAA,I,4DAAAA,I,4DAAAA,I,4DAAAA,I,6DAAAA,Q,cAWAC,O,oDAAAA,I,gDAAAA,I,0DAAAA,I,iDAAAA,Q,cAOAC,O,gEAAAA,I,kEAAAA,I,wEAAAA,I,gEAAAA,I,kEAAAA,I,wEAAAA,I,gEAAAA,I,4EAAAA,I,wEAAAA,I,wEAAAA,I,2EAAAA,I,yEAAAA,I,yEAAAA,I,qEAAAA,I,6EAAAA,I,gFAAAA,Q,cAmBAC,O,oDAAAA,I,wDAAAA,I,sDAAAA,I,kDAAAA,I,oDAAAA,I,kDAAAA,I,oDAAAA,I,sDAAAA,I,wDAAAA,I,kDAAAA,I,qDAAAA,I,iDAAAA,I,mDAAAA,I,2DAAAA,I,6DAAAA,I,qDAAAA,I,uDAAAA,I,mDAAAA,I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AAM,EACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,EACZ,GAAM,GAAM,EACZ,GAAM,GAAM,EACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,IACZ,GAAM,GAAM,EACZ,GAAM,GAAM,EACZ,GAAM,GAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,GAAM,IACZ,EAAM,GAAM,IACZ,IAAM,IAAM,GACZ,EAAM,GAAM,IACZ,EAAM,GAAM,IACZ,GAAM,GAAM,IACZ,GAAM,GAAM,IACZ,EAAM,GAAM,IACZ,GAAM,GAAM,IACZ,EAAM,GAAM,IACZ,GAAM,GAAM,IACZ,GAAM,GAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,GAAM,IACZ,EAAM,GAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,GAAM,IAAM,IACZ,IAAM,IAAM,GACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,EAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,EACZ,IAAM,IAAM,EACZ,EAAM,IAAM,IACZ,IAAM,IAAM,GACZ,IAAM,IAAM,GACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,IAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,GAAM,EACZ,GAAM,GAAM,EACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,EACZ,GAAM,GAAM,GACZ,GAAM,IAAM,EACZ,GAAM,IAAM,EACZ,GAAM,GAAM,EACZ,GAAM,IAAM,GACZ,GAAM,IAAM,EACZ,GAAM,IAAM,GACZ,GAAM,IAAM,EACZ,GAAM,IAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,IAAM,GACZ,GAAM,GAAM,IACZ,GAAM,GAAM,IACZ,GAAM,IAAM,IACZ,GAAM,GAAM,EACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,IAAM,GACZ,GAAM,GAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,GAAM,GAAM,GACZ,GAAM,IAAM,GACZ,GAAM,GAAM,GACZ,GAAM,IAAM,IACZ,IAAM,GAAM,GACZ,IAAM,GAAM,GACZ,IAAM,GAAM,GACZ,IAAM,GAAM,GACZ,IAAM,IAAM,GACZ,IAAM,IAAM,GACZ,IAAM,IAAM,IACZ,IAAM,GAAM,EACZ,IAAM,GAAM,GACZ,IAAM,GAAM,GACZ,IAAM,GAAM,GACZ,IAAM,GAAM,EACZ,IAAM,GAAM,GACZ,IAAM,GAAM,EACZ,IAAM,GAAM,GACZ,GAAM,IAAM,EACZ,GAAM,IAAM,EACZ,GAAM,IAAM,EACZ,GAAM,IAAM,EACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,EACZ,GAAM,IAAM,EACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,EACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,EACZ,GAAM,I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","file":"app.ca3f6c7512c9410475f5.js","sourcesContent":["import Stream from \"./parsers/stream\";\nimport JSZip from \"jszip\";\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst Filer = require(\"filer.js\");\n\nexport default class FileSystem {\n  private filer: any;\n  constructor() {\n    this.filer = new Filer();\n  }\n\n  public async init(size: number) {\n    return new Promise((resolve, reject) =>\n      this.filer.init(\n        {\n          persistent: true,\n          size: size\n        },\n        resolve,\n        reject\n      )\n    );\n  }\n\n  public async create(filename: string | WebKitEntry) {\n    return new Promise((resolve, reject) =>\n      this.filer.create(filename, false, resolve, reject)\n    );\n  }\n\n  public async mkdir(foldername: string | WebKitEntry) {\n    return new Promise((resolve, reject) =>\n      this.filer.mkdir(foldername, false, resolve, reject)\n    );\n  }\n\n  public async ls(\n    directory: string | WebKitEntry,\n    filterByExtensions?: string\n  ): Promise<WebKitEntry[]> {\n    const entries = await new Promise<WebKitEntry[]>((resolve, reject) => {\n      this.filer.ls(directory, resolve, reject);\n    });\n\n    if (!filterByExtensions) {\n      return entries;\n    }\n\n    const extensions = filterByExtensions.split(\"|\");\n    return entries.filter((entry: WebKitEntry) => {\n      return (\n        entry.isFile &&\n        extensions.some(extension => entry.name.endsWith(extension))\n      );\n    });\n  }\n\n  public async exists(entryOrPath: string | WebKitEntry) {\n    let path: string;\n    if ((entryOrPath as WebKitEntry).fullPath) {\n      path = (entryOrPath as WebKitEntry).fullPath;\n    } else {\n      path = entryOrPath as string;\n    }\n    if (!path.startsWith(\"/\")) {\n      throw new Error(\n        `exists() only works with absolute paths, \"${path}\" given.`\n      );\n    }\n    const parts = path.split(\"/\").filter(part => part !== \"\");\n    path = \"\";\n    for (const part of parts) {\n      path += \"/\";\n      const entries = await this.ls(path);\n      // eslint-disable-next-line require-atomic-updates\n      path += part;\n      if (entries.find(entry => entry.fullPath === path) === undefined) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  public async open(entryOrPath: string | WebKitEntry): Promise<File> {\n    return new Promise((resolve, reject) =>\n      this.filer.open(entryOrPath, resolve, reject)\n    );\n  }\n\n  public async openAndGetContentAsText(entryOrPath: string | WebKitEntry) {\n    return this.getTextContentFromFile(await this.open(entryOrPath));\n  }\n\n  public async openAndGetContentAsStream(\n    entryOrPath: string | WebKitEntry\n  ): Promise<Stream> {\n    return new Stream(\n      await this.getUint8ContentFromFile(await this.open(entryOrPath))\n    );\n  }\n\n  public async openAndGetContentAsUint8Array(\n    entryOrPath: string | WebKitEntry\n  ): Promise<Uint8Array> {\n    return this.getUint8ContentFromFile(await this.open(entryOrPath));\n  }\n\n  public async getTextContentFromFile(file: File): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.onload = event => {\n        if (fileReader.result !== null) {\n          resolve(fileReader.result as string);\n        } else {\n          reject();\n        }\n      };\n      fileReader.onerror = event => {\n        reject();\n      };\n      fileReader.readAsText(file);\n    });\n  }\n\n  public async getUint8ContentFromFile(file: File): Promise<Uint8Array> {\n    return new Promise<Uint8Array>((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.onload = event => {\n        if (fileReader.result !== null) {\n          resolve(new Uint8Array(fileReader.result as ArrayBuffer));\n        } else {\n          reject();\n        }\n      };\n      fileReader.onerror = event => {\n        reject();\n      };\n      fileReader.readAsArrayBuffer(file);\n    });\n  }\n\n  public async df() {\n    return new Promise((resolve, reject) => {\n      this.filer.df(\n        (used: number, free: number, cap: number) =>\n          resolve({ used: used, free: free, cap: cap }),\n        reject\n      );\n    });\n  }\n\n  public async write(pathOrEntry: string | WebKitEntry, content: any) {\n    return new Promise((resolve, reject) =>\n      this.filer.write(pathOrEntry, { data: content }, resolve, reject)\n    );\n  }\n\n  public async rm(pathOrEntry: string | WebKitEntry) {\n    return new Promise((resolve, reject) =>\n      this.filer.rm(pathOrEntry, resolve, reject)\n    );\n  }\n\n  public async rmRoot() {\n    const entries = await this.ls(\"/\");\n    return Promise.all(entries.map(entry => this.rm(entry.fullPath)));\n  }\n\n  public async download(pathOrEntry: string | WebKitEntry) {\n    let entries;\n    try {\n      entries = await this.ls(pathOrEntry);\n    } catch (e) {\n      return this.downloadFile(pathOrEntry);\n    }\n    return this.downloadDirectory(entries);\n  }\n\n  private async downloadFile(pathOrEntry: string | WebKitEntry) {\n    const fileName =\n      typeof pathOrEntry === \"string\" ? pathOrEntry : pathOrEntry.fullPath;\n\n    const content = await this.openAndGetContentAsUint8Array(pathOrEntry);\n    this.doDownload(fileName, content);\n  }\n\n  private async downloadDirectory(entries: WebKitEntry[]) {\n    const zip = new JSZip();\n\n    const addToZip = async (entries: WebKitEntry[]) =>\n      Promise.all(\n        entries.map(async entry => {\n          console.log(entry.fullPath);\n          if (entry.isFile) {\n            zip.file(entry.fullPath, this.openAndGetContentAsUint8Array(entry));\n          } else {\n            const subEntries = await this.ls(entry);\n            await addToZip(subEntries);\n          }\n        })\n      );\n    await addToZip(entries);\n\n    const zipContent = await zip.generateAsync({ type: \"uint8array\" });\n    this.doDownload(\"data.zip\", zipContent);\n  }\n\n  private doDownload(fileName: string, content: Uint8Array) {\n    const blob = new Blob([content], { type: \"application/zip\" });\n    const element = document.createElement(\"a\");\n    element.href = window.URL.createObjectURL(blob);\n    element.download = fileName;\n    element.click();\n  }\n}\n","import { Castle } from \"./castle\";\nimport { City } from \"./city\";\nimport { Island } from \"./island\";\nimport { Kontor } from \"./kontor\";\nimport { Player } from \"./player\";\nimport { Producer } from \"./producer\";\nimport { Ship } from \"./ship\";\nimport { Soldier } from \"./soldier\";\nimport { Task } from \"./task\";\nimport { Timers } from \"./timers\";\nimport { Trader } from \"./trader\";\n\nexport type Rotation4 = 0 | 1 | 2 | 3;\n\nexport type Rotation8 = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\nexport enum SimulationSpeed {\n  Paused = 0,\n  Default = 1,\n  Slow = Default,\n  Medium = 2,\n  Fast = 4,\n  SuperFast = 8\n}\n\nexport default class World {\n  constructor(\n    public readonly islands: Island[],\n    public readonly players: Player[],\n    public readonly tasks: Task[],\n    public readonly gameName: string,\n    public readonly soldiers: Soldier[],\n    public readonly ships: Ship[],\n    public readonly kontors: Kontor[],\n    public readonly castles: Castle[],\n    public readonly cities: City[],\n    public readonly trader: Trader | null,\n    public readonly timers: Timers,\n    public readonly producers: Producer[]\n  ) {\n    console.log(\"Tasks\");\n    console.table(tasks);\n    console.log(\"Game Name\", gameName);\n    console.log(\"Islands\");\n    console.table(islands);\n    console.log(\"Players\");\n    console.table(players);\n    console.log(\"Soldiers\");\n    console.table(soldiers);\n    console.log(\"Ships\");\n    console.table(ships);\n    console.log(\"Kontors\");\n    console.table(kontors);\n    console.log(\"Castles\");\n    console.table(castles);\n    console.log(\"Cities\");\n    console.table(cities);\n    console.log(\"Trader\", trader);\n    console.log(\"Timers\", timers);\n    console.log(\"Producers\");\n    console.table(producers);\n  }\n}\n","import { Container } from \"pixi.js\";\nimport IslandSpriteLoader from \"./island-sprite-loader\";\nimport { Island } from \"./world/island\";\n\nexport const TILE_WIDTH = 64;\n\nexport const TILE_HEIGHT = 32;\n\nexport const LAND_OFFSET = -20;\n\nexport default class IslandRenderer {\n  constructor(\n    private world: Container,\n    private spriteLoader: IslandSpriteLoader\n  ) {}\n\n  public render = async (islands: Island[]) => {\n    const islandSprites = await Promise.all(\n      islands.map(island => this.spriteLoader.getIslandSprites(island))\n    );\n    console.log(\"Map sprites loaded.\");\n\n    islandSprites.forEach(spritesOfIsland =>\n      spritesOfIsland.sprites.forEach(row =>\n        row\n          .filter(sprite => sprite !== null)\n          .forEach(sprite => this.world.addChild(sprite!.sprite))\n      )\n    );\n    console.log(\"Map sprites drawn.\");\n\n    return islandSprites;\n  };\n}\n","import { Viewport } from \"pixi-viewport\";\nimport { Graphics } from \"pixi.js\";\nimport assert from \"../../../util/assert\";\nimport { assertNever } from \"../../../util/util\";\nimport AnimationRenderer, { MyAnimation } from \"../../animation-renderer\";\nimport GameRenderer from \"../../game-renderer\";\nimport { TILE_HEIGHT, TILE_WIDTH } from \"../../island-renderer\";\nimport { Ship } from \"../../world/ship\";\n\nexport class RenderedShip {\n  private animation: MyAnimation;\n  private bugAnimation: MyAnimation;\n  private whiteFlag: MyAnimation;\n  private flag: MyAnimation;\n  private hp: Graphics;\n\n  private readonly HP_WIDTH = 38;\n  private readonly HP_HEIGHT = 7;\n\n  constructor(public readonly id: number, private readonly isTrader: boolean) {}\n\n  public async begin(ship: Ship, animationRenderer: AnimationRenderer) {\n    this.animation = await animationRenderer.getShipAnimation(ship);\n\n    assert(this.animation.config.Bugfignr);\n    this.bugAnimation = await animationRenderer.getAnimation(\n      this.animation.config.Bugfignr\n    );\n\n    this.whiteFlag = await animationRenderer.getAnimation(\"FAHNEWEISS\");\n    if (!this.isTrader) {\n      const flagAnimationName = `FAHNE${\n        ship.playerId === 5 ? \"PIRAT\" : ship.playerId + 1\n      }`;\n      this.flag = await animationRenderer.getAnimation(flagAnimationName);\n      this.hp = new Graphics();\n\n      this.hp.beginFill(0x00ff00);\n      this.hp.drawRect(0, 0, this.HP_WIDTH, this.HP_HEIGHT);\n    }\n  }\n\n  // TODO: Animations are added to the viewport multiple times if this is called multiple times.\n  public render(ship: Ship, viewport: Viewport) {\n    const { rotation } = ship;\n    const { x, y } = GameRenderer.fieldPosToWorldPos(ship.position);\n    const { main } = this.animation.animations[0].rotations[rotation];\n\n    const offsetX = -Math.floor(main.width / 2) + TILE_WIDTH / 2;\n    const offsetY = this.animation.config.Posoffs[0] + 18; // TODO: Where does the 18 come from?\n\n    const mainX = x + offsetX;\n    const mainY = y + offsetY;\n\n    // We can't simply use Math.floor, since Math.floor(-1.5) === -2.\n    // However, what we want is -1.\n    const floor = (n: number) => {\n      return Math.sign(n) * Math.floor(Math.abs(n));\n    };\n\n    // TODO: We should also use Fahnoffs[0]. However, this is not that big\n    // of an issue, since all ships have Fahnoffs[0] = 0.\n    const Fahnoffs = this.animation.config.Fahnoffs;\n\n    let flagOffsetX = x + TILE_WIDTH / 2;\n    switch (rotation) {\n      case 0:\n      case 2:\n        flagOffsetX += floor((Fahnoffs[1] * TILE_WIDTH) / 2);\n        break;\n      case 4:\n      case 6:\n        flagOffsetX += -floor((Fahnoffs[1] * TILE_WIDTH) / 2);\n        break;\n      case 1:\n        flagOffsetX += floor((Fahnoffs[1] * TILE_WIDTH * Math.SQRT2) / 2);\n        break;\n      case 5:\n        flagOffsetX += -floor((Fahnoffs[1] * TILE_WIDTH * Math.SQRT2) / 2);\n        break;\n      case 3:\n      case 7:\n        flagOffsetX += 0;\n        break;\n      default:\n        assertNever(rotation);\n    }\n\n    let flagOffsetY = y + 48;\n    switch (rotation) {\n      case 2:\n      case 4:\n        flagOffsetY += floor((Fahnoffs[1] * TILE_HEIGHT) / 2);\n        break;\n      case 0:\n      case 6:\n        flagOffsetY += -floor((Fahnoffs[1] * TILE_HEIGHT) / 2);\n        break;\n      case 3:\n        flagOffsetY += floor((Fahnoffs[1] * TILE_HEIGHT * Math.SQRT2) / 2);\n        break;\n      case 7:\n        flagOffsetY += -floor((Fahnoffs[1] * TILE_HEIGHT * Math.SQRT2) / 2);\n        break;\n      case 1:\n      case 5:\n        flagOffsetY += 0;\n        break;\n      default:\n        assertNever(rotation);\n    }\n\n    if (this.animation.config.Bugfignr) {\n      const waveSprite = this.bugAnimation.animations[0].rotations[rotation]\n        .main;\n      waveSprite.x = flagOffsetX - Math.floor(waveSprite.width / 2);\n      waveSprite.y = flagOffsetY - 30;\n      viewport.addChild(waveSprite);\n      waveSprite.play();\n    }\n\n    main.x = mainX;\n    main.y = mainY;\n    viewport.addChild(main);\n    main.play();\n\n    if (this.isTrader) {\n      // No flag or hp for the trader\n      return;\n    }\n\n    // TODO: Support for white flag\n    const flagAnimation = this.flag.animations[0].rotations[0].main;\n\n    const flagX = flagOffsetX - Math.floor(flagAnimation.width / 2);\n    const flagY = flagOffsetY - Math.floor(Fahnoffs[2] * TILE_HEIGHT);\n\n    flagAnimation.x = flagX;\n    flagAnimation.y = flagY;\n    viewport.addChild(flagAnimation);\n    flagAnimation.play();\n\n    // TODO: Check color and make it red if you lose hp\n\n    const hpX = x + TILE_WIDTH / 2 - this.HP_WIDTH / 2;\n    const hpY = flagY - flagAnimation.height - this.HP_HEIGHT;\n    this.hp.position.set(hpX, hpY);\n    viewport.addChild(this.hp);\n  }\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\nexport enum CourseState {\n  Stopped = 0x00,\n  Sailing = 55,\n  Unknown = 53,\n  Unknown2 = 52,\n  Unknown3 = 54,\n  Unknown4 = 51\n}\n\nexport class ShipCourse {\n  public static fromSaveGame(data: Stream) {\n    const num = data.read32();\n    const byte1 = (num >> 0) & 0xff;\n    const byte2 = (num >> 8) & 0xff;\n    const byte3 = (num >> 16) & 0xff;\n    const byte4 = (num >> 24) & 0xff;\n\n    const state: CourseState = byte1;\n    assert(state in CourseState);\n\n    const position = new Point(\n      byte4 + ((byte2 & 0b00001111) << 8),\n      byte3 + ((byte2 & 0b11110000) << 4)\n    );\n\n    return new ShipCourse(position, state);\n  }\n\n  constructor(\n    public readonly position: Point,\n    public readonly state: CourseState\n  ) {}\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport { ShipCourse } from \"./ship-course\";\nimport { Rotation8 } from \"./world\";\n\n/**\n * # Animation Notes\n *\n * There are the following flags:\n * FAHNE1, FAHNE2, FAHNE3, FAHNE4 and FAHNEWEISS\n *\n * and these ships:\n * HANDEL1, HANDEL2, HANDELD1, HANDELD2\n * KRIEG1, KRIEG2, KRIEGD1, KRIEGD2\n *\n * HANDLER, HANDLERD\n * PIRAT, PIRATD\n *\n */\n\nexport interface ShipGood {\n  good_id: number;\n  amount: number;\n  action: number;\n}\n\nexport interface ShipTradeStop {\n  id: number;\n  kontor_id: number;\n  _1: number;\n  goods: ShipGood[];\n  _2: number[];\n}\n\nexport type Ship = ReturnType<typeof shipFromSaveGame>;\n\nexport const SHIP_TYPES: Record<number, string> = {\n  0x15: \"HANDEL1\",\n  0x17: \"HANDEL2\",\n  0x19: \"KRIEG1\",\n  0x1b: \"KRIEG2\",\n  0x1d: \"HANDLER\", // This is the trade ship\n  0x1f: \"PIRAT\",\n  0x25: \"TRADER1\" // This is the guy that walks around islands.\n};\n\nexport function shipFromSaveGame(data: Stream) {\n  const name = data.readString(28);\n  const position = new Point(data.read16(), data.read16());\n  const _1 = data.read(3 * 4);\n\n  const courseFrom = ShipCourse.fromSaveGame(data);\n  const courseTo = ShipCourse.fromSaveGame(data);\n  const courseCurrent = ShipCourse.fromSaveGame(data);\n\n  const _2 = data.read32();\n  const hp = data.read16();\n  const _3 = data.read32();\n  const canons = data.read8();\n  const flags = data.read8();\n  const sellingPrice = data.read16();\n  const id = data.read16();\n  const type = data.read16();\n  const kind = data.read8(); // ?\n  const playerId = data.read8();\n  const _5 = data.read32();\n  const rotation = data.read16() as Rotation8;\n  const tradeStops = parseShipTradeStops(data, 8);\n  const _6 = data.read16();\n  const cargo = parseShipGoods(data, 8);\n\n  return {\n    id,\n    type,\n    kind,\n    playerId,\n    position,\n    rotation,\n    name,\n    hp,\n    tradeStops,\n    cargo\n  };\n}\n\nfunction parseShipTradeStops(data: Stream, n: number): ShipTradeStop[] {\n  const tradeStops = [];\n  for (let i = 0; i < n; i++) {\n    tradeStops.push({\n      id: data.read8(),\n      kontor_id: data.read8(),\n      _1: data.read16(),\n      goods: parseShipGoods(data, 2),\n      _2: data.read(16)\n    });\n  }\n  return tradeStops;\n}\n\nfunction parseShipGoods(data: Stream, n: number): ShipGood[] {\n  const cargo = [];\n  for (let i = 0; i < n; i++) {\n    cargo.push({\n      good_id: data.read16(),\n      amount: data.read16(),\n      action: data.read32() // 0 == 'load', 1 == 'unload'\n    });\n  }\n  return cargo;\n}\n","import { Point, Rectangle } from \"pixi.js\";\n\nexport const isWithinRadius = (\n  building: Rectangle,\n  radius: number,\n  point: Point\n) => {\n  const center = new Point(\n    building.x + building.width / 2,\n    building.y + building.height / 2\n  );\n\n  return (\n    (Math.abs(point.x + 0.5 - center.x) +\n      (building.width % 2 === 0 ? 0 : 0.5)) **\n      2 +\n      (Math.abs(point.y + 0.5 - center.y) +\n        (building.height % 2 === 0 ? 0 : 0.5)) **\n        2 <\n    Math.ceil((radius + 1.05) ** 2)\n  );\n};\n","import { ScreenConfig } from \"../../../menu-structure\";\nimport { Translator } from \"../../../../translation/translator\";\nimport { Container, BitmapText } from \"pixi.js\";\nimport { HUD } from \"../hud\";\n\nconst HIGHSCORE_BTN_ID = 57028;\nconst CITIES_BTN_ID = 57033;\nconst SHIPS_BTN_ID = 57032;\nconst DIPLOMACY_BTN_ID = 57031;\n\nexport class InfoModel implements ScreenConfig {\n  private container: Container;\n\n  constructor(\n    private readonly hud: HUD,\n    private readonly translator: Translator\n  ) {}\n\n  public onLoad = (container: PIXI.Container) => {\n    this.container = container;\n  };\n\n  public buttons = {\n    [HIGHSCORE_BTN_ID]: () => {\n      // TODO: Display and calculate highscore\n    },\n    [CITIES_BTN_ID]: () => this.hud.setStatusAreaContent(\"city-list\"),\n    [SHIPS_BTN_ID]: () => this.hud.setStatusAreaContent(\"ship-list\"),\n    [DIPLOMACY_BTN_ID]: () => this.hud.setStatusAreaContent(\"diplomacy\")\n  };\n\n  public texts = {\n    57002: this.translator.translate(\"game.player_status\"),\n    57005: this.translator.translate(\"game.inhabitants\"),\n    57008: this.translator.translate(\"game.tax_revenue\"),\n    57011: this.translator.translate(\"game.operating_cost\"),\n    57014: this.translator.translate(\"game.military_budget\"),\n    57017: this.translator.translate(\"game.sales_revenue\"),\n    57020: this.translator.translate(\"game.purchase_cost\"),\n    57023: this.translator.translate(\"game.balance_sheet\"),\n    57026: this.translator.translate(\"game.score\")\n  };\n\n  public ignore = [];\n\n  public setOperatingCosts(costs: number) {\n    const text = this.container.getChildByName(\"menu-57012\") as BitmapText;\n    if (!text) {\n      // Do nothing if this gui is currently invisible.\n      return;\n    }\n    text.text = costs.toString();\n  }\n}\n","import { ScreenConfig } from \"../../../menu-structure\";\nimport { Container } from \"pixi.js\";\nimport GameRenderer from \"../../../game-renderer\";\nimport { HUD } from \"../hud\";\n\nconst STATUS_BTN_ID = 30013;\n\nexport class CtrlModel implements ScreenConfig {\n  private container: Container;\n\n  constructor(\n    private readonly gameRenderer: GameRenderer,\n    private readonly hud: HUD\n  ) {}\n\n  public onLoad = (container: PIXI.Container) => {\n    this.container = container;\n    container.getChildByName(`menu-${STATUS_BTN_ID}`).emit(\"mousedown\");\n  };\n\n  public buttons = {\n    30001: () => alert(\"Rotation is not supported yet :(\"),\n    30002: () => alert(\"Rotation is not supported yet :(\"),\n    30003: () => this.gameRenderer.zoomIn(),\n    30004: () => this.gameRenderer.zoomOut(),\n    30011: () => this.hud.setSidebarActiveTab(\"build\"),\n    // 30012 is the same as 30015. This is a copy-paste error of Anno :)\n    30015: () => this.hud.setSidebarActiveTab(\"battle\"),\n    [STATUS_BTN_ID]: () => this.hud.setSidebarActiveTab(\"status\"),\n    30014: () => this.hud.setSidebarActiveTab(\"options\")\n  };\n\n  public texts = {};\n\n  public ignore = [];\n}\n","enum GAME {\n  \"game.stock\",\n  \"game.empty\",\n  \"game.tax\",\n  \"game.pioneers\",\n  \"game.settlers\",\n  \"game.citizens\",\n  \"game.merchants\",\n  \"game.aristocrats\",\n  \"game.food\",\n  \"game.empty2\",\n  \"game.price\",\n  \"game.workload\",\n  \"game.hold\",\n  \"game.cannon\",\n  \"game.speed\",\n  \"game.inhabitants\",\n  \"game.anonymous\",\n  \"game.stock_full_message\",\n  \"game.operating_cost\",\n  \"game.tax_revenue\",\n  \"game.workers\",\n  \"game.supplies_remaining\",\n  \"game.suitable_for\",\n  \"game.canons_ready\",\n  \"game.no_canons_ready\",\n  \"game.settings\",\n  \"game.savewd_games\",\n  \"game.music_and_effects\",\n  \"game.speech\",\n  \"game.video_sequences\",\n  \"game.music\",\n  \"game.effects\",\n  \"game.saved_game\",\n  \"game.fleet_orders\",\n  \"game.troop_orders\",\n  \"game.supply\",\n  \"game.demand\",\n  \"game.dired_up_field\",\n  \"game.player_status\",\n  \"game.who_do_we\",\n  \"game.want_to_attack\",\n  \"game.always_profitable\",\n  \"game.to_invest\",\n  \"game.peaceful_life\",\n  \"game.pirate_hideout\",\n  \"game.cost\",\n  \"game.select_target\",\n  \"game.n_knots\",\n  \"game.n_percent\",\n  \"game.n_tons\",\n  \"game.?3\",\n  \"game.load_on_ship\",\n  \"game.load_on_wagon\",\n  \"game.unload_into_warehouse\",\n  \"game.buy\",\n  \"game.sell\",\n  \"game.pickup\",\n  \"game.deliver\",\n  \"game.at_gold_coins_each\",\n  \"game.purchase_up_to\",\n  \"game.sell_down_to\",\n  \"game.demand_fulfilled_percent\",\n  \"game.demand_fulfilled_none\",\n  \"game.citizens_now_demand\",\n  \"game.sales_revenue\",\n  \"game.purchase_cost\",\n  \"game.nothing_available\",\n  \"game.momentarily_no_demand\",\n  \"game.no_demand\",\n  \"game.demand2\",\n  \"game.demand_at_coins\",\n  \"game.ship_list\" = 71,\n  \"game.military_budget\" = 72,\n  \"game.unit_forming_requirement\" = 73,\n  \"game.unit_training_progress\" = 74,\n  \"game.fully_trained_unit\" = 75,\n  \"game.no_weapons\" = 76,\n  \"game.cities_list\" = 77,\n  \"game.pay_tribute\" = 78,\n  \"game.empty3\" = 79,\n  \"game.balance_sheet\" = 80,\n  \"game.enter_your_name\" = 81,\n  \"game.score\" = 82,\n  \"misc.insert_cd\" = 83,\n  \"misc.no_cd\" = 84,\n  \"menu.divider.orginal_missions\" = 85,\n  \"menu.divider.missions\" = 86,\n  \"menu.divider.new_missions\" = 87,\n  \"menu.divider.custom_missions\" = 88,\n  \"misc.exit_game\" = 89,\n  \"misc.exit_game_question\" = 90\n}\n\n// TODO: [LEISTE]\nenum LEISTE {}\n\nenum PLAYCOL {\n  \"player.color.red\",\n  \"player.color.blue\",\n  \"player.color.yellow\",\n  \"player.color.white\" = 3\n}\n\nenum VIDEOKIND {\n  \"videos.event\",\n  \"videos.battle\",\n  \"videos.diplomacy\"\n}\n\nenum SPEECHKIND {\n  \"speech.event\",\n  \"speech.island_status\",\n  \"speech.player\",\n  \"speech.trade\",\n  \"speech.battle\",\n  \"speech.order\",\n  \"speech.diplomacy\"\n}\n\n// Ignore [ERROR]\n\nenum PATH {\n  \"path.custom_missions\"\n}\n\nenum ENDLESSKIND {\n  \"endless.difficulty.easy\",\n  \"endless.difficulty.medium\",\n  \"endless.difficulty.difficult\",\n  \"endless.difficulty.hard\"\n}\n\nenum TUTORKIND {\n  \"tutorial.mission_0\",\n  \"tutorial.mission_1\",\n  \"tutorial.mission_2\",\n  \"tutorial.mission_3\",\n  \"tutorial.mission_4\"\n}\n\nenum KAMPAGNE {\n  \"campaign.0.mission_0\",\n  \"campaign.0.mission_1\",\n  \"campaign.0.mission_2\",\n  \"campaign.0.mission_3\",\n  \"campaign.0.mission_4\",\n\n  \"campaign.1.mission_0\",\n  \"campaign.1.mission_1\",\n  \"campaign.1.mission_2\",\n  \"campaign.1.mission_3\",\n  \"campaign.1.mission_4\",\n\n  \"campaign.2.mission_0\",\n  \"campaign.2.mission_1\",\n  \"campaign.2.mission_2\",\n  \"campaign.2.mission_3\",\n  \"campaign.2.mission_4\",\n\n  \"campaign.3.mission_0\",\n  \"campaign.3.mission_1\",\n  \"campaign.3.mission_2\",\n  \"campaign.3.mission_3\",\n  \"campaign.3.mission_4\",\n\n  \"campaign.4.mission_0\",\n  \"campaign.4.mission_1\",\n  \"campaign.4.mission_2\",\n  \"campaign.4.mission_3\",\n  \"campaign.4.mission_4\",\n\n  \"campaign.5.mission_0\",\n  \"campaign.5.mission_1\",\n  \"campaign.5.mission_2\",\n  \"campaign.5.mission_3\",\n  \"campaign.5.mission_4\"\n}\n\nenum FIGKIND {\n  \"figure.unused\",\n  \"figure.infantry\",\n  \"figure.cavalry\",\n  \"figure.musketeer\",\n  \"figure.artiellery\"\n}\n\nenum WARE {\n  \"good.empty\",\n  \"good.each\",\n  \"good.iron_ore\",\n  \"good.gold_ore\",\n  \"good.wool\",\n  \"good.sugarcane\",\n  \"good.tobacco\",\n  \"good.cattle\",\n  \"good.grain\",\n  \"good.flour\",\n  \"good.iron\",\n  \"good.swords\",\n  \"good.muskets\",\n  \"good.cannons\",\n  \"good.food\",\n  \"good.tobacco_products\",\n  \"good.spices\",\n  \"good.cocoa\",\n  \"good.liquor\",\n  \"good.cloth\",\n  \"good.clothes\",\n  \"good.jewlry\",\n  \"good.tools\",\n  \"good.wood\",\n  \"good.bricks\"\n}\n\n// Ignore WAREM\n\nenum ROHST {\n  \"rohst.grain\",\n  \"rohst.tobacco\",\n  \"rohst.spices\",\n  \"rohst.sugarcane\",\n  \"rohst.cotton\",\n  \"rohst.vines\",\n  \"rohst.cocoa\",\n  \"rohst.grazing_land\",\n  \"rohst.tree\",\n  \"rohst.stones\",\n  \"rohst.ores\",\n  \"rohst.wild_game\",\n  \"rohst.fish\"\n}\n\nenum ROHSTFELD {\n  \"rohst_field.grain\",\n  \"rohst_field.tobacco\",\n  \"rohst_field.spices\",\n  \"rohst_field.sugarcane\",\n  \"rohst_field.cotton\",\n  \"rohst_field.vines\",\n  \"rohst_field.cocoa\",\n  \"rohst_field.grazing_land\",\n  \"rohst_field.tree\",\n  \"rohst_field.stones\",\n  \"rohst_field.ores\",\n  \"rohst_field.wild_game\",\n  \"rohst_field.fish\"\n}\n\nenum MILITAR {\n  \"buildings.military.wooden.wall\",\n  \"buildings.military.wooden.gate\",\n  \"buildings.military.wooden.watchtower\",\n  \"buildings.military.stone.wall\",\n  \"buildings.military.stone.gate\",\n  \"buildings.military.stone.watchtower\",\n  \"buildings.military.stone.gate_big\",\n  \"buildings.military.castle.small\",\n  \"buildings.military.castle.medium\",\n  \"buildings.military.castle.large\"\n}\n\nenum WOHNHAUS {\n  \"buildings.house.house\"\n}\n\nenum STRASSE {\n  \"buildings.street.dirt.street\",\n  \"buildings.street.stone.street\",\n  \"buildings.street.dirt.bridge\",\n  \"buildings.street.stone.bridge\",\n  \"buildings.street.square.0\",\n  \"buildings.street.square.1\",\n  \"buildings.street.square.2\",\n  \"buildings.street.square.3\"\n}\n\nenum BERGWERK {\n  \"buildings.mine.quarry\",\n  \"buildings.mine.iron\",\n  \"buildings.mine.iron_deep\",\n  \"buildings.mine.gold\"\n}\n\nenum HANDWERK {\n  \"buildings.production.weaver\",\n  \"buildings.production.butcher\",\n  \"buildings.production.flour_mill\",\n  \"buildings.production.bakery\",\n  \"buildings.production.tobacco\",\n  \"buildings.production.distillery\",\n  \"buildings.production.tailor\",\n  \"buildings.production.weaving_mill\",\n  \"buildings.production.stonemason\",\n  \"buildings.production.water_mill\",\n  \"buildings.production.ore_smelter\",\n  \"buildings.production.tool_maker\",\n  \"buildings.production.gold_smith\",\n  \"buildings.production.armourer\",\n  \"buildings.production.musket_maker\",\n  \"buildings.production.canon_foundry\"\n}\n\nenum FARM {\n  \"buildings.farm.hunter\",\n  \"buildings.farm.forester\",\n  \"buildings.field.forest\",\n  \"buildings.farm.grain\",\n  \"buildings.field.grain\",\n  \"buildings.farm.sheep\",\n  \"buildings.farm.cattle\",\n  \"buildings.farm.tobacco\",\n  \"buildings.field.tobacco\",\n  \"buildings.farm.spice\",\n  \"buildings.field.spice\",\n  \"buildings.farm.wine\",\n  \"buildings.field.wine\",\n  \"buildings.farm.sugarcane\",\n  \"buildings.field.sugarcane\",\n  \"buildings.farm.cotton\",\n  \"buildings.field.cotton\",\n  \"buildings.farm.cocoa\",\n  \"buildings.field.cocoa\"\n}\n\nenum HAFEN {\n  \"buildings.docks.warehouse.0\",\n  \"buildings.docks.warehouse.1\",\n  \"buildings.docks.warehouse.2\",\n  \"buildings.docks.warehouse.3\",\n  \"buildings.docks.fisher\",\n  \"buildings.docks.dock\",\n  \"buildings.docks.shipyard.small\",\n  \"buildings.docks.shipyard.large\"\n}\n\nenum DIVERS {\n  \"buildings.public.house\",\n  \"buildings.public.marketplace\",\n  \"buildings.public.chapel\",\n  \"buildings.public.church\",\n  \"buildings.public.cathedral\",\n  \"buildings.public.tavern\",\n  \"buildings.public.doctor\",\n  \"buildings.public.school\",\n  \"buildings.public.college\",\n  \"buildings.public.bathhouse\",\n  \"buildings.public.theater\",\n  \"buildings.public.firefighters\",\n  \"buildings.public.palace\",\n  \"buildings.public.gallows\",\n  \"buildings.public.monument\",\n  \"buildings.public.triumphal_arch\"\n}\n\nenum ABRISS {\n  \"demolish\"\n}\n\nenum LANDSCHAFT {\n  \"natives.0.head_lodge\",\n  \"natives.0.hut.0\",\n  \"natives.0.hut.1\",\n  \"natives.0.hut.2\",\n  \"natives.0.hut.3\",\n  \"natives.1.head_lodge\",\n  \"natives.1.hut.0\",\n  \"natives.1.hut.1\",\n  \"natives.1.hut.2\",\n  \"natives.1.hut.3\",\n  \"natives.pyramid\",\n  \"pirates.warehouse\",\n  \"pirates.1\",\n  \"pirates.2\",\n  \"pirates.tower\",\n  \"forest.mixed\",\n  \"forest.palm\"\n}\n\n// Ignore [BUBBLES]\n\n// Ignore [TUTOR]\n\n// Ignore [MELDUNG]\n\n// Ignore [STAEDTE]\n\n// Ignore [SHIPS]\n\n// Ignore [DEMO]\n\nexport const translations = {\n  GAME,\n  LEISTE,\n  PATH,\n  ENDLESSKIND,\n  PLAYCOL,\n  VIDEOKIND,\n  SPEECHKIND,\n  TUTORKIND,\n  KAMPAGNE,\n  FIGKIND,\n  WARE,\n  ROHST,\n  ROHSTFELD,\n  MILITAR,\n  WOHNHAUS,\n  STRASSE,\n  BERGWERK,\n  HANDWERK,\n  FARM,\n  HAFEN,\n  DIVERS,\n  ABRISS,\n  LANDSCHAFT\n};\n\ntype GetKeys<U> = U extends Record<infer K, any> ? K : never;\ntype UnionToIntersection<U extends object> = {\n  [K in GetKeys<U>]: U extends Record<K, infer T> ? T : never;\n};\nexport type TranslationKeys = keyof UnionToIntersection<\n  (typeof translations)[keyof typeof translations]\n>;\n\nexport type TranslationDomain = keyof typeof translations;\n\nexport const fieldIdToTranslationMap = [\n  {\n    type: \"MILITAR\",\n    ids: [\n      0x57f9,\n      0x539c,\n      0x539d,\n      0x57e5,\n      0x4f50,\n      0x4f51,\n      0x4f4f,\n      0x4f57,\n      0x4f59,\n      0x4f5b\n    ],\n    iconOffset: 86\n  },\n  {\n    type: \"HANDWERK\",\n    ids: [\n      0x501b,\n      0x501f,\n      0x5015,\n      0x5017,\n      0x502d,\n      0x5027,\n      0x5019,\n      0x5033,\n      0x5021,\n      0x501d,\n      0x5029,\n      0x5023,\n      0x5035,\n      0x5025,\n      0x5031,\n      0x502f\n    ],\n    iconOffset: 108\n  },\n  {\n    type: \"FARM\",\n    ids: [\n      0x55f3,\n      0x55f1,\n      0x5337,\n      0x53ff,\n      0x5335,\n      0x540b,\n      0x5409,\n      0x5403,\n      0x5357,\n      0x53fd,\n      0x535d,\n      0x540d,\n      0x535f,\n      0x5407,\n      0x535b,\n      0x5401,\n      0x5353,\n      0x5405,\n      0x5359\n    ],\n    iconOffset: 125\n  },\n  {\n    type: \"BERGWERK\",\n    ids: [0x5787, 0x5781, 0x5783, 0x5785],\n    iconOffset: 104\n  },\n  {\n    type: \"HAFEN\",\n    ids: [0x5655, 0x5657, 0x5659, 0x565b, 0x5253, 0x5251, 0x5663, 0x565f],\n    iconOffset: 144\n  },\n  {\n    type: \"STRASSE\",\n    ids: [0x4fbb, 0x4fb1, 0x5461, 0x5463, 0x4fc5, 0x4fc6, 0x4fc7, 0x4fc8],\n    iconOffset: 96\n  },\n  {\n    type: \"DIVERS\",\n    ids: [\n      0x507d,\n      0x5149,\n      0x5143,\n      0x5145,\n      0x5141,\n      0x5147,\n      0x5151,\n      0x5155,\n      0x5153,\n      0x514d,\n      0x514f,\n      0x514b,\n      0x515f,\n      0x5169,\n      0x5173,\n      0x5175\n    ],\n    iconOffset: 152\n  }\n];\n\nexport function getIconId(fieldId: number) {\n  for (const each of fieldIdToTranslationMap) {\n    for (let i = 0; i < each.ids.length; i++) {\n      const id = each.ids[i];\n      if (id === fieldId) {\n        return each.iconOffset + i;\n      }\n    }\n  }\n  throw new Error(`Could not find icon offset for ${fieldId}.`);\n}\n","import { Container, Point, Text, Sprite } from \"pixi.js\";\nimport MenuStructure from \"../../menu-structure\";\nimport { SimulationSpeed } from \"../../world/world\";\nimport { Island } from \"../../world/island\";\nimport { InfoModel } from \"./gad-models/info-model\";\nimport { CtrlModel } from \"./gad-models/ctrl-model\";\nimport GameRenderer from \"../../game-renderer\";\nimport { assertNever } from \"../../../util/util\";\nimport { Producer } from \"../../world/producer\";\nimport { City } from \"../../world/city\";\nimport Field from \"../../world/field\";\nimport FieldType from \"../../field-type\";\nimport { Translator } from \"../../../translation/translator\";\nimport SpriteLoader from \"../../../sprite-loader\";\nimport { getIconId } from \"../../../translation/translations\";\n\nconst SIDEBAR_WIDTH = 271;\nconst BOTTOMBAR_HEIGHT = 35;\n\nfunction makeDebugText() {\n  return new Text(\"\", {\n    fontFamily: \"Arial\",\n    fontSize: 24,\n    fill: 0xff1010\n  });\n}\n\nexport type StatusAreaContent =\n  | \"status\"\n  | \"city-list\"\n  | \"ship-list\"\n  | \"diplomacy\";\n\nexport type SidebarTab = \"build\" | \"battle\" | \"status\" | \"options\";\n\nexport class HUD {\n  private sidebar = new Container();\n  private sidebarDetails = new Container();\n  private topBar = new Container();\n  private bottomBar = new Container();\n  private debugArea = new Container();\n\n  private money = makeDebugText();\n  private coordinates = makeDebugText();\n  private islandNumber = makeDebugText();\n  private producerInfo = makeDebugText();\n  private simulationSpeedDisplay = makeDebugText();\n  private infoModel: InfoModel;\n  private ctrlModel: CtrlModel;\n\n  private readonly WARE_ICON_OFFSET = 192;\n\n  constructor(\n    gameRenderer: GameRenderer,\n    private readonly menuRenderer: MenuStructure,\n    private readonly translator: Translator,\n    private readonly spriteLoader: SpriteLoader,\n    container: Container\n  ) {\n    this.infoModel = new InfoModel(this, translator);\n    this.ctrlModel = new CtrlModel(gameRenderer, this);\n\n    // Debug area\n    this.money.y = 0 * 30;\n    this.coordinates.y = 1 * 30;\n    this.islandNumber.y = 2 * 30;\n    this.producerInfo.y = 3 * 30;\n    this.simulationSpeedDisplay.y = 5 * 30;\n    this.debugArea.addChild(this.money);\n    this.debugArea.addChild(this.coordinates);\n    this.debugArea.addChild(this.islandNumber);\n    this.debugArea.addChild(this.producerInfo);\n    this.debugArea.addChild(this.simulationSpeedDisplay);\n\n    container.addChild(this.sidebar);\n    container.addChild(this.sidebarDetails);\n    container.addChild(this.topBar);\n    container.addChild(this.bottomBar);\n    container.addChild(this.debugArea);\n  }\n\n  public async begin(size: Point) {\n    await this.menuRenderer.renderScreen(\n      this.sidebar,\n      \"CTRL.GAD\",\n      this.ctrlModel\n    );\n    await this.menuRenderer.renderScreen(this.bottomBar, \"LEIST.GAD\");\n    await this.setSidebarActiveTab(\"status\");\n    this.setSize(size);\n  }\n\n  public setSize(size: Point) {\n    this.sidebar.position.x = size.x - SIDEBAR_WIDTH;\n    this.sidebarDetails.position.copyFrom(this.sidebar.position);\n    this.bottomBar.position.y = size.y - BOTTOMBAR_HEIGHT;\n  }\n\n  public setSimulationSpeed(speed: SimulationSpeed) {\n    this.simulationSpeedDisplay.text = `Simulation speed: ${speed}.`;\n  }\n\n  public setMoney = (money: number) => {\n    this.money.text = `Money: ${money}`;\n  };\n\n  public setOperatingCosts = (costs: number) => {\n    this.infoModel.setOperatingCosts(costs);\n  };\n\n  public setStatusAreaContent = async (content: StatusAreaContent) => {\n    switch (content) {\n      case \"status\":\n        await this.menuRenderer.renderScreen(\n          this.sidebarDetails,\n          \"INFO.GAD\",\n          this.infoModel\n        );\n        break;\n      case \"city-list\":\n        await this.menuRenderer.renderScreen(\n          this.sidebarDetails,\n          \"STADTLST.GAD\"\n        );\n\n        break;\n      case \"ship-list\":\n        await this.menuRenderer.renderScreen(\n          this.sidebarDetails,\n          \"SHIPLIST.GAD\"\n        );\n        break;\n      case \"diplomacy\":\n        await this.menuRenderer.renderScreen(\n          this.sidebarDetails,\n          \"VERTRAG.GAD\"\n        );\n        break;\n      default:\n        assertNever(content);\n    }\n  };\n\n  public setSidebarActiveTab = async (tab: SidebarTab) => {\n    switch (tab) {\n      case \"build\":\n        await this.menuRenderer.renderScreen(this.sidebarDetails, \"BAU.GAD\");\n        break;\n      case \"battle\":\n        this.sidebarDetails.removeChildren();\n        break;\n      case \"status\":\n        await this.menuRenderer.renderScreen(\n          this.sidebarDetails,\n          \"INFO.GAD\",\n          this.infoModel\n        );\n        break;\n      case \"options\":\n        await this.menuRenderer.renderScreen(\n          this.sidebarDetails,\n          \"OPTION.GAD\",\n          {\n            onLoad: () => {},\n            buttons: {},\n            texts: {\n              47002: this.translator.translate(\"game.settings\"),\n              47031: \"640x480\",\n              47032: \"800x600\",\n              47033: \"1024x768\"\n            },\n            ignore: []\n          }\n        );\n        break;\n      default:\n        assertNever(tab);\n    }\n  };\n\n  public async showProducer(\n    producer: Producer,\n    island: Island,\n    city: City,\n    field: Field,\n    fieldType: FieldType\n  ) {\n    if (\n      fieldType.production.kind === \"FISCHEREI\" ||\n      fieldType.production.kind === \"JAGDHAUS\" ||\n      fieldType.production.kind === \"PLANTAGE\" ||\n      fieldType.production.kind === \"WEIDETIER\"\n    ) {\n      await this.showProducerFarm(producer, city, field, fieldType);\n    } else if (fieldType.production.kind === \"HANDWERK\") {\n      await this.showProducerHandwerk(producer, city, field, fieldType);\n    } else if (fieldType.production.kind === \"BERGWERK\") {\n      await this.showProducerMine(producer, city, field, fieldType);\n    } else if (\n      fieldType.production.kind === \"KIRCHE\" ||\n      fieldType.production.kind === \"KAPELLE\" ||\n      fieldType.production.kind === \"WIRT\" ||\n      fieldType.production.kind === \"THEATER\" ||\n      fieldType.production.kind === \"BADEHAUS\" ||\n      fieldType.production.kind === \"KLINIK\" ||\n      fieldType.production.kind === \"HOCHSCHULE\" ||\n      fieldType.production.kind === \"SCHULE\" ||\n      fieldType.production.kind === \"BRUNNEN\" ||\n      fieldType.production.kind === \"SCHLOSS\" ||\n      fieldType.production.kind === \"GALGEN\"\n    ) {\n      await this.showProducerPublicBuilding(producer, city, field, fieldType);\n    }\n  }\n\n  private async showProducerFarm(\n    producer: Producer,\n    city: City,\n    field: Field,\n    fieldType: FieldType\n  ) {\n    const texts: Record<number, string> = {\n      41002: city.name,\n      41003: this.translator.translate(\"game.workload\"),\n      41004: this.translator\n        .translate(\"game.n_percent\")\n        .replace(\"%d\", \"???\")\n        .replace(\"%%\", \"%\"),\n      41005: this.translator.translate(\"game.operating_cost\"),\n      41006: producer.isActive()\n        ? fieldType.production.upkeep.active.toString()\n        : fieldType.production.upkeep.inactive.toString(),\n      41008: this.translator.getFieldName(field.fieldId),\n      41022: this.translator\n        .translate(\"game.n_tons\")\n        .replace(\"%d\", (producer.stock >> 5).toString())\n    };\n\n    await this.menuRenderer.renderScreen(this.sidebarDetails, \"PLANTAGE.GAD\", {\n      buttons: {\n        41009: (_, pauseProduction) => producer.setActive(!pauseProduction),\n        41010: (_, dontTakeGoods) =>\n          producer.setGoodsAllowedForPickup(!dontTakeGoods)\n      },\n      texts,\n      ignore: [],\n      onLoad: async container => {\n        const textures = await this.spriteLoader.getTextures(\"TOOLS/TOOLS\");\n        const goodSprite = container.getChildByName(\"menu-41021\") as Sprite;\n        goodSprite.texture = textures.get(\n          this.WARE_ICON_OFFSET + fieldType.production.good\n        )!;\n      }\n    });\n  }\n\n  private async showProducerPublicBuilding(\n    producer: Producer,\n    city: City,\n    field: Field,\n    fieldType: FieldType\n  ) {\n    const texts: Record<number, string> = {\n      62002: city.name,\n      62003: this.translator.translate(\"game.operating_cost\"),\n      62004: producer.isActive()\n        ? fieldType.production.upkeep.active.toString()\n        : fieldType.production.upkeep.inactive.toString(),\n      62006: this.translator.getFieldName(field.fieldId)\n    };\n\n    await this.menuRenderer.renderScreen(this.sidebarDetails, \"INFRA.GAD\", {\n      buttons: {},\n      texts,\n      ignore: [],\n      onLoad: async container => {\n        const textures = await this.spriteLoader.getTextures(\"TOOLS/TOOLS\");\n        const sprite = container.getChildByName(\"menu-62021\") as Sprite;\n        sprite.texture = textures.get(getIconId(field.fieldId))!;\n      }\n    });\n  }\n\n  private async showProducerMine(\n    producer: Producer,\n    city: City,\n    field: Field,\n    fieldType: FieldType\n  ) {\n    const texts: Record<number, string> = {\n      46002: city.name,\n      46003: this.translator.translate(\"game.operating_cost\"),\n      46004: producer.isActive()\n        ? fieldType.production.upkeep.active.toString()\n        : fieldType.production.upkeep.inactive.toString(),\n      46006: this.translator.getFieldName(field.fieldId),\n      46022: this.translator\n        .translate(\"game.n_tons\")\n        .replace(\"%d\", (producer.stock >> 5).toString())\n    };\n\n    await this.menuRenderer.renderScreen(this.sidebarDetails, \"BERGWERK.GAD\", {\n      buttons: {\n        46009: (_, pauseProduction) => producer.setActive(!pauseProduction),\n        46010: (_, dontTakeGoods) =>\n          producer.setGoodsAllowedForPickup(!dontTakeGoods)\n      },\n      texts,\n      ignore: [],\n      onLoad: async container => {\n        const textures = await this.spriteLoader.getTextures(\"TOOLS/TOOLS\");\n        const goodSprite = container.getChildByName(\"menu-46021\") as Sprite;\n        goodSprite.texture = textures.get(\n          this.WARE_ICON_OFFSET + fieldType.production.good\n        )!;\n      }\n    });\n  }\n\n  private async showProducerShipyard(\n    producer: Producer,\n    city: City,\n    field: Field,\n    fieldType: FieldType\n  ) {\n    const texts: Record<number, string> = {\n      41002: city.name,\n      41003: this.translator.translate(\"game.workload\"),\n      41004: this.translator\n        .translate(\"game.n_percent\")\n        .replace(\"%d\", \"???\")\n        .replace(\"%%\", \"%\"),\n      41005: this.translator.translate(\"game.operating_cost\"),\n      41006: producer.isActive()\n        ? fieldType.production.upkeep.active.toString()\n        : fieldType.production.upkeep.inactive.toString(),\n      41008: this.translator.getFieldName(field.fieldId),\n      41022: this.translator\n        .translate(\"game.n_tons\")\n        .replace(\"%d\", (producer.stock >> 5).toString())\n    };\n\n    await this.menuRenderer.renderScreen(this.sidebarDetails, \"WERFT.GAD\", {\n      buttons: {\n        41009: (_, pauseProduction) => producer.setActive(!pauseProduction),\n        41010: (_, dontTakeGoods) =>\n          producer.setGoodsAllowedForPickup(!dontTakeGoods)\n      },\n      texts,\n      ignore: [],\n      onLoad: async container => {\n        const textures = await this.spriteLoader.getTextures(\"TOOLS/TOOLS\");\n        const goodSprite = container.getChildByName(\"menu-41021\") as Sprite;\n        goodSprite.texture = textures.get(\n          this.WARE_ICON_OFFSET + fieldType.production.good\n        )!;\n      }\n    });\n  }\n\n  private async showProducerHandwerk(\n    producer: Producer,\n    city: City,\n    field: Field,\n    fieldType: FieldType\n  ) {\n    const usesTwoInputGoods = fieldType.production.good2;\n\n    const texts: Record<number, string> = {\n      37002: city.name,\n      37003: this.translator.translate(\"game.workload\"),\n      37004: this.translator\n        .translate(\"game.n_percent\")\n        .replace(\"%d\", \"???\")\n        .replace(\"%%\", \"%\"),\n      37005: this.translator.translate(\"game.operating_cost\"),\n      37006: producer.isActive()\n        ? fieldType.production.upkeep.active.toString()\n        : fieldType.production.upkeep.inactive.toString(),\n      37008: this.translator.getFieldName(field.fieldId)\n    };\n    const ignore: number[] = [];\n    if (usesTwoInputGoods) {\n      texts[37032] = this.translator\n        .translate(\"game.n_tons\")\n        .replace(\"%d\", (producer.secondGoodStock >> 5).toString());\n      texts[37036] = this.translator\n        .translate(\"game.n_tons\")\n        .replace(\"%d\", (producer.firstGoodStock >> 5).toString());\n      texts[37040] = this.translator\n        .translate(\"game.n_tons\")\n        .replace(\"%d\", (producer.stock >> 5).toString());\n      ignore.push(...[37021, 37022, 37023, 37024, 37025, 37026, 37027]);\n    } else {\n      texts[37022] = this.translator\n        .translate(\"game.n_tons\")\n        .replace(\"%d\", (producer.firstGoodStock >> 5).toString());\n      texts[37026] = this.translator\n        .translate(\"game.n_tons\")\n        .replace(\"%d\", (producer.stock >> 5).toString());\n      ignore.push(\n        ...[\n          37031,\n          37032,\n          37033,\n          37034,\n          37035,\n          37036,\n          37037,\n          37038,\n          37039,\n          37040,\n          37041\n        ]\n      );\n    }\n\n    await this.menuRenderer.renderScreen(this.sidebarDetails, \"PROD.GAD\", {\n      buttons: {\n        37009: (_, pauseProduction) => producer.setActive(!pauseProduction),\n        37010: (_, dontTakeGoods) =>\n          producer.setGoodsAllowedForPickup(!dontTakeGoods)\n      },\n      texts,\n      ignore,\n      onLoad: async container => {\n        const textures = await this.spriteLoader.getTextures(\"TOOLS/TOOLS\");\n        if (usesTwoInputGoods) {\n          const good1Sprite = container.getChildByName(\"menu-37035\") as Sprite;\n          good1Sprite.texture = textures.get(\n            this.WARE_ICON_OFFSET + fieldType.production.good2\n          )!;\n\n          const good2Sprite = container.getChildByName(\"menu-37031\") as Sprite;\n          good2Sprite.texture = textures.get(\n            this.WARE_ICON_OFFSET + fieldType.production.good1\n          )!;\n\n          const goodSprite = container.getChildByName(\"menu-37039\") as Sprite;\n          goodSprite.texture = textures.get(\n            this.WARE_ICON_OFFSET + fieldType.production.good\n          )!;\n        } else {\n          const good1Sprite = container.getChildByName(\"menu-37021\") as Sprite;\n          good1Sprite.texture = textures.get(\n            this.WARE_ICON_OFFSET + fieldType.production.good1\n          )!;\n\n          const goodSprite = container.getChildByName(\"menu-37025\") as Sprite;\n          goodSprite.texture = textures.get(\n            this.WARE_ICON_OFFSET + fieldType.production.good\n          )!;\n        }\n      }\n    });\n  }\n\n  public setHoveredPosition(pos: Point, island?: Island) {\n    this.coordinates.text = `x: ${pos.x}, y: ${pos.y}`;\n\n    if (island) {\n      const localPosition = new Point(\n        pos.x - island.position.x,\n        pos.y - island.position.y\n      );\n\n      this.islandNumber.text = `Island id: ${island.id}, x: ${localPosition.x} y: ${localPosition.y}`;\n\n      /*\n      const producer = this.game.state.producers.find(\n        each =>\n          each.islandId === island.id &&\n          each.position.x === localPosition.x &&\n          each.position.y === localPosition.y\n      );\n      if (producer) {\n        const fieldData = this.game.getFieldAtIsland(\n          island,\n          producer.position\n        )!;\n        const fieldConfig = this.configLoader\n          .getFieldData()\n          .get(fieldData.fieldId)!;\n\n        producerInfo.text = `Producer: Stock: ${producer.stock / 32} (max: ${\n          fieldConfig.production.maxStock\n        }, good: ${\n          fieldConfig.production.good\n        }), Good A: ${producer.firstGoodStock / 32} (required: ${\n          fieldConfig.production.amount1\n        }, good: ${\n          fieldConfig.production.good1\n        }), Good B: ${producer.secondGoodStock / 32} (required: ${\n          fieldConfig.production.amount2\n        }, good: ${\n          fieldConfig.production.good2\n        }),\\n Active: ${producer.isActive()}, Timer: ${\n          producer.timer\n        }, Rotation: ${fieldData.rotation}`;\n      } else {\n        producerInfo.text = \"No Producer\";\n      }\n      */\n    } else {\n      this.islandNumber.text = `Island id: ?`;\n    }\n  }\n}\n","import { AnimatedSprite, Point, Sprite, Texture } from \"pixi.js\";\nimport AnimationRenderer from \"./animation-renderer\";\nimport GameRenderer from \"./game-renderer\";\nimport { TILE_HEIGHT, TILE_WIDTH } from \"./island-renderer\";\nimport { SpriteWithPosition } from \"./island-sprite-loader\";\nimport { Rotation4 } from \"./world/world\";\n\nexport type GroundFieldType =\n  | \"BODEN\"\n  | \"FLUSS\"\n  | \"FLUSSECK\"\n  | \"HANG\"\n  | \"HANGQUELL\"\n  | \"HANGECK\"\n  | \"STRAND\"\n  | \"STRANDMUND\"\n  | \"STRANDECKI\"\n  | \"STRANDECKA\"\n  | \"STRANDVARI\"\n  | \"BRANDUNG\"\n  | \"BRANDECK\"\n  | \"MEER\"\n  | \"FELS\"\n  | \"MUENDUNG\";\n\nexport type LandFieldType =\n  | GroundFieldType\n  | \"STRANDRUINE\"\n  | \"PIER\"\n  | \"WALD\"\n  | \"RUINE\"\n  | \"STRANDHAUS\"\n  | \"HAFEN\";\n\nexport type BuildingFieldType =\n  | \"GEBAEUDE\"\n  | \"HQ\" // Kontor\n  | \"STRASSE\"\n  | \"BRUECKE\"\n  | \"PLATZ\"\n  | \"WMUEHLE\"\n  | \"MINE\"\n  | \"MAUER\"\n  | \"MAUERSTRAND\"\n  | \"TOR\"\n  | \"TURM\"\n  | \"TURMSTRAND\";\n\nexport type FieldKind = LandFieldType | BuildingFieldType;\n\nexport enum GoodIds {\n  NOWARE,\n  ALLWARE,\n  EISENERZ,\n  GOLD,\n  WOLLE,\n  ZUCKER,\n  TABAK,\n  FLEISCH,\n  KORN,\n  MEHL,\n  EISEN,\n  SCHWERTER,\n  MUSKETEN,\n  KANONEN,\n  NAHRUNG,\n  TABAKWAREN,\n  GEWUERZE,\n  KAKAO,\n  ALKOHOL,\n  STOFFE,\n  KLEIDUNG,\n  SCHMUCK,\n  WERKZEUG,\n  HOLZ,\n  ZIEGEL,\n  wSOLDAT1,\n  wSOLDAT2,\n  wSOLDAT3,\n  wSOLDAT4,\n  wKAVALERIE1,\n  wKAVALERIE2,\n  wKAVALERIE3,\n  wKAVALERIE4,\n  wMUSKETIER1,\n  wMUSKETIER2,\n  wMUSKETIER3,\n  wMUSKETIER4,\n  wKANONIER1,\n  wKANONIER2,\n  wKANONIER3,\n  wKANONIER4,\n  // No icons for these\n  wPIONIER1,\n  wPIONIER2,\n  wPIONIER3,\n  wPIONIER4,\n  GETREIDE,\n  TABAKBAUM,\n  GEWUERZBAUM,\n  ZUCKERROHR,\n  BAUMWOLLE,\n  WEINTRAUBEN,\n  KAKAOBAUM,\n  GRAS,\n  BAUM,\n  STEINE,\n  ERZE,\n  WILD,\n  FISCHE,\n  SCHATZ\n}\n\nexport type ProductionKind =\n  | \"UNUSED\"\n  | \"ROHSTWACHS\"\n  | \"ROHSTOFF\"\n  | \"FISCHEREI\"\n  | \"KONTOR\"\n  | \"WERFT\"\n  | \"ROHSTERZ\"\n  | \"pMAUER\"\n  | \"WACHTURM\"\n  | \"MILITAR\"\n  | \"HANDWERK\"\n  | \"STEINBRUCH\"\n  | \"BERGWERK\"\n  | \"PLANTAGE\"\n  | \"JAGDHAUS\"\n  | \"WEIDETIER\"\n  | \"WOHNUNG\"\n  | \"PIRATWOHN\"\n  | \"KIRCHE\"\n  | \"KAPELLE\"\n  | \"WIRT\"\n  | \"THEATER\"\n  | \"BADEHAUS\"\n  | \"MARKT\"\n  | \"KLINIK\"\n  | \"HOCHSCHULE\"\n  | \"SCHULE\"\n  | \"BRUNNEN\"\n  | \"SCHLOSS\"\n  | \"GALGEN\"\n  | \"DENKMAL\"\n  | \"TRIUMPH\";\n\nexport default class FieldType {\n  public readonly id: number;\n  public readonly gfxId: number;\n  public readonly iconGfxId: number;\n  public readonly kind: FieldKind;\n  public readonly size: Point;\n  public readonly rotate: number;\n  public readonly animAdd: number;\n  public readonly yOffset: number;\n  public readonly animTime: number;\n  public readonly animAnz: number;\n  public readonly production: {\n    kind: ProductionKind;\n    good: number;\n    upkeep: {\n      active: number;\n      inactive: number;\n    };\n    good1: number;\n    good2: number;\n    amount: number;\n    amount1: number;\n    amount2: number;\n    radius: number;\n    interval: number;\n    maxStock: number;\n    smokeAnimationNames: string[];\n  };\n\n  constructor(config: any) {\n    this.id = config.Id;\n    this.gfxId = config.Gfx;\n    this.iconGfxId = config.Baugfx;\n    this.kind = config.Kind;\n    this.size = new Point(config.Size.x, config.Size.y);\n    this.rotate = config.Rotate;\n    this.animAdd = config.AnimAdd;\n    this.animAnz = config.AnimAnz;\n    this.animTime = config.AnimTime === \"TIMENEVER\" ? -1 : config.AnimTime;\n    this.yOffset = -config.Posoffs;\n\n    const productionConfig = config.nested_objects.HAUS_PRODTYP[0];\n    const upkeep = {\n      active: 0,\n      inactive: 0\n    };\n    if (Array.isArray(productionConfig.Kosten)) {\n      upkeep.active = productionConfig.Kosten[0];\n      upkeep.inactive = productionConfig.Kosten[1];\n    } else {\n      upkeep.active = upkeep.inactive =\n        productionConfig.Kosten !== undefined ? productionConfig.Kosten : 0;\n    }\n    this.production = {\n      kind: productionConfig.Kind,\n      good: this.goodNameToId(productionConfig.Ware),\n      upkeep,\n      good1: this.goodNameToId(productionConfig.Rohstoff),\n      good2: this.goodNameToId(productionConfig.Workstoff),\n      amount: productionConfig.Prodmenge,\n      amount1: productionConfig.Rohmenge,\n      amount2:\n        productionConfig.Workmenge !== undefined\n          ? productionConfig.Workmenge\n          : 0,\n      radius:\n        productionConfig.Radius === \"RADIUS_MARKT\" ||\n        productionConfig.Radius === \"RADIUS_HQ\"\n          ? 16\n          : productionConfig.Radius,\n      interval: productionConfig.Interval,\n      maxStock: productionConfig.Maxlager,\n      smokeAnimationNames: Array.isArray(productionConfig.Rauchfignr)\n        ? productionConfig.Rauchfignr\n        : productionConfig.Rauchfignr\n        ? [productionConfig.Rauchfignr]\n        : []\n    };\n  }\n\n  private goodNameToId(name: string | undefined): GoodIds {\n    if (name === undefined) {\n      return GoodIds.NOWARE;\n    }\n    // @ts-ignore\n    const id = GoodIds[name];\n    if (id === undefined) {\n      throw new Error(`Invalid good name ${name}.`);\n    }\n    return id;\n  }\n\n  public async getSprites(\n    playerId: number,\n    islandPosition: Point,\n    fieldPos: Point,\n    rotation: Rotation4,\n    animationStep: number,\n    textures: Map<number, Texture>,\n    animationRenderer: AnimationRenderer\n  ) {\n    const smokeAnimations: AnimatedSprite[] = [];\n    const sprites: SpriteWithPosition[] = [];\n    const sx = rotation % 2 === 0 ? this.size.x : this.size.y;\n    const sy = rotation % 2 === 0 ? this.size.y : this.size.x;\n    for (let y = 0; y < sy; y++) {\n      for (let x = 0; x < sx; x++) {\n        const xx = fieldPos.x + x;\n        const yy = fieldPos.y + y;\n        const { x: worldX, y: worldY } = GameRenderer.fieldPosToWorldPos(\n          new Point(xx, yy)\n        );\n\n        let sprite: Sprite | AnimatedSprite;\n        if (this.animAdd === 0 || this.animTime === -1) {\n          const texture = this.getTexture(\n            x,\n            y,\n            rotation,\n            animationStep,\n            textures\n          );\n          sprite = new Sprite(texture);\n        } else {\n          const animatedTextures = [];\n          for (let i = 0; i < this.animAnz; i++) {\n            animatedTextures.push(this.getTexture(x, y, rotation, i, textures));\n          }\n          const animatedSprite = new AnimatedSprite(animatedTextures);\n          animatedSprite.animationSpeed =\n            (1.0 / 60.0) * (1000.0 / this.animTime);\n          animatedSprite.play();\n          sprite = animatedSprite;\n        }\n        // Set bottom left corner of sprite as origin.\n        sprite.anchor.set(0, 1);\n        sprite.x = worldX;\n        sprite.y = worldY + this.yOffset;\n        sprites.push({\n          sprite: sprite,\n          pixelPosition: new Point(sprite.x, sprite.y),\n          mapPosition: new Point(xx, yy),\n          mapPositionOnIsland: new Point(\n            xx - islandPosition.x,\n            yy - islandPosition.y\n          )\n        });\n      }\n    }\n\n    if (this.production.smokeAnimationNames) {\n      const { x: worldX, y: worldY } = GameRenderer.fieldPosToWorldPos(\n        new Point(fieldPos.x, fieldPos.y)\n      );\n      await Promise.all(\n        this.production.smokeAnimationNames.map(async smokeAnimationName => {\n          if (smokeAnimationName === \"FAHNEKONTOR\") {\n            // The pirate kontor actually uses an invalid animation name. That appears to be a bug in Anno1602 itself.\n            return;\n          }\n\n          const smokeAnimation = await animationRenderer.getAnimation(\n            smokeAnimationName\n          );\n          const animation =\n            Object.keys(smokeAnimation.animations).length > 1\n              ? smokeAnimation.animations[playerId]\n              : smokeAnimation.animations[0];\n          const smokeSprite = animation.rotations[0].main;\n\n          smokeSprite.x =\n            worldX -\n            Math.floor(smokeSprite.width / 2) + // calculate smoke center position\n            TILE_WIDTH * 0.75 -\n            (sy - sx + 1) * (TILE_WIDTH * 0.25) + // move to building center\n            Math.floor(\n              ((smokeAnimation.config.Fahnoffs[0] *\n                (rotation === 0 || rotation === 3 ? 1 : -1) -\n                smokeAnimation.config.Fahnoffs[1] *\n                  (rotation === 0 || rotation === 1 ? 1 : -1)) *\n                TILE_WIDTH) /\n                2\n            );\n\n          smokeSprite.y =\n            worldY -\n            TILE_HEIGHT / 2 +\n            (sx + sy - 2) * TILE_HEIGHT * 0.25 + // move bottom of smoke to building center\n            Math.floor(\n              ((smokeAnimation.config.Fahnoffs[0] *\n                (rotation === 0 || rotation === 1 ? 1 : -1) +\n                smokeAnimation.config.Fahnoffs[1] *\n                  (rotation === 0 || rotation === 3 ? 1 : -1)) *\n                TILE_HEIGHT) /\n                2\n            ) -\n            Math.floor(TILE_HEIGHT * smokeAnimation.config.Fahnoffs[2]);\n          smokeSprite.anchor = new Point(0, 1);\n          smokeAnimations.push(smokeSprite);\n\n          if (smokeAnimationName.startsWith(\"RAUCH\")) {\n            // TODO: This doesn't quite look like the original, but works for now.\n            smokeSprite.alpha = 0.7;\n          }\n        })\n      );\n    }\n\n    return { sprites, smokeAnimations };\n  }\n\n  private getTexture(\n    x: number,\n    y: number,\n    rotation: Rotation4,\n    animationStep: number,\n    textures: Map<number, Texture>\n  ): Texture {\n    let tileId = this.gfxId;\n    if (this.rotate > 0) {\n      tileId += rotation * this.size.x * this.size.y;\n    }\n    tileId += animationStep * this.animAdd;\n\n    if (rotation === 0) {\n      tileId += y * this.size.x + x;\n    } else if (rotation === 1) {\n      tileId +=\n        this.size.x * this.size.y -\n        1 -\n        (x * this.size.x + (this.size.x - 1 - y));\n    } else if (rotation === 2) {\n      tileId += (this.size.y - 1 - y) * this.size.x + (this.size.x - 1 - x);\n    } else if (rotation === 3) {\n      tileId += x * this.size.x + (this.size.x - 1 - y);\n    } else {\n      throw new Error(`Invalid building rotation: ${rotation}.`);\n    }\n\n    const texture = textures.get(tileId);\n    if (texture === undefined) {\n      throw new Error(`Could not load texture ${tileId}.`);\n    }\n\n    return texture;\n  }\n}\n","import { Key, KeyboardManager, Keys } from \"pixi-keyboard\";\nimport { Viewport } from \"pixi-viewport\";\nimport {\n  Application,\n  Container,\n  Graphics,\n  interaction,\n  Point,\n  Sprite,\n  Text,\n  Texture,\n  Rectangle\n} from \"pixi.js\";\nimport { from, fromEvent, merge } from \"rxjs\";\nimport {\n  auditTime,\n  startWith,\n  map,\n  distinctUntilChanged\n} from \"rxjs/operators\";\nimport { make2DArray } from \"../util/util\";\nimport AnimationRenderer from \"./animation-renderer\";\nimport ConfigLoader from \"./config-loader\";\nimport Game from \"./game\";\nimport { LAND_OFFSET, TILE_HEIGHT, TILE_WIDTH } from \"./island-renderer\";\nimport IslandSpriteLoader from \"./island-sprite-loader\";\nimport { RenderedShip } from \"./renderer/isometric/renderered-ship\";\nimport { Island } from \"./world/island\";\nimport { SHIP_TYPES } from \"./world/ship\";\nimport { SimulationSpeed } from \"./world/world\";\nimport { isWithinRadius } from \"./radius\";\nimport MenuStructure from \"./menu-structure\";\nimport { HUD } from \"./renderer/isometric/hud\";\nimport { Translator } from \"../translation/translator\";\nimport SpriteLoader from \"../sprite-loader\";\n\nexport default class GameRenderer {\n  public static fieldPosToWorldPos(fieldPos: Point) {\n    const xx = fieldPos.x;\n    const yy = fieldPos.y;\n    const worldX = (xx - yy) * (TILE_WIDTH / 2);\n    const worldY = (xx + yy) * (TILE_HEIGHT / 2);\n    return new Point(worldX, worldY);\n  }\n\n  public static landFieldPosToWorldPos(fieldPos: Point) {\n    const result = this.fieldPosToWorldPos(fieldPos);\n    result.y += LAND_OFFSET;\n    return result;\n  }\n\n  /**\n   * Converts PIXI world coordinates to isometric coordinates.\n   * Please note that these are *sea-level* coordinates. Use\n   * worldPosToFieldPosLand for *land-level* coordinates.\n   */\n  public static worldPosToFieldPos(worldPos: Point) {\n    const x =\n      (worldPos.x / (TILE_WIDTH / 2) + worldPos.y / (TILE_HEIGHT / 2)) / 2;\n    const y =\n      (worldPos.y / (TILE_HEIGHT / 2) - worldPos.x / (TILE_WIDTH / 2)) / 2;\n\n    return new Point(Math.round(x), Math.round(y) + 1);\n  }\n\n  public static worldPosToFieldPosLand(worldPos: Point) {\n    const adjustedWorldPos = new Point();\n    adjustedWorldPos.copyFrom(worldPos);\n    adjustedWorldPos.y -= LAND_OFFSET;\n\n    return this.worldPosToFieldPos(adjustedWorldPos);\n  }\n\n  private readonly WIDTH = 500;\n  private readonly HEIGHT = 350;\n  private fields: Array<Array<Sprite | null>>;\n  private readonly keyboardManager: KeyboardManager;\n  private readonly hud: HUD;\n  private readonly interactionManager: interaction.InteractionManager;\n\n  constructor(\n    private readonly game: Game,\n    private readonly islandSpriteLoader: IslandSpriteLoader,\n    private readonly app: Application,\n    private readonly viewport: Viewport,\n    private readonly configLoader: ConfigLoader,\n    private readonly animationRenderer: AnimationRenderer,\n    private readonly menuRenderer: MenuStructure,\n    translator: Translator,\n    spriteLoader: SpriteLoader,\n    private readonly myPlayerId: number\n  ) {\n    this.keyboardManager = new KeyboardManager();\n    this.setupHotKeys();\n\n    const hudContainer = new Container();\n    this.hud = new HUD(\n      this,\n      this.menuRenderer,\n      translator,\n      spriteLoader,\n      hudContainer\n    );\n    app.stage.addChild(hudContainer);\n    this.interactionManager = this.app.renderer.plugins.interaction;\n  }\n\n  public async begin() {\n    this.viewport.removeChildren();\n\n    this.keyboardManager.enable();\n    this.app.ticker.add(() => {\n      // Necessary to update key down state used for moving around.\n      this.keyboardManager.update();\n    });\n\n    await this.hud.begin(\n      new Point(this.viewport.screenWidth, this.viewport.screenHeight)\n    );\n    this.sendHoveredPositionsToHUD();\n\n    // Render islands\n    const spritesPerIsland = await Promise.all(\n      Object.values(this.game.state.islands).map(island =>\n        this.islandSpriteLoader.getIslandSprites(island)\n      )\n    );\n    console.log(\"Map sprites loaded.\");\n\n    spritesPerIsland.forEach(spritesOfIsland => {\n      spritesOfIsland.sprites.forEach(row =>\n        row\n          .filter(sprite => sprite !== null)\n          .forEach(sprite => this.viewport.addChild(sprite!.sprite))\n      );\n      spritesOfIsland.smokeSprites.forEach(smokeSprite => {\n        this.viewport.addChild(smokeSprite);\n        smokeSprite.play();\n      });\n    });\n    console.log(\"Map sprites drawn.\");\n\n    const fields = make2DArray<Sprite>(this.WIDTH, this.HEIGHT);\n    spritesPerIsland.forEach(spritesOfIsland =>\n      spritesOfIsland.sprites.forEach(row =>\n        row\n          .filter(sprite => sprite !== null)\n          .forEach(\n            sprite =>\n              (fields[sprite!.mapPosition.x][\n                sprite!.mapPosition.y\n              ] = sprite!.sprite)\n          )\n      )\n    );\n\n    // TODO: Hack to find the water texture.\n    let waterTexture: Texture | null = null;\n    for (let x = 0; x < this.WIDTH && !waterTexture; x++) {\n      for (let y = 0; y < this.HEIGHT; y++) {\n        if (fields[x][y]) {\n          waterTexture = fields[x][y]!.texture;\n          break;\n        }\n      }\n    }\n\n    // Fill in water between islands\n    fields.forEach((row, x) =>\n      row.forEach((field, y) => {\n        if (field === null) {\n          // TODO: This should be an animated sprite.\n          const sprite = new Sprite(waterTexture!);\n\n          const { x: worldX, y: worldY } = GameRenderer.fieldPosToWorldPos(\n            new Point(x, y)\n          );\n          // Set bottom left corner of sprite as origin.\n          sprite.anchor.set(0, 1);\n          sprite.x = worldX;\n          sprite.y = worldY;\n\n          fields[x][y] = sprite;\n          this.viewport.addChild(sprite);\n        }\n      })\n    );\n    this.fields = fields;\n\n    // Render ships\n    await this.renderShips();\n\n    // Render soldiers\n    // ...\n\n    this.moveCameraToStartPosition(this.myPlayerId);\n\n    merge(\n      from([\"initial\"]),\n      fromEvent(this.viewport, \"zoomed\"),\n      fromEvent(this.viewport, \"moved\")\n    )\n      .pipe(auditTime(200))\n      .subscribe(this.cull);\n\n    this.interactionManager.on(\"mouseup\", async () => {\n      const pos = GameRenderer.worldPosToFieldPosLand(\n        this.viewport.toWorld(this.interactionManager.mouse.global)\n      );\n      const island = Object.values(this.game.state.islands).find(each =>\n        each.positionRect.contains(pos.x, pos.y)\n      );\n      if (!island) {\n        return;\n      }\n      const localPosition = new Point(\n        pos.x - island.position.x,\n        pos.y - island.position.y\n      );\n      const producersWithConfig = this.game.state.producers\n        .filter(producer => producer.islandId === island.id)\n        .map(producer => {\n          const fieldData = this.game.getFieldAtIsland(\n            island,\n            producer.position\n          )!;\n          const fieldConfig = this.configLoader\n            .getFieldData()\n            .get(fieldData.fieldId)!;\n          return {\n            producer,\n            config: fieldConfig,\n            field: fieldData,\n            localPositionRect: new Rectangle(\n              producer.position.x,\n              producer.position.y,\n              fieldData.rotation % 2 === 0\n                ? fieldConfig.size.x\n                : fieldConfig.size.y,\n              fieldData.rotation % 2 === 0\n                ? fieldConfig.size.y\n                : fieldConfig.size.x\n            )\n          };\n        });\n      const producerWithConfig = producersWithConfig.find(each =>\n        each.localPositionRect.contains(localPosition.x, localPosition.y)\n      );\n      if (!producerWithConfig) {\n        return;\n      }\n      const city = this.game.state.cities.find(\n        city =>\n          city.islandId === island.id &&\n          city.cityIslandNum === producerWithConfig.field.islandCityNum\n      );\n      if (!city) {\n        return;\n      }\n\n      await this.hud.showProducer(\n        producerWithConfig.producer,\n        island,\n        city,\n        producerWithConfig.field,\n        producerWithConfig.config\n      );\n    });\n\n    this.game.addListener(\"player/money\", ({ playerId, money }) => {\n      if (playerId === this.myPlayerId) {\n        this.hud.setMoney(money);\n      }\n    });\n    this.game.addListener(\n      \"producer/good-produced\",\n      ({ island, position, stock }) => {\n        this.onProduced(island, position, stock);\n      }\n    );\n    this.game.addListener(\"simulation-speed\", speed =>\n      this.hud.setSimulationSpeed(speed)\n    );\n    this.game.addListener(\"player/upkeep\", ({ playerId, upkeep }) => {\n      if (playerId === this.myPlayerId) {\n        this.hud.setOperatingCosts(upkeep);\n      }\n    });\n\n    const highlightField = (\n      annoX: number,\n      annoY: number,\n      color: number = 0xff0000\n    ) => {\n      let { x, y } = GameRenderer.landFieldPosToWorldPos(\n        new Point(annoX, annoY)\n      );\n      x += TILE_WIDTH / 2;\n      y -= TILE_HEIGHT;\n      const tmp = new Graphics();\n      tmp.beginFill(color);\n      tmp.alpha = 0.2;\n      tmp.visible = this.showRadiusOfAllBuildings;\n      tmp.drawPolygon([\n        new Point(x, y),\n        new Point(x + TILE_WIDTH / 2, y + TILE_HEIGHT / 2),\n        new Point(x, y + TILE_HEIGHT),\n        new Point(x - TILE_WIDTH / 2, y + TILE_HEIGHT / 2)\n      ]);\n      this.radiusSprites.push(tmp);\n      this.viewport.addChild(tmp);\n    };\n\n    this.game.state.producers.forEach(producer => {\n      const island = this.game.state.islands[producer.islandId];\n\n      const base = new Point(\n        island.position.x + producer.position.x,\n        island.position.y + producer.position.y\n      );\n      const fieldData = this.game.getFieldAtIsland(island, producer.position)!;\n      const fieldConfig = this.configLoader\n        .getFieldData()\n        .get(fieldData.fieldId)!;\n      const size = fieldConfig.size;\n      const actualSizeX = fieldData.rotation % 2 === 0 ? size.x : size.y;\n      const actualSizeY = fieldData.rotation % 2 === 0 ? size.y : size.x;\n      const radius = fieldConfig.production.radius;\n\n      for (let x = 0; x < actualSizeX; x++) {\n        for (let y = 0; y < actualSizeY; y++) {\n          highlightField(base.x + x, base.y + y);\n        }\n      }\n\n      const buildingRectangle = new Rectangle(\n        base.x,\n        base.y,\n        actualSizeX,\n        actualSizeY\n      );\n      for (let x = -20; x < 20; x++) {\n        for (let y = -20; y < 20; y++) {\n          if (\n            isWithinRadius(\n              buildingRectangle,\n              radius,\n              new Point(base.x + x, base.y + y)\n            )\n          ) {\n            highlightField(base.x + x, base.y + y, 0xffff00);\n          }\n        }\n      }\n    });\n\n    // Karren Test\n    /*\n    const startFieldPos = new Point(239, 177);\n    const path = [\n      startFieldPos,\n      new Point(startFieldPos.x + 1, startFieldPos.y),\n      new Point(startFieldPos.x + 2, startFieldPos.y),\n      new Point(startFieldPos.x + 3, startFieldPos.y),\n      new Point(startFieldPos.x + 4, startFieldPos.y),\n      new Point(startFieldPos.x + 5, startFieldPos.y),\n      new Point(startFieldPos.x + 6, startFieldPos.y),\n      new Point(startFieldPos.x + 7, startFieldPos.y)\n    ];\n\n    const karrenAnimation = await this.animationRenderer.getAnimation(\"KARREN\");\n    const start = GameRenderer.landFieldPosToWorldPos(startFieldPos);\n    const karrenSprite = karrenAnimation.animations[1].rotations[2].main;\n    karrenSprite.x = start.x;\n    karrenSprite.y = start.y - karrenAnimation.config.Posoffs[1];\n    this.viewport.addChild(karrenSprite);\n    karrenSprite.play();\n\n    const currentPathIdx = 0;\n    this.app.ticker.add(() => {\n      const dx = path[currentPathIdx + 1].x - path[currentPathIdx].x;\n      const dy = path[currentPathIdx + 1].y - path[currentPathIdx].y;\n\n      const px = ((dx + dy) * TILE_WIDTH) / 2;\n      const py = ((dx + dy) * TILE_HEIGHT) / 2;\n\n      karrenSprite.x +=\n        (((1 / this.app.ticker.FPS) * 1000) / karrenAnimation.config.Speed) *\n        px;\n      karrenSprite.y +=\n        (((1 / this.app.ticker.FPS) * 1000) / karrenAnimation.config.Speed) *\n        py;\n    });\n    */\n  }\n\n  private async renderShips() {\n    const renderedShips = this.game.state.ships\n      // TODO: We ignore the land trader for now\n      .filter(ship => SHIP_TYPES[ship.type] !== \"TRADER1\")\n      .map(ship => new RenderedShip(ship.id, ship.playerId === 4));\n    await Promise.all(\n      this.game.state.ships\n        .filter(ship => SHIP_TYPES[ship.type] !== \"TRADER1\")\n        .map(ship =>\n          renderedShips\n            .find(each => each.id === ship.id)!\n            .begin(ship, this.animationRenderer)\n        )\n    );\n    this.game.state.ships\n      .filter(ship => SHIP_TYPES[ship.type] !== \"TRADER1\")\n      .forEach(ship => {\n        renderedShips\n          .find(each => each.id === ship.id)!\n          .render(ship, this.viewport);\n      });\n  }\n\n  private setupHotKeys() {\n    const showTaskKey = Key.F1;\n    this.keyboardManager.onKeyPressedWithPreventDefault(showTaskKey, () => {\n      const player = this.game.state.players[this.myPlayerId];\n      const assignedTask = this.game.state.tasks[player.assignedTaskId];\n      if (assignedTask !== undefined) {\n        console.info(assignedTask.text);\n      } else {\n        console.info(\"It appears like you have no task :/\");\n      }\n    });\n\n    const zoomKeys: Array<{ key: number; zoom: 1 | 2 | 3 }> = [\n      { key: Key.F2, zoom: 1 },\n      { key: Key.F3, zoom: 2 },\n      { key: Key.F4, zoom: 3 }\n    ];\n    for (const zoomKey of zoomKeys) {\n      this.keyboardManager.onKeyPressedWithPreventDefault(zoomKey.key, () =>\n        this.zoom(zoomKey.zoom)\n      );\n    }\n\n    const speedKeys = [\n      { keys: [Key.PAUSE], speed: SimulationSpeed.Paused },\n      { keys: [Key.F5], speed: SimulationSpeed.Slow },\n      { keys: [Key.F6], speed: SimulationSpeed.Medium },\n      { keys: [Key.F7], speed: SimulationSpeed.Fast },\n      { keys: [Key.SHIFT, Key.F8], speed: SimulationSpeed.SuperFast }\n    ];\n    for (const speedKey of speedKeys) {\n      this.keyboardManager.onKeysPressedWithPreventDefault(speedKey.keys, () =>\n        this.game.setSimulationSpeed(speedKey.speed)\n      );\n    }\n\n    const SCROLL_SPEED = 50;\n    [Key.LEFT, Key.RIGHT, Key.UP, Key.DOWN].forEach(key =>\n      this.keyboardManager.setPreventDefault(key)\n    );\n    this.keyboardManager.on(\"down\", (key: Keys) => {\n      console.log(\"key down\", key);\n      switch (key) {\n        case Key.LEFT:\n          this.viewport.moveCorner(\n            this.viewport.corner.x - SCROLL_SPEED,\n            this.viewport.corner.y\n          );\n          this.cull();\n          break;\n        case Key.RIGHT:\n          this.viewport.moveCorner(\n            this.viewport.corner.x + SCROLL_SPEED,\n            this.viewport.corner.y\n          );\n          this.cull();\n          break;\n        case Key.UP:\n          this.viewport.moveCorner(\n            this.viewport.corner.x,\n            this.viewport.corner.y - SCROLL_SPEED\n          );\n          this.cull();\n          break;\n        case Key.DOWN:\n          this.viewport.moveCorner(\n            this.viewport.corner.x,\n            this.viewport.corner.y + SCROLL_SPEED\n          );\n          this.cull();\n          break;\n        default:\n          break;\n      }\n    });\n\n    // TODO: Temporary and for debugging only\n    this.keyboardManager.onKeyPressedWithPreventDefault(Key.R, () => {\n      this.toggleShowRadiusOfAllBuildings();\n    });\n  }\n\n  private showRadiusOfAllBuildings = false;\n  private radiusSprites: Container[] = [];\n  private toggleShowRadiusOfAllBuildings() {\n    this.showRadiusOfAllBuildings = !this.showRadiusOfAllBuildings;\n    this.radiusSprites.forEach(\n      each => (each.visible = this.showRadiusOfAllBuildings)\n    );\n  }\n\n  private zoom(zoom: number) {\n    const center = this.viewport.center;\n    this.viewport.scale.set(1.0 / zoom);\n    this.viewport.moveCenter(center.x, center.y);\n    this.cull();\n  }\n\n  public zoomIn() {\n    const currentZoom = 1.0 / this.viewport.scale.x;\n    this.zoom(Math.max(1, currentZoom - 1));\n  }\n\n  public zoomOut() {\n    const currentZoom = 1.0 / this.viewport.scale.x;\n    this.zoom(currentZoom + 1);\n  }\n\n  // public onMove(listener: (viewport: Viewport) => void) {\n  //     new Observable<Viewport>((observer) => {\n  //         this.viewport.on(\"moved\", (viewport) => observer.next(viewport));\n  //     }).pipe(\n  //         debounceTime(1000),\n  //     ).subscribe(listener);\n  // }\n\n  private onProduced(island: Island, position: Point, stock: number) {\n    console.log(\n      `Producer at island ${island.id} (${position.x}, ${position.y}) has now stock: ${stock}.`\n    );\n    // TODO: This uses the wrong color, position, font and timings.\n    const text = new Text(`Stock: ${stock >> 5}`, {\n      fontFamily: \"Arial\",\n      fontSize: 24,\n      fill: 0xff1010\n    });\n\n    const pos = GameRenderer.fieldPosToWorldPos(\n      new Point(island.position.x + position.x, island.position.y + position.y)\n    );\n    text.position.set(pos.x, pos.y);\n    this.viewport.addChild(text);\n\n    const duration = 2000;\n    const startTime = this.app.ticker.lastTime;\n    const fn = () => {\n      text.position.y =\n        text.position.y - (this.app.ticker.deltaMS * 100) / duration;\n      if (this.app.ticker.lastTime - startTime > duration) {\n        this.app.ticker.remove(fn);\n        this.viewport.removeChild(text);\n      }\n    };\n    this.app.ticker.add(fn);\n  }\n\n  private cull = () => {\n    const viewportBounds = this.viewport.getVisibleBounds();\n\n    const topLeft = GameRenderer.worldPosToFieldPos(\n      new Point(viewportBounds.x - TILE_WIDTH, viewportBounds.y - TILE_HEIGHT)\n    );\n    const bottomRight = GameRenderer.worldPosToFieldPos(\n      new Point(\n        viewportBounds.x + viewportBounds.width + TILE_WIDTH,\n        // we need to add the height of the highest sprite in the game, so\n        // that it is still drawn even if it is below the viewport.\n        // TODO: Verify that 200 fits.\n        viewportBounds.y + viewportBounds.height + TILE_HEIGHT + 200\n      )\n    );\n\n    for (let x = 0; x < this.WIDTH; x++) {\n      for (let y = 0; y < this.HEIGHT; y++) {\n        const field = this.fields[x][y];\n        if (!field) {\n          continue;\n        }\n        field.visible =\n          x + y >= topLeft.x + topLeft.y &&\n          x - y >= topLeft.x - topLeft.y &&\n          x + y <= bottomRight.x + bottomRight.y &&\n          x - y <= bottomRight.x - bottomRight.y;\n      }\n    }\n  };\n\n  private sendHoveredPositionsToHUD() {\n    merge(\n      fromEvent(this.viewport, \"moved\"),\n      fromEvent(this.viewport, \"wheel-scroll\"),\n      fromEvent(this.interactionManager, \"pointermove\")\n    )\n      .pipe(\n        auditTime(100),\n        startWith(null),\n        map(_ =>\n          GameRenderer.worldPosToFieldPosLand(\n            this.viewport.toWorld(this.interactionManager.mouse.global)\n          )\n        ),\n        distinctUntilChanged(),\n        map(pos => ({\n          pos,\n          island: Object.values(this.game.state.islands).find(each => {\n            return each.positionRect.contains(pos.x, pos.y);\n          })\n        }))\n      )\n      .subscribe(({ pos, island }) => this.hud.setHoveredPosition(pos, island));\n  }\n\n  private moveCameraToStartPosition(myPlayerId: number) {\n    const myKontor = this.game.state.kontors.find(\n      kontor => kontor.playerId === myPlayerId\n    );\n    if (myKontor !== undefined) {\n      const position = myKontor.position;\n      const kontorIsland = Object.values(this.game.state.islands).find(\n        island => island.id === myKontor.islandId\n      )!;\n      this.moveTo(\n        new Point(\n          kontorIsland.position.x + position.x,\n          kontorIsland.position.y + position.y\n        )\n      );\n      return;\n    }\n    const myShip = this.game.state.ships.find(\n      ship => ship.playerId === myPlayerId\n    );\n    if (myShip !== undefined) {\n      this.moveTo(myShip.position);\n      return;\n    }\n    this.moveTo(new Point(500 / 2, 300 / 2));\n  }\n\n  private moveTo(point: Point) {\n    this.viewport.moveCenter(GameRenderer.fieldPosToWorldPos(point));\n  }\n}\n","import { EventEmitter } from \"events\";\nimport { Point } from \"pixi.js\";\nimport assert from \"../util/assert\";\nimport ConfigLoader from \"./config-loader\";\nimport { City } from \"./world/city\";\nimport { Island } from \"./world/island\";\nimport { Kontor } from \"./world/kontor\";\nimport { Player } from \"./world/player\";\nimport { Producer } from \"./world/producer\";\nimport { Ship } from \"./world/ship\";\nimport { Task } from \"./world/task\";\nimport { Timers } from \"./world/timers\";\nimport World, { SimulationSpeed } from \"./world/world\";\nimport { GoodIds } from \"./field-type\";\n\ninterface MapById<T> {\n  [k: string]: T;\n}\n\nexport const defaultTimers = {\n  simulationSpeed: 0,\n  cntCity: 0,\n  cntIsland: 0,\n  cntShipyard: 0,\n  cntMilitary: 0,\n  cntProduction: 0,\n  cntSettlers: [],\n  cntGrowth: [],\n  timeCity: 0,\n  timeIsland: 0,\n  timeShipyard: 0,\n  timeMilitary: 0,\n  timeProduction: 0,\n  timeGoodToolsCnt: 0,\n  timeGoodToolsMax: 0,\n  timeGame: 0,\n  noErzOutFlg: 0,\n  tutorFlg: 0,\n  aiLevel: 0,\n  missionNumber: 0,\n  gameId: 0,\n  cityNameNumber: 0,\n  timeNextDrought: 0,\n  timePirateSec: 0,\n  missionSubNumber: 0,\n  shipMax: 0,\n  timeNextVulcano: 0,\n  cntVulcano: 0,\n  timeSettlers: [],\n  timeGrowth: [],\n  enableTrader: false,\n  bigIronRunsOut: false,\n  enableDroughts: false,\n  enablePirate: false,\n  enableVulcano: false\n};\n\nexport interface GameState {\n  players: MapById<Player>;\n  islands: MapById<Island>;\n  tasks: MapById<Task>;\n  cities: City[];\n  kontors: Kontor[];\n  producers: Producer[];\n  ships: Ship[];\n  timers: Timers & { simulationSpeed: SimulationSpeed };\n}\n\nexport default class Game extends EventEmitter {\n  public state: GameState;\n  private timerId: number | null;\n\n  constructor(private readonly configLoader: ConfigLoader, world: World) {\n    super();\n    this.state = {\n      players: this.mapArrayById(world.players),\n      islands: this.mapArrayById(world.islands),\n      tasks: this.mapArrayById(world.tasks),\n      cities: world.cities,\n      kontors: world.kontors,\n      producers: world.producers,\n      ships: world.ships,\n      timers: { ...world.timers, simulationSpeed: SimulationSpeed.Paused }\n    };\n  }\n\n  public getFieldAtIsland = (island: Island, islandPos: Point) => {\n    return island.fields[islandPos.x][islandPos.y];\n  };\n\n  public getFieldAt = (globalPos: Point) => {\n    const island = Object.values(this.state.islands).find(each =>\n      each.positionRect.contains(globalPos.x, globalPos.y)\n    );\n    if (!island) {\n      return null;\n    }\n    const islandPos = new Point(\n      globalPos.x - island.position.x,\n      globalPos.y - island.position.y\n    );\n\n    return this.getFieldAtIsland(island, islandPos);\n  };\n\n  public setSimulationSpeed(speed: SimulationSpeed) {\n    this.state.timers.simulationSpeed = speed;\n\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n    if (speed !== SimulationSpeed.Paused) {\n      this.timerId = window.setInterval(this.tick, 100 / speed);\n    }\n\n    this.emit(\"simulation-speed\", speed);\n  }\n\n  private mapArrayById<T extends { id: number }>(arr: T[]) {\n    return arr.reduce((objectMap: { [k: string]: T }, obj: T) => {\n      objectMap[obj.id] = obj;\n      return objectMap;\n    }, {});\n  }\n\n  private watchTicksForUpkeep() {\n    const time = this.state.timers.timeGame;\n    if (time % 100 !== 0) {\n      return;\n    }\n\n    console.log(\"upkeep calculation\");\n    const upkeeps = this.calculateUpkeeps();\n    for (const playerId of Object.keys(upkeeps)) {\n      // This is how Anno 1602 does it, see\n      // https://www.annozone.de/Charlie/Cod/numerik.html\n      const upkeep = Math.floor(upkeeps[playerId] / 6);\n      this.addMoney(parseInt(playerId, 10), -upkeep);\n      this.emit(\"player/upkeep\", {\n        playerId: parseInt(playerId, 10),\n        upkeep: upkeeps[playerId]\n      });\n    }\n  }\n\n  private addMoney(playerId: number, money: number) {\n    this.state.players[playerId].money += money;\n    this.emit(\"player/money\", {\n      playerId,\n      money: this.state.players[playerId].money\n    });\n  }\n\n  private watchTicksForProducing() {\n    const time = this.state.timers.timeGame;\n    if (time % 10 !== 0) {\n      return;\n    }\n\n    console.log(\"update producers\");\n    const fieldData = this.configLoader.getFieldData();\n    this.state.producers.forEach((producer, producerId) => {\n      if (!producer.isActive()) {\n        return;\n      }\n      if (producer.timer > 0) {\n        producer.timer--;\n        if (producer.timer > 0) {\n          return;\n        }\n      }\n\n      const island = this.state.islands[producer.islandId];\n      const buildingId = this.getFieldAtIsland(island, producer.position)!\n        .fieldId;\n      const fieldConfig = fieldData.get(buildingId)!;\n      assert(fieldConfig);\n\n      if (producer.howMuchIsBeingProduced > 0) {\n        // Good produced (this might mean that just 0.5 of a good was produced)\n        producer.firstGoodStock -=\n          ((fieldConfig.production.amount1 << 5) *\n            producer.howMuchIsBeingProduced) >>\n          7;\n        producer.secondGoodStock -=\n          ((fieldConfig.production.amount2 << 5) *\n            producer.howMuchIsBeingProduced) >>\n          7;\n\n        const oldStock = producer.stock;\n        producer.stock +=\n          fieldConfig.production.amount * producer.howMuchIsBeingProduced;\n        if (producer.stock - oldStock >= 32) {\n          this.emit(\"producer/good-produced\", {\n            island: this.state.islands[producer.islandId],\n            position: producer.position,\n            stock: producer.stock\n          });\n        }\n      }\n\n      let howMuchCanWeProduce = 0;\n      let var11c = 11;\n      let notmp5 = false;\n\n      // Check if we can produce more\n      if (producer.stock >= fieldConfig.production.maxStock << 5) {\n        // Show stock full message (but do not print good produced message!)\n      } else {\n        // check_has_first_good, check_is_producing, check_can_produce_valid_good\n        if (\n          producer.firstGoodStock !== 0 &&\n          !producer.isProducing() &&\n          fieldConfig.production.good !== GoodIds.NOWARE\n        ) {\n          // check_needs_good_1\n          if (fieldConfig.production.amount1 === 0) {\n            howMuchCanWeProduce = 128;\n          } else {\n            const howMuchCanWeProduceWithGood1 =\n              (producer.firstGoodStock /\n                (fieldConfig.production.amount1 << 5)) *\n              128;\n            howMuchCanWeProduce = Math.min(128, howMuchCanWeProduceWithGood1);\n          }\n\n          // check_needs_good_2\n          if (fieldConfig.production.amount2 === 0) {\n            // Nothing to do\n          } else {\n            const howMuchCanWeProduceWithGood2 =\n              (producer.secondGoodStock /\n                (fieldConfig.production.amount2 << 5)) *\n              128;\n            howMuchCanWeProduce = Math.min(\n              howMuchCanWeProduceWithGood2,\n              howMuchCanWeProduce\n            );\n          }\n\n          // tmp_2\n          if (howMuchCanWeProduce < 64) {\n            // tmp_3\n            // less than 0.5 goods can be produced\n            howMuchCanWeProduce = 0;\n          } else {\n            // tmp_4\n            // between 0.5 and 1 goods can be produced\n            var11c =\n              ((fieldConfig.production.interval << 8) * howMuchCanWeProduce) >>\n              7;\n            if (howMuchCanWeProduce !== 0) {\n              // tmp_6\n              producer.prodCount +=\n                (howMuchCanWeProduce >> 7) *\n                (fieldConfig.production.amount << 5);\n              producer.setGoodWasProducedTimer(0);\n              notmp5 = true;\n            }\n          }\n        }\n\n        if (!notmp5) {\n          // tmp_5\n          if (producer.getGoodWasProducedTimer() < 0b1111) {\n            // tmp_7\n            producer.setGoodWasProducedTimer(\n              producer.getGoodWasProducedTimer() + 1\n            );\n          }\n        }\n      }\n\n      // tmp_1\n      if (howMuchCanWeProduce > 0 !== producer.howMuchIsBeingProduced > 0) {\n        // tmp_8\n        // TODO producer.setSpeedCntANimationSomething(animation_something())\n      }\n\n      // tmp_9\n      producer.timeCount += var11c >> 8;\n      producer.howMuchIsBeingProduced = howMuchCanWeProduce;\n      producer.timer = var11c >> 8;\n      if (producer.timeCount <= 240) {\n        // tmp_10\n        producer.timeCount >>= 1;\n        producer.prodCount >>= 1;\n      }\n\n      // TODO: Skipped a few blocks that seem to be related to animations.\n\n      // tmp_11, tmp_12\n      if (\n        producer.howMuchIsBeingProduced > 0 ||\n        producer.stock < fieldConfig.production.maxStock\n      ) {\n        let edi;\n        // tmp_13\n        if (fieldConfig.production.amount2 !== 0) {\n          // TODO: tmp_14\n          edi = 0x180;\n        } else {\n          // TODO: tmp_15\n          edi = Math.floor(\n            ((producer.secondGoodStock << 8) << 7) /\n              fieldConfig.production.amount2\n          );\n        }\n\n        // tmp_16\n        if (fieldConfig.production.amount1 === 0) {\n          // TODO: tmp_17\n        } else {\n          // tmp_18, tmp_19\n          const eax = Math.floor(\n            ((producer.firstGoodStock << 8) << 7) /\n              fieldConfig.production.amount2\n          );\n          if (eax > 0x100 || eax > edi) {\n            // TODO: tmp_17\n          } else {\n            // TODO: tmp_20\n          }\n        }\n      }\n\n      // TODO: block at the very bottom\n\n      this.emit(\"producer/updated\", { producerId: producerId });\n    });\n  }\n\n  private calculateUpkeeps() {\n    const upkeeps: Record<string, number> = Object.keys(\n      this.state.players\n    ).reduce((obj: Record<string, number>, id: string) => {\n      obj[id] = 0;\n      return obj;\n    }, {});\n\n    Object.values(this.state.producers).forEach(producer => {\n      const island = this.state.islands[producer.islandId];\n      const field = island.fields[producer.position.x][producer.position.y]!;\n      const buildingId = field.fieldId;\n      const playerId = field.playerId;\n      assert(buildingId !== 0xffff);\n      assert(playerId < 7);\n      const fieldConfig = this.configLoader.getFieldData().get(buildingId)!;\n      assert(fieldConfig);\n\n      upkeeps[playerId] +=\n        fieldConfig.production.upkeep[\n          producer.isActive() ? \"active\" : \"inactive\"\n        ];\n    }, this);\n\n    return upkeeps;\n  }\n\n  private tick = () => {\n    this.state.timers.timeGame++;\n    this.state.timers.cntCity = this.inc(this.state.timers.cntCity, 8, 100);\n    this.state.timers.cntIsland = this.inc(this.state.timers.cntIsland, 8, 100);\n    this.state.timers.cntShipyard = this.inc(\n      this.state.timers.cntShipyard,\n      8,\n      10\n    );\n    this.state.timers.cntMilitary = this.inc(\n      this.state.timers.cntMilitary,\n      8,\n      10\n    );\n    this.state.timers.cntProduction = this.inc(\n      this.state.timers.cntProduction,\n      8,\n      10\n    );\n\n    this.watchTicksForUpkeep();\n    this.watchTicksForProducing();\n    this.emit(\"tick\");\n  };\n\n  private inc = (value: number, max: number, interval: number) => {\n    const gameTime = this.state.timers.timeGame;\n    if (gameTime % interval !== 0) {\n      return value;\n    }\n    value++;\n    if (value >= max) {\n      value = 0;\n    }\n    return value;\n  };\n}\n","import { Viewport } from \"pixi-viewport\";\nimport { Application } from \"pixi.js\";\nimport FileSystem from \"./filesystem\";\nimport AnimationRenderer from \"./game/animation-renderer\";\nimport ConfigLoader from \"./game/config-loader\";\nimport Game from \"./game/game\";\nimport GameRenderer from \"./game/game-renderer\";\nimport IslandSpriteLoader from \"./game/island-sprite-loader\";\nimport MusicPlayer from \"./game/music-player\";\nimport { SimulationSpeed } from \"./game/world/world\";\nimport GAMParser from \"./parsers/GAM/gam-parser\";\nimport MenuStructure from \"./game/menu-structure\";\nimport { Translator } from \"./translation/translator\";\nimport SpriteLoader from \"./sprite-loader\";\n\nexport default class GameLoader {\n  constructor(\n    private readonly fs: FileSystem,\n    private readonly gamParser: GAMParser,\n    private readonly islandSpriteLoader: IslandSpriteLoader,\n    private readonly app: Application,\n    private readonly viewport: Viewport,\n    private readonly configLoader: ConfigLoader,\n    private readonly musicPlayer: MusicPlayer,\n    private readonly animationRenderer: AnimationRenderer,\n    private readonly menuStructure: MenuStructure,\n    private readonly translator: Translator,\n    private readonly spriteLoader: SpriteLoader\n  ) {}\n\n  public async loadByName(gameName: string) {\n    const games = await this.loadSavesAndMissions();\n    const saveGame = games.find(\n      saveOrMission => saveOrMission.name === gameName\n    );\n    if (!saveGame) {\n      throw new Error(\n        `Could not find ${gameName}. The following files are available: ${games\n          .map(game => game.name)\n          .join(\", \")}`\n      );\n    }\n    await this.load(saveGame);\n  }\n\n  public async load(saveGame: WebKitEntry | string) {\n    const saveGameData = await this.fs.openAndGetContentAsStream(saveGame);\n    const world = await this.gamParser.getWorld(saveGameData);\n    const myPlayerId = 0;\n\n    const gameLogic = new Game(this.configLoader, world);\n    const gameRenderer = new GameRenderer(\n      gameLogic,\n      this.islandSpriteLoader,\n      this.app,\n      this.viewport,\n      this.configLoader,\n      this.animationRenderer,\n      this.menuStructure,\n      this.translator,\n      this.spriteLoader,\n      myPlayerId\n    );\n\n    await gameRenderer.begin();\n    await this.musicPlayer.playAll();\n\n    gameLogic.setSimulationSpeed(SimulationSpeed.Default);\n  }\n\n  private async loadSavesAndMissions() {\n    const saves = [];\n    try {\n      saves.push(...(await this.fs.ls(\"/saves\", \".gam\")));\n    } catch (e) {\n      // Ignore errors\n    }\n\n    const missions = [];\n    try {\n      missions.push(...(await this.fs.ls(\"/missions-original\", \".szs|.szm\")));\n      missions.push(...(await this.fs.ls(\"/missions-custom\", \".szs|.szm\")));\n    } catch (e) {\n      // Ignore errors\n    }\n    return saves.concat(missions);\n  }\n}\n","import { Viewport } from \"pixi-viewport\";\nimport { AnimatedSprite, Graphics, Texture } from \"pixi.js\";\nimport SpriteLoader from \"../sprite-loader\";\nimport assert from \"../util/assert\";\nimport { Ship, SHIP_TYPES } from \"./world/ship\";\n\ninterface AnimationConfig {\n  Kind: \"RANDOM\" | \"ENDLESS\" | \"JUMPTO\";\n  AnimOffs: number;\n  AnimAdd: number;\n  AnimAnz: number;\n  AnimSpeed: number;\n  AnimNr?: number | number[];\n  AnimRept?: number;\n  AnimSmp?: string | [string, number, number];\n  Rotate?: number;\n}\n\ninterface AnimationData {\n  nested_objects: {\n    ANIM: {\n      [k: string]: AnimationConfig;\n    };\n  };\n  Id: number;\n  Gfx: number;\n  Kind: string;\n  Stirbtime: number;\n  Speedtyp: number;\n  Bugfignr: string;\n  Nowalkani: number;\n  Rotate: number;\n  Worktime: number;\n  Speed: number;\n  Posoffs: [number, number]; // TODO: What is this?!\n  Fahnoffs: [number, number, number];\n  GfxCategory: string;\n  GfxCategoryMapped: string;\n  // + more\n}\n\nexport interface MyAnimation {\n  config: AnimationData;\n  animations: Record<\n    string,\n    {\n      rotations: Array<{\n        main: AnimatedSprite;\n      }>;\n      config: AnimationConfig;\n    }\n  >;\n}\n\nexport default class AnimationRenderer {\n  constructor(private animationData: any, private spriteLoader: SpriteLoader) {}\n\n  public async getAnimation(name: string): Promise<MyAnimation> {\n    const animationData: AnimationData = this.animationData.objects.FIGUR.items[\n      name\n    ];\n    if (!animationData) {\n      console.log(this.animationData.objects.FIGUR.items);\n      throw new Error(`Invalid animation name: ${name}`);\n    }\n\n    let ANIM: Record<string, AnimationConfig>;\n    if (\n      [\n        \"FAHNE1\",\n        \"FAHNE2\",\n        \"FAHNE3\",\n        \"FAHNE4\",\n        \"FAHNEWEISS\",\n        \"FAHNEPIRAT\"\n      ].includes(name)\n    ) {\n      // These animations do not include the necessary animation config.\n      // Simply copy the first animation config from the marketplace.\n      ANIM = {\n        0: this.animationData.objects.FIGUR.items.FAHNEMARKT.nested_objects\n          .ANIM[0]\n      };\n    } else {\n      if (Object.values(animationData.nested_objects).length === 0) {\n        throw new Error(\n          `Animation \"${name}\" does not include sufficient animation data.`\n        );\n      }\n      assert(animationData.nested_objects.ANIM);\n      ANIM = animationData.nested_objects.ANIM;\n    }\n\n    const baseGfx = animationData.Gfx;\n    const baseFramesPerRotation = animationData.Rotate;\n    const rotations = baseFramesPerRotation === 0 ? 1 : 8;\n\n    assert(animationData.GfxCategoryMapped.startsWith(\"GFX\"));\n    const gfxFilename = animationData.GfxCategoryMapped.substr(\"GFX\".length);\n\n    const textures = await this.spriteLoader.getTextures(gfxFilename);\n\n    const animatedSprites: MyAnimation = {\n      config: animationData,\n      animations: {}\n    };\n\n    for (const animIdx of Object.keys(ANIM)) {\n      const animatedSpritesForAnim: Array<{\n        main: AnimatedSprite;\n        bug?: AnimatedSprite;\n      }> = [];\n\n      const animation = ANIM[animIdx];\n\n      // Force 1 step for all ships. Ship animation data is incorrect.\n      const numSteps = animationData.Bugfignr ? 1 : animation.AnimAnz;\n      const speed = (1 / 60) * (1000.0 / animation.AnimSpeed);\n      const gfxPerStep = animation.AnimAdd;\n      const repeats = animation.AnimRept ? animation.AnimRept : 0;\n      const framesPerRotation = animation.Rotate\n        ? animation.Rotate\n        : baseFramesPerRotation;\n\n      for (let rotationIdx = 0; rotationIdx < rotations; rotationIdx++) {\n        const spritesForRotation: AnimatedSprite[] = [];\n\n        let gfx =\n          baseGfx + animation.AnimOffs + rotationIdx * framesPerRotation;\n\n        const frames: Texture[] = [];\n        for (let step = 0; step < numSteps; step++) {\n          frames.push(textures.get(gfx)!);\n          gfx += gfxPerStep;\n        }\n\n        const animatedSprite = new AnimatedSprite(frames);\n        animatedSprite.anchor.set(0, 1);\n        animatedSprite.loop = animation.Kind === \"ENDLESS\";\n        animatedSprite.animationSpeed = speed;\n        spritesForRotation.push(animatedSprite);\n\n        animatedSpritesForAnim.push({\n          main: animatedSprite\n        });\n      }\n\n      animatedSprites.animations[animIdx] = {\n        rotations: animatedSpritesForAnim, // One per rotation\n        config: animation\n      };\n    }\n\n    return animatedSprites;\n  }\n\n  public async renderAnimation(name: string, viewport: Viewport) {\n    const animationData = await this.getAnimation(name);\n    console.log(animationData);\n\n    let y = 200;\n\n    for (const animIdx of Object.keys(animationData.animations)) {\n      const animatedSpritesForAnim =\n        animationData.animations[animIdx].rotations;\n\n      let x = 0;\n      animatedSpritesForAnim.forEach(sprites => {\n        this.debugDrawSprite(sprites.main, viewport, x, y);\n        x += sprites.main.width;\n      });\n      y += 50;\n    }\n  }\n\n  public async getShipAnimation(ship: Ship) {\n    // @ts-ignore\n    const animationName = SHIP_TYPES[ship.type];\n    return this.getAnimation(animationName);\n  }\n\n  public debugDrawSprite(\n    sprite: AnimatedSprite,\n    viewport: Viewport,\n    x: number,\n    y: number\n  ) {\n    const rect = new Graphics();\n    rect.position.set(x, y);\n    rect.lineStyle(1, 0xff0000);\n    rect.drawRect(0, 0, sprite.width, -sprite.height);\n\n    sprite.position.set(x, y);\n    viewport.addChild(sprite);\n    viewport.addChild(rect);\n    sprite.play();\n  }\n}\n","import FileSystem from \"../filesystem\";\nimport FieldType from \"./field-type\";\n\nexport default class ConfigLoader {\n  private loaded = false;\n  private readonly fieldData: Map<number, FieldType> = new Map();\n\n  constructor(private readonly fs: FileSystem) {}\n\n  public async load() {\n    const fieldConfig = JSON.parse(\n      await this.fs.openAndGetContentAsText(\"/fields.json\")\n    ).objects.HAUS.items;\n    for (const key of Object.keys(fieldConfig)) {\n      const fieldId = parseInt(fieldConfig[key].Id, 10);\n      this.fieldData.set(fieldId, new FieldType(fieldConfig[key]));\n    }\n    this.loaded = true;\n  }\n\n  public getFieldData(): ReadonlyMap<number, FieldType> {\n    if (!this.loaded) {\n      throw new Error(\"Configuration is not loaded. Call .load() first!\");\n    }\n    return this.fieldData;\n  }\n}\n","import { Loader } from \"pixi.js\";\nimport FileSystem from \"../filesystem\";\nimport { uInt8ToBase64 } from \"../util/util\";\n\nexport default class FontLoader {\n  private static fonts = {\n    0: {\n      name: \"ZEI20V\",\n      size: 24\n    },\n    1: {\n      name: \"ZEI14A\",\n      size: 18\n    },\n    2: {\n      name: \"ZEI28V\",\n      size: 32\n    }\n  };\n\n  constructor(private readonly fs: FileSystem) {}\n\n  public static getFontByGadId(id: number) {\n    // @ts-ignore\n    return this.fonts[id];\n  }\n\n  public async load() {\n    for (const { name: fontName } of Object.values(FontLoader.fonts)) {\n      console.log(`Loading font ${fontName}.`);\n      const font = await this.fs.openAndGetContentAsUint8Array(\n        `/fonts/${fontName}/font.xml`\n      );\n      await new Promise(resolve => {\n        Loader.shared\n          .add(fontName, `data:application/xml;base64,${uInt8ToBase64(font)}`)\n          .load(resolve);\n      });\n      console.log(`Finished loading font ${fontName}.`);\n    }\n  }\n}\n","import { interaction, Sprite } from \"pixi.js\";\n\ntype InteractionEvent = interaction.InteractionEvent;\n\nexport default class SliderSprite extends Sprite {\n  private dragging = false;\n  private topY: number;\n\n  public setSliderData(sizeY: number, offsetY: number, sliderSizeY: number) {\n    this.position.set(\n      this.position.x,\n      this.position.y + (sizeY - sliderSizeY) / 2\n    );\n    this.topY = this.position.y;\n    // sprite.position.set(sprite.position.x + sliderOffset[0], sprite.position.y + sliderOffset[1]);\n    this.on(\"mousedown\", (event: InteractionEvent) => {\n      this.dragging = true;\n    });\n    this.on(\"mouseup\", (event: InteractionEvent) => {\n      this.dragging = false;\n    });\n    this.on(\"mousemove\", (event: InteractionEvent) => {\n      if (this.dragging) {\n        const originalEvent = event.data.originalEvent as\n          | MouseEvent\n          | PointerEvent;\n        const eventY = originalEvent.offsetY - this.texture.height / 2;\n        this.position.y = this.clamp(\n          eventY,\n          this.topY,\n          this.topY + sliderSizeY - this.texture.height / 2\n        );\n      }\n    });\n  }\n\n  /*\n    public moveDown() {\n\n    }\n\n    public moveUp() {\n\n    }\n    */\n\n  private clamp(val: number, min: number, max: number) {\n    return Math.min(Math.max(min, val), max);\n  }\n}\n","import {\n  BitmapText,\n  Container,\n  Point,\n  Rectangle,\n  resources,\n  Sprite,\n  Texture\n} from \"pixi.js\";\nimport SpriteLoader from \"../sprite-loader\";\nimport assert from \"../util/assert\";\nimport { ScreenConfig } from \"./menu-structure\";\nimport SliderSprite from \"./ui/slider-sprite\";\nimport FontLoader from \"./font-loader\";\n\ninterface RadioButtonData {\n  sprite: Sprite;\n  defaultTexture: Texture;\n  activeTexture: Texture;\n}\n\nexport default class GADRenderer {\n  private videos: Sprite[] = [];\n\n  constructor(private readonly spriteLoader: SpriteLoader) {}\n\n  public clear(container: Container) {\n    this.destroyVideos();\n    container.removeChildren();\n  }\n\n  public async render(container: Container, data: any, config: ScreenConfig) {\n    this.destroyVideos();\n\n    const blockNumMapping: Map<number, string> = new Map();\n    for (const name of Object.keys(data.variables)) {\n      const value = data.variables[name];\n      if (name.startsWith(\"BLK_\")) {\n        let tmp = name.substring(4);\n        if (tmp === \"TOOL\") {\n          tmp = \"TOOLS\";\n        }\n        blockNumMapping.set(value, tmp);\n      }\n    }\n\n    const radioButtons: RadioButtonData[] = [];\n    let selectableCount = 0;\n    const gadgets = data.objects.GADGET.items;\n    for (const num of Object.keys(gadgets)) {\n      const gadget = gadgets[num];\n      const id = gadget.Id;\n      const blockNr: string = gadget.Blocknr;\n      const gfx = gadget.Gfxnr;\n      const kind: string = gadget.Kind;\n      if (\n        kind === \"GAD_UNUSED\" ||\n        kind === \"GAD_NIX\" ||\n        config.ignore.includes(id)\n      ) {\n        continue;\n      }\n      const position = new Point(gadget.Pos[0], gadget.Pos[1]);\n      if (gadget.Posoffs) {\n        position.set(\n          position.x + gadget.Posoffs[0],\n          position.y + gadget.Posoffs[1]\n        );\n      }\n      const size =\n        gadget.Size !== undefined\n          ? new Point(gadget.Size.x, gadget.Size.y)\n          : null;\n      const selectable = gadget.Noselflg === undefined || gadget.Noselflg === 0;\n      const isToggleButton = gadget.Flipflg === 1;\n      const pressOff = gadget.Pressoff;\n      const isRadioButton = gadget.Reiheflg === 1;\n      if (isRadioButton) {\n        assert(selectable);\n      }\n      assert(blockNr !== undefined);\n\n      const isSlider = gadget.Slidverflg !== undefined;\n      const sliderOffset = gadget.Slidoffs;\n      const sliderSize = gadget.Slidsize;\n\n      switch (kind) {\n        case \"GAD_GFX\": {\n          const textures = await this.spriteLoader.getTextures(\n            `TOOLS/${blockNumMapping.get(blockNr)}`\n          );\n\n          const defaultTexture = textures.get(gfx)!;\n          const activeTexture = textures.get(gfx + pressOff)!;\n\n          const sprite = !isSlider\n            ? new Sprite(defaultTexture)\n            : new SliderSprite(defaultTexture);\n          sprite.position.set(position.x, position.y);\n          sprite.name = `menu-${id}`;\n\n          if (isSlider) {\n            (sprite as SliderSprite).setSliderData(\n              size!.y,\n              sliderOffset[1],\n              sliderSize[1]\n            );\n          }\n\n          if (selectable) {\n            sprite.buttonMode = true;\n            sprite.interactive = true;\n            const callback = Array.isArray(config.buttons)\n              ? config.buttons[selectableCount]\n              : config.buttons[id];\n\n            if (isRadioButton) {\n              if (radioButtons.length === 0) {\n                // The first radio button is active at the start.\n                sprite.texture = activeTexture;\n              }\n              radioButtons.push({ sprite, activeTexture, defaultTexture });\n            }\n\n            sprite.on(\"mousedown\", () => {\n              if (isToggleButton) {\n                sprite.texture =\n                  sprite.texture === defaultTexture\n                    ? activeTexture\n                    : defaultTexture;\n              } else {\n                sprite.texture = activeTexture;\n              }\n              if (isRadioButton) {\n                // If this IS a radio button, make all other radio buttons inactive.\n                for (const button of radioButtons) {\n                  if (button.sprite !== sprite) {\n                    button.sprite.texture = button.defaultTexture;\n                  }\n                }\n              }\n              callback(\n                container,\n                isToggleButton ? sprite.texture === activeTexture : true\n              );\n            });\n\n            if (!isRadioButton && !isToggleButton) {\n              // If this is NOT a radio button or toggle button, go back to normal state on mouse up.\n              sprite.on(\"mouseup\", () => (sprite.texture = defaultTexture));\n            }\n\n            selectableCount++;\n          }\n          container.addChild(sprite);\n          break;\n        }\n        case \"GAD_TEXTL\":\n        case \"GAD_TEXTZ\":\n        case \"GAD_TEXTR\": {\n          // case \"GAD_TEXTFL\":\n          const font = FontLoader.getFontByGadId(\n            blockNr === undefined ? 0 : parseInt(blockNr, 10)\n          );\n\n          const text = new BitmapText(config.texts[id] || \"???\", {\n            font: { name: font.name, size: font.size }\n          });\n          text.position.set(position.x, position.y);\n          text.pivot.set(0, font.size);\n          text.name = `menu-${id}`;\n          if (size) {\n            text.hitArea = new Rectangle(0, 0, size.x, size.y);\n          }\n          if (kind.endsWith(\"Z\")) {\n            // Center text\n            text.anchor = new Point(0.5, 0);\n          } else if (kind.endsWith(\"R\")) {\n            text.anchor = new Point(1, 0);\n          }\n          container.addChild(text);\n          break;\n        }\n        // TODO: Shadows\n        // case \"GAD_GFXRAST\":\n        //   break;\n        default:\n          console.warn(`Unsupported kind: ${kind}`);\n      }\n    }\n\n    config.onLoad(container);\n  }\n\n  public renderVideo(\n    container: Container,\n    videoSprite: Sprite,\n    onEnd: () => void\n  ) {\n    const videoTexture = videoSprite.texture.baseTexture\n      .resource as resources.VideoResource;\n    videoTexture.source.addEventListener(\n      \"ended\",\n      () => {\n        container.removeChild(videoSprite);\n        onEnd();\n      },\n      { once: true }\n    );\n    container.addChild(videoSprite);\n    this.videos.push(videoSprite);\n  }\n\n  public renderVideoFullscreen(\n    container: Container,\n    videoSprite: Sprite,\n    onEnd: () => void\n  ) {\n    this.clear(container);\n\n    const videoTexture = videoSprite.texture.baseTexture\n      .resource as resources.VideoResource;\n    videoTexture.source.addEventListener(\n      \"ended\",\n      () => {\n        container.removeChild(videoSprite);\n        onEnd();\n      },\n      { once: true }\n    );\n\n    videoSprite.scale.set(2, 2);\n\n    // TODO: For some reason, this.stage.width/height are way to small.\n    const x =\n      /*this.stage.width*/ 1024 / 2 -\n      (videoSprite.texture.width * videoSprite.scale.x) / 2;\n    const y =\n      /*this.stage.height*/ 768 / 2 -\n      (videoSprite.texture.height * videoSprite.scale.y) / 2;\n    videoSprite.position.set(x, y);\n\n    container.addChild(videoSprite);\n  }\n\n  private destroyVideos() {\n    this.videos.forEach(video =>\n      video.destroy({ texture: true, baseTexture: true })\n    );\n    this.videos = [];\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport { AnimatedSprite, Point, Sprite, Texture } from \"pixi.js\";\nimport SpriteLoader from \"../sprite-loader\";\nimport { make2DArray } from \"../util/util\";\nimport AnimationRenderer from \"./animation-renderer\";\nimport ConfigLoader from \"./config-loader\";\nimport { default as FieldX } from \"./field-type\";\nimport { Island } from \"./world/island\";\n\nexport interface SpriteWithPosition {\n  sprite: Sprite;\n  pixelPosition: Point;\n  mapPosition: Point;\n  mapPositionOnIsland: Point;\n}\n\nexport default class IslandSpriteLoader {\n  private inited = false;\n  private fields: ReadonlyMap<number, FieldX> = new Map();\n  private textures: Map<number, Texture> = new Map();\n  private lock: AsyncLock = new AsyncLock();\n\n  constructor(\n    private readonly configLoader: ConfigLoader,\n    private readonly spriteLoader: SpriteLoader,\n    private readonly animationRenderer: AnimationRenderer\n  ) {}\n\n  public init = async () => {\n    await this.lock.acquire(\"init\", async () => {\n      if (!this.inited) {\n        this.textures = await this.spriteLoader.getTextures(\"STADTFLD\");\n        this.fields = this.configLoader.getFieldData();\n        this.inited = true;\n      }\n    });\n  };\n\n  public getIslandSprites = async (island: Island) => {\n    await this.init();\n\n    const smokeSprites: AnimatedSprite[] = [];\n\n    const sprites = make2DArray<SpriteWithPosition>(\n      island.size.x,\n      island.size.y\n    );\n\n    for (let x = 0; x < island.size.x; x++) {\n      for (let y = 0; y < island.size.y; y++) {\n        await this.loadSpritesOfField(island, x, y, sprites, smokeSprites);\n      }\n    }\n\n    return { sprites, smokeSprites };\n  };\n\n  private loadSpritesOfField = async (\n    island: Island,\n    x: number,\n    y: number,\n    sprites: Array<Array<SpriteWithPosition | null>>,\n    smokeSprites: AnimatedSprite[]\n  ) => {\n    const field = island.fields[x][y];\n    if (field === null) {\n      return;\n    }\n    const fieldConfig = this.fields.get(field.fieldId);\n    if (fieldConfig === undefined) {\n      throw new Error(`Could not load config for ${field.fieldId}.`);\n    }\n    const origin = new Point(island.position.x + x, island.position.y + y);\n\n    const {\n      sprites: newSprites,\n      smokeAnimations\n    } = await fieldConfig.getSprites(\n      field.playerId,\n      island.position,\n      origin,\n      field.rotation,\n      field.ani,\n      this.textures,\n      this.animationRenderer\n    );\n    newSprites.forEach(newSprite => {\n      const { x: xx, y: yy } = newSprite.mapPositionOnIsland;\n      if (sprites[xx][yy] === null) {\n        sprites[xx][yy] = newSprite;\n      }\n    });\n    smokeSprites.push(...smokeAnimations);\n  };\n}\n","import { Texture } from \"pixi.js\";\nimport { uInt8ToBase64 } from \"./util\";\n\nexport function textureFromUint8ArrayPNG(data: Uint8Array) {\n  return Texture.from(`data:image/png;base64,${uInt8ToBase64(data)}`);\n}\n\nexport async function textureFromUint8ArrayMP4(\n  data: Uint8Array\n): Promise<Texture> {\n  const tmpVideo = document.createElement(\"video\");\n  tmpVideo.src = `data:video/mp4;base64,${uInt8ToBase64(data)}`;\n  const texture = Texture.from(tmpVideo);\n  await new Promise((resolve, reject) => {\n    texture.baseTexture.addListener(\"loaded\", resolve);\n    texture.baseTexture.addListener(\"error\", reject);\n  });\n  return texture;\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\nexport enum OreLocationKind {\n  Iron = 2,\n  Gold = 3\n}\n\nexport enum OreLocationSize {\n  Small = 1,\n  Big = 0\n}\n\nexport class OreLocation {\n  public static fromSaveGame(data: Stream) {\n    const kind = data.read8();\n    const position = new Point(data.read8(), data.read8());\n    const discoveredBy = data.read8(); // unsure\n    const size = data.read8();\n    data.read8(); // mostly 0?\n    const amount = data.read16(); // unsure\n\n    return new OreLocation(kind, size, amount, position, discoveredBy);\n  }\n\n  constructor(\n    public kind: OreLocationKind,\n    public size: OreLocationSize,\n    public amount: number,\n    public position: Point,\n    public discoveredBy: number\n  ) {}\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport { SoldierType } from \"./soldier\";\n\nclass Unit {\n  public static fromSaveGame(data: Stream) {\n    const type: SoldierType = data.read8();\n    const flags = data.read8();\n    data.read16();\n    const hp = data.read16();\n    data.read16();\n\n    return new Unit(type, (flags & 0x10) !== 0, hp);\n  }\n\n  constructor(\n    public type: SoldierType,\n    public ready: boolean,\n    public hp: number\n  ) {}\n}\n\nexport type Castle = ReturnType<typeof castleFromSaveGame>;\n\nexport function castleFromSaveGame(data: Stream) {\n  const islandId = data.read8();\n  const position = new Point(data.read8(), data.read8());\n  data.read8();\n  data.read32();\n  const numSwords = data.read16();\n  const numMuscets = data.read16();\n  const numCanons = data.read16();\n  data.read16();\n  const units = parseUnits(data);\n  data.read(32);\n\n  return {\n    islandId,\n    position,\n    numSwords,\n    numMuscets,\n    numCanons,\n    units\n  };\n}\n\nfunction parseUnits(data: Stream) {\n  const units = [];\n  for (let i = 0; i < 8; i++) {\n    units.push(Unit.fromSaveGame(data));\n  }\n  return units;\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\n\nexport type City = ReturnType<typeof cityFromSaveGame>;\n\nexport function cityFromSaveGame(data: Stream) {\n  const islandId = data.read8();\n  const cityIslandNum = data.read8();\n  const playerId = data.read16();\n  const progressAllowed = !data.read8Bool();\n  const _1 = data.read(87);\n  const inhabitants = [];\n  for (let i = 0; i < 5; i++) {\n    inhabitants.push(data.read32());\n  }\n  const _2 = data.read(15);\n  const taxes = [];\n  for (let i = 0; i < 5; i++) {\n    taxes.push(data.read8());\n  }\n  const _3 = data.read(3);\n  const name = data.readString(33);\n\n  return {\n    islandId,\n    playerId,\n    cityIslandNum,\n    progressAllowed,\n    inhabitants,\n    taxes,\n    name\n  };\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point, Rectangle } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\nimport Field from \"./field\";\nimport { OreLocation } from \"./island-ore-location\";\n\nenum IslandFertilityFlags {\n  TOBACCO = 1,\n  SUGARCANE = 3,\n  WINE = 5,\n  COTTON = 4,\n  CACAO = 6,\n  SPICE = 2\n}\n\nexport interface IslandFertility {\n  tobacco: boolean;\n  sugarcane: boolean;\n  wine: boolean;\n  cotton: boolean;\n  cacao: boolean;\n  spice: boolean;\n}\n\nexport type Island = ReturnType<typeof islandFromSaveGame>;\n\nexport function islandFromIsland3File(\n  id: number,\n  position: Point,\n  isSouth: boolean,\n  numBaseIsland: number,\n  data: Stream\n): Island {\n  data.read8(); // Ignore id\n  const size = new Point(data.read8(), data.read8());\n\n  return {\n    id,\n    position,\n    size,\n    positionRect: new Rectangle(position.x, position.y, size.x, size.y),\n    numBaseIsland,\n    numOreLocations: 0,\n    oreLocations: [],\n    fertility: {\n      tobacco: false,\n      sugarcane: false,\n      wine: false,\n      cotton: false,\n      cacao: false,\n      spice: false\n    },\n    isSouth,\n    differsFromBaseIsland: false,\n    fertilityDiscovered: false,\n    fields: []\n  };\n}\n\nexport function islandFromIsland4File(\n  id: number,\n  position: Point,\n  isSouth: boolean,\n  numBaseIsland: number,\n  data: Stream\n): Island {\n  return islandFromIsland3File(id, position, isSouth, numBaseIsland, data);\n}\n\nexport function islandFromIsland5File(\n  id: number,\n  position: Point,\n  isSouth: boolean,\n  numBaseIsland: number,\n  data: Stream\n): Island {\n  return islandFromIsland3File(id, position, isSouth, numBaseIsland, data);\n}\n\nexport function islandFromSaveGame(data: Stream) {\n  const id = data.read8();\n  const width = data.read8();\n  const height = data.read8();\n  /*\n    uint8      strtduerrflg:1;\n    uint8      nofixflg:1;\n    uint8      vulkanflg:1;\n     */\n  const _1 = data.read8();\n  const x = data.read16();\n  const y = data.read16();\n\n  const hirschreviercnt = data.read16();\n  const speedcnt = data.read16();\n  // the order in which players built their cities on this island\n  // is 7, 7, 7, 7, 7, 7, 7, 7, by default\n  // fills up from the beginning with player ids once a player builds a kontor.\n  // natives are also listed; islands with natives start with 6, 7, 7, ...\n  const stadtplayernr = data.read(8);\n\n  assert(data.read(3).every(e => e === 0));\n\n  const vulcanoCount = data.read8();\n  const treasureFlag = data.read8Bool();\n  const rohstanz = data.read8();\n\n  const numOreLocations = data.read8();\n  const fertilityDiscovered = data.read8();\n  const oreLocations = [\n    OreLocation.fromSaveGame(data),\n    OreLocation.fromSaveGame(data)\n  ];\n  // These look like even more ore locations.\n  const _5 = data.read(48);\n\n  const fertility = parseFertility(data.read32());\n  const numBaseIsland = data.read16();\n\n  // unsure\n  const sizenr = data.read16();\n\n  const isSouth = data.read8Bool();\n  const differsFromBaseIsland = data.read8Bool();\n\n  // unsure\n  const duerrproz = data.read8();\n  // unsure\n  const rotier = data.read8();\n\n  const seeplayerflags = data.read32(); // 1 nach bloßem Vorbeifahren (= zeigt Eingebohrene), 0xFF nach Kontorbau\n\n  // unsure\n  const duerrcnt = data.read32();\n\n  data.read32(); // mostly 0?\n\n  const fields: Array<Array<Field | null>> = [];\n\n  return {\n    id,\n    position: new Point(x, y),\n    size: new Point(width, height),\n    positionRect: new Rectangle(x, y, width, height),\n    numBaseIsland,\n    numOreLocations,\n    oreLocations,\n    fertility,\n    isSouth,\n    differsFromBaseIsland,\n    fertilityDiscovered: fertilityDiscovered !== 0,\n    fields\n  };\n\n  // island.debug = {\n  //    _1,\n  //    _5,\n  //    hirschreviercnt,\n  //    speedcnt,\n  //    stadtplayernr,\n  //    vulcanoCount,\n  //    treasureFlag,\n  //    rohstanz,\n  //\n  //    sizenr,\n  //    duerrproz,\n  //    rotier,\n  //\n  //    seeplayerflags,\n  //    duerrcnt,\n  // };\n  // console.log(island.debug);\n}\n\nfunction parseFertility(fertility: number): IslandFertility {\n  return {\n    tobacco: (fertility & (1 << IslandFertilityFlags.TOBACCO)) > 0,\n    sugarcane: (fertility & (1 << IslandFertilityFlags.SUGARCANE)) > 0,\n    wine: (fertility & (1 << IslandFertilityFlags.WINE)) > 0,\n    cotton: (fertility & (1 << IslandFertilityFlags.COTTON)) > 0,\n    cacao: (fertility & (1 << IslandFertilityFlags.CACAO)) > 0,\n    spice: (fertility & (1 << IslandFertilityFlags.SPICE)) > 0\n  };\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\n\nexport enum GoodAction {\n  None = 0,\n  Sell = 1,\n  Buy = 2\n}\n\nexport default class Good {\n  public static fromSaveGame(data: Stream) {\n    const tmp = data.read32();\n    const sellingPrice = (tmp & 0b00000000000000000000001111111111) >> 0;\n    const buyingPrice = (tmp & 0b00000000000011111111110000000000) >> 10;\n    const action: GoodAction = (tmp & 0b11111111111100000000000000000000) >> 20;\n\n    const _1 = data.read32();\n\n    const wantedSellingAmount = data.read16() >> 5;\n    const wantedBuyingAmount = data.read16() >> 5;\n\n    const currentAmount = data.read16() >> 5;\n    const _2 = data.read16();\n\n    /*\n      0b100101100001 // iron ore\n      0b100101100101 // gold ore\n      0b010111100001 // wool\n      0b010111100111 // sugarcane\n      0b010111100011 // tobacco\n      0b010111101001 // cows\n      0b010111011111 // grain\n      0b000111110101 // flour\n      0b001000001001 // iron\n      0b001000000101 // swords\n      0b001000010001 // muskets\n      0b001000001111 // canons\n      0b010000110011 // food\n      0b001000001101 // tobacco\n      0b010111011101 // spice\n      0b010111100101 // cacao\n      0b001000000111 // wine\n      0b000111111011 // fabric\n      0b000111111001 // clothing\n      0b001000010101 // jewellery\n      0b001000000011 // tools\n      0b011111010001 // wood\n      0b001000000001 // stone\n         */\n    const goodId = data.read16();\n    const _3 = data.read16();\n\n    return new Good(\n      goodId,\n      sellingPrice,\n      buyingPrice,\n      wantedSellingAmount,\n      wantedBuyingAmount,\n      currentAmount,\n      action\n    );\n  }\n\n  constructor(\n    public goodId: number,\n    public sellingPrice: number,\n    public buyingPrice: number,\n    public wantedSellingAmount: number,\n    public wantedBuyingAmount: number,\n    public currentAmount: number,\n    public action: GoodAction\n  ) {}\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\n\nexport enum ContractState {\n  Inactive = 0,\n  OfferedByMe = 1,\n  OfferedByOther = 2,\n  Active = 3\n}\n\nexport default class Contract {\n  public static fromSaveGame(data: Stream) {\n    const state = data.read32();\n    const time = data.read32(); // unsure\n\n    return new Contract(state, time);\n  }\n\n  constructor(\n    public readonly state: ContractState,\n    public readonly time: number\n  ) {}\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport Good from \"./good\";\n\nexport type Kontor = ReturnType<typeof kontorFromSaveGame>;\n\nexport function kontorFromSaveGame(data: Stream) {\n  const islandId = data.read8();\n  const position = new Point(data.read8(), data.read8());\n  const playerId = data.read8();\n  const goods = parseGoods(data);\n\n  return {\n    islandId,\n    position,\n    playerId,\n    goods\n  };\n}\n\nfunction parseGoods(data: Stream) {\n  const goods = [];\n  for (let i = 0; i < 2; i++) {\n    Good.fromSaveGame(data);\n  }\n  for (let i = 2; i < 2 + 23; i++) {\n    goods.push(Good.fromSaveGame(data));\n  }\n  for (let i = 2 + 23; i < 50; i++) {\n    Good.fromSaveGame(data);\n  }\n  return goods;\n}\n","import Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\nenum PlayerEventKind {}\n// TODO\n\nexport default class PlayerEvent {\n  public static fromSaveGame(data: Stream) {\n    const kind = data.read8();\n    const otherPlayerId = data.read8();\n    assert(data.read16() === 0);\n    const time = data.read32(); // TODO: Which unit is time in?\n\n    return new PlayerEvent(kind, otherPlayerId, time);\n  }\n\n  constructor(\n    public readonly kind: PlayerEventKind,\n    public readonly otherPlayerId: number,\n    public readonly time: number\n  ) {}\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\nimport Contract from \"./contract\";\nimport PlayerEvent from \"./player-event\";\n\nexport enum PlayerKind {\n  HUMAN = 0,\n  AI = 9,\n  TRADER = 13,\n  PIRATE = 14,\n  NATIVE = 11\n}\n\nexport type Player = ReturnType<typeof playerFromSaveGame>;\n\nexport function playerFromSaveGame(data: Stream) {\n  const money = data.read32S();\n  const kind: PlayerKind = data.read8();\n  const id = data.read8();\n  const humanPlayerCount = data.read8(); // unsure\n  const color = data.read8();\n  const killedByPlayerId = data.read8(); // killedByPlayerId\n  assert(data.read8() === 0);\n  const _3_3 = data.read16(); // unsure, time since no ships and cities\n  const assignedTaskId = data.read8(); // Can be 0, 1, 2, 3 or 0xFF (no task assigned)\n  const _3_2 = data.read8(); // unsure, may not be played by human\n  const palaceBuilt = data.read8Bool();\n  const cathedralBuilt = data.read8Bool();\n\n  const enemiesDefeated = data.read16();\n  const triumphArchesBuilt = data.read16();\n  const soldiersKilled = data.read16();\n  const soldiersFallen = data.read16();\n  const shipsSunken = data.read16();\n  const shipsKilled = data.read16();\n  const _4 = data.read8();\n  const flags = data.read8();\n  const enablePositiveWillInfluence = (flags & (1 << 0)) > 0;\n  const enableNegativeWillInfluence = (flags & (1 << 1)) > 0;\n  const _5 = data.read(6);\n  const positiveWillInfluence = data.read8() / 32.0 + 1.0; // Between 1.0 and 5.0\n  const negativeWillInfluence = data.read8() / 32.0 + 1.0; // Between 1.0 and 5.0\n  assert(data.read(14).every(e => e === 0));\n  const accessibleBuildings = data.read32();\n  const statues = data.read16();\n  const statuesBuilt = data.read16();\n  const tmp = data.read32();\n  assert(tmp === 0xffffffff);\n\n  const _8 = data.read(264);\n  const tradeContracts = [];\n  for (let i = 0; i < 3; i++) {\n    tradeContracts.push(Contract.fromSaveGame(data));\n  }\n  const peaceContracts = [];\n  for (let i = 0; i < 3; i++) {\n    peaceContracts.push(Contract.fromSaveGame(data));\n  }\n\n  const _9 = data.read(72);\n\n  const playerEvents = [];\n  for (let i = 0; i < 64; i++) {\n    playerEvents.push(PlayerEvent.fromSaveGame(data));\n  }\n\n  const fullName = data.readString(64);\n  const shortName = data.readString(48); // Only used in multiplayer\n\n  console.log(`player ${id}:  `, killedByPlayerId, _3_3, _3_2, _4, _5); // , _8, _9);\n\n  return {\n    id,\n    kind,\n    color,\n    fullName,\n    shortName,\n    tradeContracts,\n    peaceContracts,\n    money,\n    enemiesDefeated,\n    triumphArchesBuilt,\n    soldiersKilled,\n    soldiersFallen,\n    shipsSunken,\n    shipsKilled,\n    accessibleBuildings,\n    statues,\n    statuesBuilt,\n    palaceBuilt,\n    cathedralBuilt,\n\n    enablePositiveWillInfluence,\n    enableNegativeWillInfluence,\n    positiveWillInfluence,\n    negativeWillInfluence,\n\n    assignedTaskId,\n\n    playerEvents\n  };\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\nexport class Producer {\n  public islandId: number;\n  public position: Point;\n\n  /**\n   * The amount of goods already produced and waiting for pickup.\n   */\n  public stock: number;\n  // The amount of primary input goods waiting to be used.\n  // They are only \"taken\" when an output good is finished.\n  public firstGoodStock: number;\n  // The amount of secondary input goods waiting to be used (normally wood).\n  // This is 0 for buildings which don't use secondary goods.\n  // They are only \"taken\" when an output good is finished.\n  public secondGoodStock: number;\n\n  /**\n   * The timer is decremented every second, regardless of whether or not\n   * the building has enough input goods to produce something. Once it would reach 0\n   * (i.e., the timer never actually reaches 0):\n   * If there are enough input goods to produce an output good (= producedGood is 128):\n   *   - the timer is set to \"HAUS_PRODTYP.Interval\"\n   *   - \"stock\" is incremented\n   *   - \"firstGoodStock\" is decremented by \"HAUS_PRODTYP.Rohmenge\"\n   *   - \"secondGoodStock\" ???\n   *   - \"noGoodCnt\" is set to 0\n   * If there are NOT enough goods (= producedGood is not 128):\n   *   - it is set to 11 (at least for \"Webstube\")\n   *   - \"noGoodCnt\" is increased (up to a maximum of 15)\n   *\n   * Whenever new input goods are delivered and there were previously not enough\n   * input goods to create output goods, the timer is immediately set to\n   * \"HAUS_PRODTYP.Interval\" ??\n   *\n   * I am unsure why the timer is running even when no goods are currently being\n   * produced.\n   */\n  public timer: number;\n  public prodCount: number;\n  public timeCount: number;\n  public howMuchIsBeingProduced: number;\n\n  private goodWasProduced: number;\n  private speedCnt: number;\n\n  public static load(data: Stream) {\n    const p = new Producer();\n\n    p.islandId = data.read8();\n    p.position = new Point(data.read8(), data.read8());\n    data.read8();\n\n    p.speedCnt = data.read8() & 0b111;\n    p.stock = data.read16();\n    data.read8();\n\n    p.timer = data.read16();\n    p.secondGoodStock = data.read16();\n\n    p.firstGoodStock = data.read16();\n    data.read8();\n    p.howMuchIsBeingProduced = data.read8();\n\n    p.prodCount = data.read16();\n    p.timeCount = data.read16();\n\n    const flags = data.read8();\n    p.setActive(!!(flags & (1 << 0)));\n    p.setAnimCount((flags >> 2) & 0b1111);\n    p.setGoodsAllowedForPickup((flags & (1 << 6)) === 1);\n    if (flags & (1 << 1)) {\n      p.goodWasProduced |= 1 << 6;\n    } else {\n      p.goodWasProduced &= ~(1 << 6);\n    }\n\n    p.setGoodWasProducedTimer(data.read8() & 0b1111);\n    assert(data.read16() === 0);\n\n    return p;\n  }\n\n  public save(stream: Stream) {\n    stream.write8(this.islandId);\n    stream.write8(this.position.x);\n    stream.write8(this.position.y);\n    stream.write8(0);\n\n    stream.write8(this.speedCnt & 0b111);\n    stream.write16(this.stock);\n    stream.write8(0);\n\n    stream.write16(this.timer);\n    stream.write16(this.secondGoodStock);\n\n    stream.write16(this.firstGoodStock);\n    stream.write8(0);\n    stream.write8(this.howMuchIsBeingProduced);\n\n    stream.write16(this.prodCount);\n    stream.write16(this.timeCount);\n\n    const flags =\n      ((this.isActive() ? 0b1 : 0b0) << 0) |\n      (((this.goodWasProduced >> 6) & 1) << 1) |\n      (this.getAnimCount() << 2) |\n      ((this.goodsAllowedForPickup() ? 0b1 : 0b0) << 6);\n    stream.write8(flags);\n    stream.write8(this.getGoodWasProducedTimer());\n    stream.write16(0);\n  }\n\n  public isProducing() {\n    return !!(this.goodWasProduced & (1 << 7));\n  }\n\n  public isActive() {\n    return !!(this.speedCnt & (1 << 3));\n  }\n\n  public setActive(active: boolean) {\n    if (active) {\n      this.speedCnt |= 1 << 3;\n    } else {\n      this.speedCnt &= ~(1 << 3);\n    }\n  }\n\n  public goodsAllowedForPickup() {\n    return !!(this.goodWasProduced & (1 << 4));\n  }\n\n  public setGoodsAllowedForPickup(value: boolean) {\n    if (value) {\n      this.goodWasProduced |= 1 << 4;\n    } else {\n      this.goodWasProduced &= ~(1 << 4);\n    }\n  }\n\n  public stockAsInt() {\n    return this.stock >>> 5;\n  }\n\n  public firstGoodStockAsInt() {\n    return this.firstGoodStock >>> 5;\n  }\n\n  public secondGoodStockAsInt() {\n    return this.secondGoodStock >>> 5;\n  }\n\n  /**\n   * timer that counts up and is reset whenever a good is produced\n   */\n  public getGoodWasProducedTimer() {\n    return this.goodWasProduced & 0b1111;\n  }\n\n  public setGoodWasProducedTimer(value: number) {\n    assert(value >= 0 && value <= 0b1111);\n    this.goodWasProduced =\n      (this.goodWasProduced & 0b11110000) | (value & 0b1111);\n  }\n\n  public getAnimCount() {\n    return (this.speedCnt >> 4) & 0b1111;\n  }\n\n  public setAnimCount(value: number) {\n    assert(value >= 0 && value <= 0b1111);\n    this.speedCnt = (this.speedCnt & 0b1111) | (value << 4);\n  }\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport { Rotation8 } from \"./world\";\n\n/**\n * # Animation notes\n *\n * There is a seperate animation per player color (red, blue, yellow, white)\n *\n * KANONIER1, KANONIER2, KANONIER3, KANONIER4\n * KAVALERIE1, KAVALERIE2, KAVALERIE3, KAVALERIE4\n * MUSKETIER1, MUSKETIER2, MUSKETIER3, MUSKETIER4\n * SOLDAT1, SOLDAT2, SOLDAT3, SOLDAT4\n */\n\nexport enum SoldierType {\n  Swordsman = 0,\n  Cavalry = 1,\n  Musketeer = 2,\n  Gunner = 3,\n  Native = 8\n}\n\nexport type Soldier = ReturnType<typeof soldierFromSaveGame>;\n\nexport function soldierFromSaveGame(data: Stream) {\n  const position = new Point(data.read16() / 2, data.read16() / 2);\n  const hp = data.read16();\n  const type = data.read16();\n  const id = data.read16();\n  const course1 = data.read(4);\n  const _1 = data.read16();\n  const _2 = data.read16();\n  const _3 = data.read8();\n  const _4 = data.read8();\n  const _5 = data.read32();\n  const playerId = data.read8();\n  const _6 = data.read8();\n  const _7 = data.read8();\n  const rotation = data.read8() as Rotation8;\n  const _8 = data.read8();\n  const isPatrolling = data.read8Bool();\n  const course2 = data.read(4);\n  const course3 = data.read(4);\n  const empty = data.read(30);\n\n  return {\n    id,\n    playerId,\n    type,\n    position: position,\n    rotation,\n    isPatrolling,\n    hp\n  };\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\ninterface ReachInhabitants {\n  count: number; // require n inhabitants\n  requiredLevel: number; // out of the n, a few need to reach level x\n  requiredLevelCount: number; // require y of n inhabitants with level x\n}\n\nexport type Task = ReturnType<typeof taskFromSaveGame>;\n\nexport function taskFromSaveGame(data: Stream) {\n  const id = data.read32();\n  const _1 = data.read(28);\n\n  const monopolyGoodId1 = data.read8();\n  assert(data.read8() === 0);\n  const monopolyGoodId2 = data.read8();\n  assert(data.read8() === 0);\n  const helpOtherToReachInhabitantsPlayerId = data.read8(); // Can be 0, 1, 2, 3 or 7 for any player.\n\n  assert(data.read(6).every(e => e === 0));\n\n  const playersToKill = [];\n  if (data.read8Bool()) {\n    // Any does not include trader, pirate and native.\n    playersToKill.push(\"any\");\n  }\n  if (data.read8Bool()) {\n    playersToKill.push(\"red\");\n  }\n  if (data.read8Bool()) {\n    playersToKill.push(\"blue\");\n  }\n  if (data.read8Bool()) {\n    playersToKill.push(\"yellow\");\n  }\n  if (data.read8Bool()) {\n    playersToKill.push(\"white\");\n  }\n  if (data.read8Bool()) {\n    // Should never be true\n    playersToKill.push(\"trader\");\n  }\n  if (data.read8Bool()) {\n    playersToKill.push(\"pirate\");\n  }\n  if (data.read8Bool()) {\n    // Should never be true\n    playersToKill.push(\"native\");\n  }\n\n  const _3 = data.read(25);\n\n  const requiredBalance = data.read32();\n  const successVideoId = data.read32();\n  const requiredTradeBalance = data.read32();\n  const _5 = data.read(16);\n\n  const text = data.readString(2048);\n\n  const _6 = data.read(8);\n\n  const ownCityReachInhabitants: ReachInhabitants[] = [];\n  for (let i = 0; i < 3; i++) {\n    ownCityReachInhabitants.push({\n      count: data.read32(),\n      requiredLevel: data.read32(),\n      requiredLevelCount: data.read32()\n    });\n  }\n\n  const _7 = data.read(36);\n\n  const helpOtherToReachInhabitants: ReachInhabitants = {\n    count: data.read32(),\n    requiredLevel: data.read32(),\n    requiredLevelCount: data.read32()\n  };\n\n  console.log(\"task\", id, _1, _3, _5, _6, _7);\n\n  return {\n    id,\n    text,\n    successVideoId,\n    playersToKill,\n    requiredBalance,\n    requiredTradeBalance,\n    ownCityReachInhabitants,\n    helpOtherToReachInhabitantsPlayerId,\n    helpOtherToReachInhabitants,\n    monopolyGoodId1,\n    monopolyGoodId2\n  };\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\nexport type Timers = ReturnType<typeof timersFromSaveGame>;\n\nexport function timersFromSaveGame(data: Stream) {\n  const cntCity = data.read8();\n  const cntIsland = data.read8();\n  const cntShipyard = data.read8();\n  const cntMilitary = data.read8();\n  const cntProduction = data.read8();\n  data.read(31 + 32);\n  const cntSettlers = data.read(8, 4);\n  const cntGrowth = data.read(8, 4);\n\n  const timeCity = data.read32();\n  const timeIsland = data.read32();\n  const timeShipyard = data.read32();\n  const timeMilitary = data.read32();\n  const timeProduction = data.read32();\n  const timeGoodToolsCnt = data.read32();\n  const timeGoodToolsMax = data.read32();\n  const timeGame = data.read32(); // Incremented every 100ms\n\n  const noErzOutFlg = data.read8();\n  const tutorFlg = data.read8();\n  const aiLevel = data.read8();\n  const missionNumber = data.read8();\n\n  const flags = data.read32();\n  const enableTrader = (flags & (1 << 6)) === 0;\n  const bigIronRunsOut = (flags & (1 << 3)) === 0;\n  const enableDroughts = (flags & (1 << 2)) === 0; // TODO: Does not appear to be working for endless games.\n  const enablePirate = (flags & (1 << 0)) === 0;\n  const enableVulcano = (flags & (1 << 8)) === 0;\n\n  const gameId = data.read32();\n  const cityNameNumber = data.read32();\n  const timeNextDrought = data.read32();\n  const timePirateSec = data.read32();\n  const missionSubNumber = data.read32();\n  const shipMax = data.read32();\n\n  // vulcano\n  data.read(4);\n  // vulcano 2\n  data.read(4);\n\n  const timeNextVulcano = data.read32();\n  const cntVulcano = data.read32();\n\n  data.read(17 + 32, 4);\n  // assert(data.read(17 + 32, 4).every((e) => e === 0));\n  const timeSettlers = data.read(32, 4);\n  const timeGrowth = data.read(32, 4);\n\n  const timers = {\n    /**\n     * Range: 0 to 7\n     * Update: Every 10 ticks (100 game time)\n     * Influence: ???\n     */\n    cntCity,\n    /**\n     * Range: 0 to 7\n     * Update: Every 30 ticks (300 game time)\n     * Influence: ???\n     */\n    cntIsland,\n    /**\n     * Range: 0 to 7\n     * Updaste: Every tick (10 game time)\n     * Influence: ???\n     */\n    cntShipyard,\n    /**\n     * Range: 0 to 7\n     * Updaste: Every tick (10 game time)\n     * Influence: ???\n     */\n    cntMilitary,\n    /**\n     * Range: 0 to 7\n     * Update: Every tick (10 game time)\n     * Influence: Whenever the timer reaches 0, all production buildings which are currently not producing\n     *            but active check if enough input goods have arrived in the meantime.\n     */\n    cntProduction,\n\n    cntSettlers,\n    cntGrowth,\n    timeCity,\n    timeIsland,\n    timeShipyard,\n    timeMilitary,\n    /**\n     * Increments by at most 200, but sometimes less (it likely depends on PC\n     * speed). Whenever it reaches at least 1000, cntProduction is incremented.\n     */\n    timeProduction,\n    timeGoodToolsCnt,\n    timeGoodToolsMax,\n    timeGame,\n    noErzOutFlg,\n    tutorFlg,\n    aiLevel,\n    missionNumber,\n    gameId,\n    cityNameNumber,\n    timeNextDrought,\n    timePirateSec,\n    missionSubNumber,\n    shipMax,\n    timeNextVulcano,\n    cntVulcano,\n    timeSettlers,\n    timeGrowth,\n    enableTrader,\n    bigIronRunsOut,\n    enableDroughts,\n    enablePirate,\n    enableVulcano\n  };\n  console.log(timers);\n\n  return timers;\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport { IslandSizeId } from \"../../parsers/GAM/island-loader\";\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\nexport interface IslandTemplate {\n  num: number;\n  size: 0 | 1 | 2 | 3 | 4;\n  position: Point;\n  climate: \"NORTH\" | \"SOUTH\" | \"ANY\";\n  numBaseIsland: number;\n}\n\nexport default class WorldGenerationSettings {\n  public static fromSaveGame(data: Stream) {\n    const _1 = data.slice(100);\n\n    const numNativesNorth = _1[64];\n    const numNativesSouth = _1[68];\n\n    const numIslands = data.read32();\n\n    const _2 = data.slice(268);\n\n    const numBigIronOre = _2[46]; // Erzberg:    ERZBERG_GROSS, 6\n    const numSmallIronOre = _2[54]; // Erzberg:    ERZBERG_KLEIN, 8\n    const numGoldOre = _2[62];\n\n    const numWine = _2[110]; // Ware:       WEINTRAUBEN, 4\n    const numSugarCane = _2[95]; // Ware:       ZUCKERROHR, 3\n    const numSpice = _2[86]; // Ware:       GEWUERZBAUM, 2\n    const numCacao = _2[118]; // Ware:       KAKAOBAUM, 2\n    const numTobacco = _2[78]; // Ware:       TABAKBAUM, 3\n    const numCotton = _2[102]; // Ware:       BAUMWOLLE, 3\n\n    const numTreasures = _2[174]; // Schatz:     10\n\n    const islandTemplates: IslandTemplate[] = [];\n    for (let i = 0; i < numIslands; i++) {\n      const flags = data.read8();\n      const forceNorth = flags === 0;\n      const forceSouth = flags === 1;\n      const islandSize = data.read8(); // 0...4, where 0 is small and 4 is large.\n      if (islandSize < 0 || islandSize > 4) {\n        throw new Error(`Invalid island size category: ${islandSize}.`);\n      }\n      assert(data.read8() === 0x0000);\n      const num = data.read8();\n      const numBaseIsland = data.read16(); // 0xFFFF for random\n      assert(data.read16() === 0);\n      const position = new Point(data.read32(), data.read32());\n      islandTemplates.push({\n        num,\n        size: islandSize as IslandSizeId,\n        position: position,\n        climate: forceNorth ? \"NORTH\" : forceSouth ? \"SOUTH\" : \"ANY\",\n        numBaseIsland\n      });\n    }\n    for (const each of data.slice(data.length - data.position())) {\n      assert(each === 0);\n    }\n\n    // function dbg(arr: Uint8Array) {\n    //    let debug = \"\";\n    //    for (const each of arr) {\n    //        debug += `${each}\\n`;\n    //    }\n    //    console.log(debug);\n    // }\n    // dbg(_1);\n    // dbg(_2);\n\n    return new WorldGenerationSettings(\n      numNativesNorth,\n      numNativesSouth,\n      numBigIronOre,\n      numSmallIronOre,\n      numGoldOre,\n      numWine,\n      numSugarCane,\n      numSpice,\n      numCacao,\n      numTobacco,\n      numCotton,\n      numTreasures,\n      islandTemplates\n    );\n  }\n\n  public static empty() {\n    return new WorldGenerationSettings(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, []);\n  }\n\n  constructor(\n    public readonly numNativesNorth: number,\n    public readonly numNativesSouth: number,\n    public readonly numBigIronOre: number,\n    public readonly numSmallIronOre: number,\n    public readonly numGoldOre: number,\n    public readonly numWine: number,\n    public readonly numSugarCane: number,\n    public readonly numSpice: number,\n    public readonly numCacao: number,\n    public readonly numTobacco: number,\n    public readonly numCotton: number,\n    public readonly numTreasures: number,\n    public readonly islandTemplates: IslandTemplate[]\n  ) {}\n}\n","import Stream from \"../stream\";\n\nexport class Block {\n  public static empty(type: string) {\n    return new Block(type, 0, new Stream(new Uint8Array()));\n  }\n\n  public static fromStream(data: Stream) {\n    return new Block(data.readString(16), data.read32(), data);\n  }\n\n  public readonly data: Stream;\n\n  constructor(\n    public readonly type: string,\n    public readonly length: number,\n    data: Stream\n  ) {\n    this.data = new Stream(data.slice(length));\n  }\n}\n\nexport class IslandBlock extends Block {\n  public inselHausBlocks: Block[] = [];\n}\n","import {\n  islandFromIsland3File,\n  islandFromIsland4File,\n  islandFromIsland5File\n} from \"../../game/world/island\";\nimport World from \"../../game/world/world\";\nimport WorldGenerationSettings from \"../../game/world/world-generation-settings\";\nimport assert from \"../../util/assert\";\nimport { Block } from \"./block\";\nimport IslandLoader from \"./island-loader\";\n\nexport default class WorldGenerator {\n  constructor(private islandLoader: IslandLoader) {}\n\n  public async populateWorld(\n    world: World,\n    worldGenerationSettings: WorldGenerationSettings\n  ) {\n    let nextIslandId = Math.max(...world.islands.map(island => island.id)) + 1;\n\n    for (const islandTemplate of worldGenerationSettings.islandTemplates) {\n      const { data, isSouth, id: numBaseIsland } =\n        islandTemplate.numBaseIsland === 0xffff\n          ? await this.islandLoader.loadRandomIslandFile(\n              islandTemplate.size,\n              islandTemplate.climate\n            )\n          : {\n              isSouth: islandTemplate.climate === \"SOUTH\",\n              id: islandTemplate.numBaseIsland,\n              data: await this.islandLoader.loadIslandFileNum({\n                isSouth: islandTemplate.climate === \"SOUTH\",\n                numBaseIsland: islandTemplate.numBaseIsland,\n                size: islandTemplate.size\n              })\n            };\n\n      const blocks: Block[] = [];\n      while (!data.eof()) {\n        blocks.push(Block.fromStream(data));\n      }\n\n      const inselBlock = blocks.find(block =>\n        [\"INSEL5\", \"INSEL4\", \"INSEL3\"].includes(block.type)\n      );\n      assert(inselBlock !== undefined);\n      const inselHausBlock = blocks.find(block => block.type === \"INSELHAUS\");\n      assert(inselHausBlock !== undefined);\n\n      // TODO: Place random things:\n      // numNativesNorth,\n      // numNativesSouth,\n      // numBigIronOre,\n      // numSmallIronOre,\n      // numGoldOre,\n      // numWine,\n      // numSugarCane,\n      // numSpice,\n      // numCacao,\n      // numTobacco,\n      // numCotton,\n      // numTreasures,\n\n      let newIsland;\n      switch (inselBlock!.type) {\n        case \"INSEL5\":\n          newIsland = islandFromIsland5File(\n            nextIslandId++,\n            islandTemplate.position,\n            isSouth,\n            numBaseIsland,\n            inselBlock!.data\n          );\n          break;\n        case \"INSEL4\":\n          newIsland = islandFromIsland4File(\n            nextIslandId++,\n            islandTemplate.position,\n            isSouth,\n            numBaseIsland,\n            inselBlock!.data\n          );\n          break;\n        case \"INSEL3\":\n          newIsland = islandFromIsland3File(\n            nextIslandId++,\n            islandTemplate.position,\n            isSouth,\n            numBaseIsland,\n            inselBlock!.data\n          );\n          break;\n        default:\n          throw new Error(\"This code cannot be reached.\");\n      }\n\n      this.islandLoader.setIslandFields(newIsland, [inselHausBlock!]);\n\n      world.islands.push(newIsland);\n    }\n  }\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { castleFromSaveGame } from \"../../game/world/castle\";\nimport { cityFromSaveGame } from \"../../game/world/city\";\nimport { Island, islandFromSaveGame } from \"../../game/world/island\";\nimport { kontorFromSaveGame } from \"../../game/world/kontor\";\nimport { Player, playerFromSaveGame } from \"../../game/world/player\";\nimport { Producer } from \"../../game/world/producer\";\nimport { shipFromSaveGame } from \"../../game/world/ship\";\nimport { soldierFromSaveGame } from \"../../game/world/soldier\";\nimport { taskFromSaveGame } from \"../../game/world/task\";\nimport { timersFromSaveGame } from \"../../game/world/timers\";\nimport { traderFromSaveGame } from \"../../game/world/trader\";\nimport World from \"../../game/world/world\";\nimport WorldGenerationSettings from \"../../game/world/world-generation-settings\";\nimport assert from \"../../util/assert\";\nimport Stream from \"../stream\";\nimport { Block, IslandBlock } from \"./block\";\nimport IslandLoader from \"./island-loader\";\nimport WorldGenerator from \"./world-generator\";\n\nexport default class GAMParser {\n  private worldGenerator: WorldGenerator | null;\n\n  constructor(private islandLoader: IslandLoader | null) {\n    this.worldGenerator = islandLoader\n      ? new WorldGenerator(islandLoader)\n      : null;\n  }\n\n  public parse(data: Stream) {\n    const blocks: Map<string, Block[]> = new Map();\n    while (!data.eof()) {\n      const block = Block.fromStream(data);\n      if (block.type !== \"INSELHAUS\") {\n        if (!blocks.has(block.type)) {\n          blocks.set(block.type, []);\n        }\n        blocks.get(block.type)!.push(block);\n      } else {\n        const lastIslandBlock = blocks.get(\"INSEL5\")![\n          blocks.get(\"INSEL5\")!.length - 1\n        ] as IslandBlock;\n        if (lastIslandBlock.inselHausBlocks === undefined) {\n          lastIslandBlock.inselHausBlocks = [];\n        }\n        lastIslandBlock.inselHausBlocks.push(block);\n      }\n    }\n    return blocks;\n  }\n\n  public async getWorld(data: Stream) {\n    const blocks = this.parse(data);\n    const { world, worldGenerationSettings } = await this.doParse(blocks);\n\n    await this.worldGenerator!.populateWorld(world, worldGenerationSettings);\n\n    return world;\n  }\n\n  public async doParse(blocks: Map<string, Block[]>) {\n    // console.log([...blocks.keys()].map(key => [key, blocks.get(key).length]));\n    console.log(\n      [...blocks.keys()]\n        .filter(\n          key => blocks.get(key)!.find(block => block.length > 0) !== undefined\n        )\n        .map(key => [key, blocks.get(key)])\n    );\n\n    let gameName = \"\";\n    if (blocks.has(\"NAME\")) {\n      // Missions don't have a name.\n      const nameBlock = blocks.get(\"NAME\")![0];\n      gameName = nameBlock.data.readString(nameBlock.length);\n    }\n\n    const playerBlock = blocks.get(\"PLAYER4\")![0];\n    const players = this.parsePlayers(playerBlock);\n\n    const islandBlocks = blocks.has(\"INSEL5\")\n      ? (blocks.get(\"INSEL5\") as IslandBlock[])\n      : [];\n    const islands = await this.parseIslands(islandBlocks);\n\n    const tasks = this.handleBlock(blocks, \"AUFTRAG4\", taskFromSaveGame);\n    const ships = this.handleBlock(blocks, \"SHIP4\", shipFromSaveGame);\n    const soldiers = this.handleBlock(blocks, \"SOLDAT3\", soldierFromSaveGame);\n    const kontors = this.handleBlock(blocks, \"KONTOR2\", kontorFromSaveGame);\n    const castles = this.handleBlock(blocks, \"MILITAR\", castleFromSaveGame);\n    const cities = this.handleBlock(blocks, \"STADT4\", cityFromSaveGame);\n    const producers = this.handleBlock(blocks, \"PRODLIST2\", Producer.load);\n\n    // TODO: HIRSCH2, WERFT, SIEDLER, ROHWACHS2, MARKT2, TURM, WIFF\n    let trader = null;\n    if (blocks.has(\"HANDLER\") && blocks.get(\"HANDLER\")![0].length > 0) {\n      trader = traderFromSaveGame(blocks.get(\"HANDLER\")![0].data);\n    }\n\n    assert(blocks.has(\"TIMERS\"));\n    assert(blocks.get(\"TIMERS\")!.length === 1);\n    const timers = timersFromSaveGame(blocks.get(\"TIMERS\")![0].data);\n\n    let worldGenerationSettings = WorldGenerationSettings.empty();\n    if (blocks.has(\"SZENE\")) {\n      const data = blocks.get(\"SZENE\")![0].data;\n      worldGenerationSettings = WorldGenerationSettings.fromSaveGame(data);\n    }\n\n    const world = new World(\n      islands,\n      players,\n      tasks,\n      gameName,\n      soldiers,\n      ships,\n      kontors,\n      castles,\n      cities,\n      trader,\n      timers,\n      producers\n    );\n\n    return { world, worldGenerationSettings };\n  }\n\n  private handleBlock<T>(\n    blocks: Map<string, Block[]>,\n    name: string,\n    fromSaveGame: (data: Stream) => T\n  ): T[] {\n    if (!blocks.has(name)) {\n      return [];\n    }\n    const entities: T[] = [];\n    for (const block of blocks.get(name)!) {\n      while (!block.data.eof()) {\n        entities.push(fromSaveGame(block.data));\n      }\n    }\n    return entities;\n  }\n\n  private async parseIslands(islandBlocks: IslandBlock[]) {\n    const islands: Island[] = [];\n    if (!this.islandLoader) {\n      return islands;\n    }\n\n    for (const islandBlock of islandBlocks) {\n      const island = islandFromSaveGame(islandBlock.data);\n      const islandBuildingBlocks =\n        islandBlock.inselHausBlocks !== undefined\n          ? islandBlock.inselHausBlocks\n          : [];\n\n      let islandTopBlock = Block.empty(\"INSELHAUS\");\n      let islandBottomBlock;\n      if (!island.differsFromBaseIsland && islandBuildingBlocks.length <= 1) {\n        if (islandBuildingBlocks.length === 1) {\n          islandTopBlock = islandBuildingBlocks[0];\n        }\n\n        const islandFile = await this.islandLoader.loadIslandFile(island);\n\n        // The basis block contains the same information already present in\n        // the island block of the savegame. We can safely skip over it.\n        const islandBasisBlock = Block.fromStream(islandFile);\n        // TODO: New Horizons 0 has a basis block of INSEL3\n        // assert(islandBasisBlock.type === \"INSEL5\", `Expected different island basis block ${islandBasisBlock.type}`);\n\n        islandBottomBlock = Block.fromStream(islandFile);\n        assert(islandBottomBlock.type === \"INSELHAUS\");\n        // TODO: There are some more HIRSCH blocks we ignore.\n      } else {\n        assert(\n          islandBuildingBlocks.length >= 1 && islandBuildingBlocks.length <= 2\n        );\n        islandBottomBlock = islandBuildingBlocks[0];\n        if (islandBuildingBlocks.length === 2) {\n          islandTopBlock = islandBuildingBlocks[1];\n        }\n      }\n      this.islandLoader.setIslandFields(island, [\n        islandBottomBlock,\n        islandTopBlock\n      ]);\n\n      islands.push(island);\n    }\n    return islands;\n  }\n\n  private parsePlayers(block: Block) {\n    const players: Player[] = [];\n    while (!block.data.eof()) {\n      players.push(playerFromSaveGame(block.data));\n    }\n    return players;\n  }\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\n\nexport type Trader = ReturnType<typeof traderFromSaveGame>;\n\nexport function traderFromSaveGame(data: Stream) {\n  const _1 = data.read32();\n  const _2 = data.read(5 * 4);\n  const goods = parseGoods(data);\n  const _3 = data.read(292);\n\n  console.log(\"trader\", _1, _2, goods, _3);\n\n  return {\n    goods\n  };\n}\n\nfunction parseGoods(data: Stream) {\n  const goods = [];\n  for (let i = 0; i < 24; i++) {\n    goods.push({\n      goodId: data.read32(),\n      _1: data.read32(),\n      _2: data.read32()\n    });\n  }\n  return goods;\n}\n","import { BitmapText, Container, Sprite } from \"pixi.js\";\nimport FileSystem from \"../../filesystem\";\nimport GAMParser from \"../../parsers/GAM/gam-parser\";\nimport assert from \"../../util/assert\";\nimport MenuStructure, { ScreenConfig } from \"../menu-structure\";\nimport { Translator } from \"../../translation/translator\";\n\nexport default class Missions implements ScreenConfig {\n  public buttons = [\n    this.renderNewGame.bind(this),\n    this.renderLoadGame.bind(this),\n    async (container: Container) => {\n      await this.menuStructure.renderScreen(container, \"menu_loading\");\n      this.menuStructure.emit(\"load-game\", \"/saves/lastgame.gam\");\n    },\n    async (container: Container) =>\n      this.menuStructure.renderScreen(container, \"menu_main\"),\n    async (stage: Container) => {\n      this.currentPage = Math.max(0, this.currentPage - 1);\n      await this.renderNewGame(stage);\n    },\n    async (stage: Container) => {\n      this.currentPage = Math.min(\n        Math.ceil(this.newGameLines.length / this.ROWS) - 1,\n        this.currentPage + 1\n      );\n      await this.renderNewGame(stage);\n    }\n  ];\n\n  public texts = [];\n  public ignore = [];\n\n  private readonly ROWS = 14;\n\n  private readonly SCROLL_UP = \"menu-31011\";\n  private readonly SCROLL_DOWN = \"menu-31012\";\n\n  private newGameLines: Array<{\n    name: string;\n    difficulty?: number;\n    file?: WebKitFileEntry;\n  }> = [];\n\n  private currentPage = 0;\n  private gamParser: GAMParser;\n\n  constructor(\n    private readonly fs: FileSystem,\n    private readonly menuStructure: MenuStructure,\n    private readonly translator: Translator\n  ) {\n    this.gamParser = new GAMParser(null);\n  }\n\n  public async onLoad(stage: Container) {\n    await this.getNewGameLines();\n\n    await this.renderNewGame(stage);\n    await this.menuStructure._playMainMenuMusic();\n  }\n\n  public async renderNewGame(stage: Container) {\n    const currentTopItem = this.currentPage * this.ROWS;\n\n    for (let i = 0; i < this.ROWS; i++) {\n      const bitmapText = stage.getChildByName(\n        `menu-${31021 + i}`\n      ) as BitmapText;\n\n      bitmapText.off(\"click\");\n      bitmapText.visible = false;\n      bitmapText.interactive = false;\n      bitmapText.buttonMode = false;\n\n      if (i + currentTopItem < this.newGameLines.length) {\n        const line = this.newGameLines[i + currentTopItem];\n        bitmapText.text = line.name;\n        bitmapText.visible = true;\n        if (line.file) {\n          bitmapText.interactive = true;\n          bitmapText.buttonMode = true;\n          bitmapText.once(\"click\", async () => {\n            await this.menuStructure.renderScreen(stage, \"menu_loading\");\n            this.menuStructure.emit(\"load-game\", line.file!.fullPath);\n          });\n        }\n      }\n    }\n    for (let i = 0; i < this.ROWS; i++) {\n      const sprite = stage.getChildByName(`menu-${31041 + i}`) as Sprite;\n      sprite.visible =\n        i + currentTopItem < this.newGameLines.length &&\n        !!this.newGameLines[i + currentTopItem].file;\n    }\n    for (let i = 0; i < this.ROWS; i++) {\n      const sprite = stage.getChildByName(`menu-${31061 + i}`) as Sprite;\n      sprite.visible = false;\n    }\n\n    stage.getChildByName(this.SCROLL_UP).visible = true;\n    stage.getChildByName(this.SCROLL_DOWN).visible = true;\n  }\n\n  public async renderLoadGame(stage: Container) {\n    const saves = (await this.fs.ls(\"/saves\", \".gam\")).filter(\n      save => save.name !== \"lastgame.gam\"\n    );\n\n    const maxSaveGames = 12;\n    for (let i = 0; i < this.ROWS; i++) {\n      const bitmapText = stage.getChildByName(\n        `menu-${31021 + i}`\n      ) as BitmapText;\n      bitmapText.visible = i < maxSaveGames;\n      if (i < saves.length) {\n        // TODO: Read name from Game.dat\n        bitmapText.text = `Game${i.toString().padStart(2, \"0\")}`;\n        bitmapText.interactive = true;\n        bitmapText.buttonMode = true;\n        bitmapText.once(\"click\", async () => {\n          await this.menuStructure.renderScreen(stage, \"menu_loading\");\n          this.menuStructure.emit(\"load-game\", saves[i].fullPath);\n        });\n      } else {\n        bitmapText.text = `Empty${i.toString().padStart(2, \"0\")}`;\n      }\n    }\n    for (let i = 0; i < this.ROWS; i++) {\n      const sprite = stage.getChildByName(`menu-${31041 + i}`) as Sprite;\n      sprite.visible = false;\n    }\n    for (let i = 0; i < this.ROWS; i++) {\n      // TODO: Read players (from Game.dat ?)\n      const sprite = stage.getChildByName(`menu-${31061 + i}`) as Sprite;\n      sprite.visible = i < maxSaveGames;\n    }\n\n    stage.getChildByName(this.SCROLL_UP).visible = false;\n    stage.getChildByName(this.SCROLL_DOWN).visible = false;\n  }\n\n  private async getNewGameLines() {\n    const missions = await this.loadMissions();\n\n    this.newGameLines.push({\n      name: this.translator.translate(\"menu.divider.orginal_missions\")\n    });\n\n    missions\n      .filter(mission => mission.missionNum !== -1)\n      .forEach(mission => {\n        this.newGameLines.push({\n          name: mission.name,\n          file: mission.file as WebKitFileEntry\n        });\n      });\n\n    this.newGameLines.push({\n      name: this.translator.translate(\"menu.divider.missions\")\n    });\n\n    this.newGameLines.push({\n      name: this.translator.translate(\"menu.divider.new_missions\")\n    });\n\n    missions\n      .filter(mission => mission.missionNum === -1)\n      .forEach(mission => {\n        this.newGameLines.push({\n          name: mission.name,\n          file: mission.file as WebKitFileEntry\n        });\n      });\n\n    this.newGameLines.push({\n      name: this.translator.translate(\"menu.divider.custom_missions\")\n    });\n    const customMissions = await this.fs.ls(\"/missions-custom\", \".szs\");\n    customMissions.forEach(mission => {\n      this.newGameLines.push({\n        name: mission.name.replace(\".szs\", \"\"),\n        file: mission as WebKitFileEntry\n      });\n    });\n  }\n\n  private async loadMissions() {\n    const missions = await Promise.all(\n      (await this.fs.ls(\"/missions-original\", \".szs\")).map(async mission => {\n        const data = await this.fs.openAndGetContentAsStream(mission);\n        const blocks = this.gamParser.parse(data);\n        let ranking = -1; // NOT the number of stars\n        if (blocks.has(\"SZENE_RANKING\")) {\n          assert(blocks.get(\"SZENE_RANKING\")!.length === 1);\n          ranking = blocks.get(\"SZENE_RANKING\")![0].data.read32();\n        }\n        let campaignNum = -1;\n        if (blocks.has(\"SZENE_KAMPAGNE\")) {\n          assert(blocks.get(\"SZENE_KAMPAGNE\")!.length === 1);\n          campaignNum = blocks.get(\"SZENE_KAMPAGNE\")![0].data.read32();\n        }\n        // The missionNum denotes which\n        let missionNum = -1;\n        if (blocks.has(\"SZENE_MISSNR\")) {\n          assert(blocks.get(\"SZENE_MISSNR\")!.length === 1);\n          missionNum = blocks.get(\"SZENE_MISSNR\")![0].data.read32();\n        }\n\n        return {\n          blocks,\n          ranking,\n          campaignNum,\n          missionNum,\n          name: mission.name,\n          file: mission\n        };\n      })\n    );\n    missions.sort((a, b) => {\n      if (a.missionNum !== -1 && b.missionNum === -1) {\n        return -1;\n      } else if (a.missionNum === -1 && b.missionNum !== -1) {\n        return 1;\n      } else if (a.missionNum !== -1 && b.missionNum !== -1) {\n        if (a.missionNum < b.missionNum) {\n          return -1;\n        } else if (a.missionNum > b.missionNum) {\n          return 1;\n        } else {\n          // TODO: Sort missions within mission\n          return 0;\n        }\n      } else {\n        // TODO: Sort otherwise\n        return 0;\n      }\n    });\n\n    console.table(missions);\n\n    return missions;\n  }\n}\n","import { Container, Sprite } from \"pixi.js\";\nimport { utils } from \"pixi.js\";\nimport FileSystem from \"../filesystem\";\nimport { textureFromUint8ArrayMP4 } from \"../util/pixi\";\nimport GADRenderer from \"./gad-renderer\";\nimport Missions from \"./menu/missions\";\nimport MusicPlayer from \"./music-player\";\nimport { Translator } from \"../translation/translator\";\n\ntype Callback = (container: Container) => void;\ntype BtnCallback = (container: Container, active: boolean) => void;\n\nexport interface ScreenConfig {\n  onLoad: Callback;\n  buttons: BtnCallback[] | Record<number, BtnCallback>;\n  texts: Record<number, string>;\n  ignore: number[];\n}\n\nexport default class MenuStructure extends utils.EventEmitter {\n  private readonly structure: { [k: string]: ScreenConfig } = {\n    menu_main: {\n      onLoad: () => this._playMainMenuMusic(),\n      buttons: [\n        container => this.renderScreen(container, \"menu_missions\"),\n        () => console.log(\"Multiplayer\"),\n        async (container: Container) => {\n          // Credits\n          this.musicPlayer.stop();\n          const videoSprite = await this.loadVideoSprite(10);\n          videoSprite.width = 453 - 14;\n          videoSprite.height = 367 - 14;\n          videoSprite.position.set(500 + 7, 359 + 7);\n          this.gadRenderer.renderVideo(\n            container,\n            videoSprite,\n            () => this._playMainMenuMusic\n          );\n        },\n        async (container: Container) => {\n          // Intro\n          const videoSprite = await this.loadVideoSprite(58);\n          this.musicPlayer.stop();\n          this.gadRenderer.renderVideoFullscreen(container, videoSprite, () =>\n            this.renderScreen(container, \"menu_main\")\n          );\n        },\n        () => console.log(\"Exit\")\n      ],\n      texts: [],\n      ignore: []\n    },\n    menu_missions: new Missions(this.fs, this, this.translator),\n    menu_loading: {\n      onLoad: () => {\n        // Nothing to do\n      },\n      buttons: [],\n      texts: [],\n      ignore: []\n    },\n    menu_mission_details: {\n      onLoad: () => {\n        // Nothing to do\n      },\n      buttons: [\n        () => console.log(\"Start Mission\"),\n        (container: Container) => this.renderScreen(container, \"menu_missions\"),\n        () => console.log(\"Highscores up\"),\n        () => console.log(\"Highscores down\"),\n        () => console.log(\"Sub-Mission 0\"),\n        () => console.log(\"Sub-Mission 1\"),\n        () => console.log(\"Sub-Mission 2\"),\n        () => console.log(\"Sub-Mission 3\"),\n        () => console.log(\"Sub-Mission 4\"),\n        () => console.log(\"Mission Description up\"),\n        () => console.log(\"Mission Description down\"),\n        () => console.log(\"Mission Description Slider\")\n      ],\n      texts: [],\n      ignore: []\n    }\n  };\n\n  constructor(\n    private readonly fs: FileSystem,\n    private readonly gadRenderer: GADRenderer,\n    private readonly musicPlayer: MusicPlayer,\n    private readonly translator: Translator\n  ) {\n    super();\n  }\n\n  public async renderScreen(\n    container: Container,\n    screen: string,\n    model?: ScreenConfig\n  ) {\n    const data = JSON.parse(\n      await this.fs.openAndGetContentAsText(`/screens/${screen}.json`)\n    );\n    console.log(data);\n    const config = model ||\n      this.structure[screen] || {\n        onLoad: () => {\n          /* Nothing to do */\n        },\n        buttons: [],\n        texts: {},\n        ignore: []\n      };\n    this.gadRenderer.clear(container);\n    await this.gadRenderer.render(container, data, config);\n  }\n\n  public async _playMainMenuMusic() {\n    await this.musicPlayer.play(\"1st Beginning\", true);\n  }\n\n  private async loadVideoSprite(videoNumber: number) {\n    const videoData = await this.fs.openAndGetContentAsUint8Array(\n      `/videos/${videoNumber}.mp4`\n    );\n    return Sprite.from(await textureFromUint8ArrayMP4(videoData));\n  }\n}\n","import pixiSound from \"pixi-sound\";\nimport FileSystem from \"../filesystem\";\n\nconst Sound = pixiSound.Sound;\n\nexport default class MusicPlayer {\n  private playing = false;\n  private readonly songs: Array<{ name: string; sound: pixiSound.Sound }> = [];\n  private currentSongIdx: number;\n\n  constructor(private readonly fs: FileSystem) {}\n\n  public async load() {\n    const files = await this.fs.ls(\"/music\");\n    for (const file of files) {\n      console.log(`Loading music ${file.name}`);\n      const data = (await this.fs.openAndGetContentAsUint8Array(file))\n        .buffer as ArrayBuffer;\n      this.songs.push({ name: file.name, sound: await this.loadSound(data) });\n      console.log(`Finished loading music ${file.name}`);\n    }\n  }\n\n  public async play(name: string, loop: boolean = false) {\n    const song = this.songs.find(each => each.name === name + \".wav\");\n    if (song === undefined) {\n      console.warn(`Song ${name} not found.`);\n      return;\n    }\n    if (!song.sound.isPlaying) {\n      await song.sound.play({ loop: loop });\n    }\n  }\n\n  public async playAll() {\n    if (this.songs.length === 0) {\n      console.warn(\"No music to play found :(\");\n      return;\n    }\n    if (this.playing) {\n      console.warn(\"Music is already playing!\");\n      return;\n    }\n    this.stop();\n\n    this.playing = true;\n    this.currentSongIdx = -1;\n    await this.playNext();\n  }\n\n  public stop() {\n    this.songs.forEach(song => song.sound.stop());\n  }\n\n  private async playNext() {\n    this.currentSongIdx++;\n    if (this.currentSongIdx === this.songs.length) {\n      this.currentSongIdx = 0;\n    }\n    await this.songs[this.currentSongIdx].sound.play(this.playNext.bind(this));\n  }\n\n  private loadSound(data: ArrayBuffer, preload: boolean = false) {\n    return new Promise<pixiSound.Sound>((resolve, reject) => {\n      const sound = Sound.from({\n        source: data,\n        preload: preload,\n        singleInstance: true,\n        loaded: (err: Error, preloadedSound: pixiSound.Sound | undefined) => {\n          if (preload) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(preloadedSound);\n            }\n          }\n        }\n      });\n      if (!preload) {\n        resolve(sound);\n      }\n    });\n  }\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\nimport { Rotation4 } from \"./world\";\n\nexport default class Field {\n  public static saveGameDataLength = 8;\n\n  public static fromSaveGame(data: Stream) {\n    const buildingId = data.read16() + 20000;\n    const x = data.read8();\n    const y = data.read8();\n    const bits = data.read32();\n\n    const rotation = (bits >> 0) & (2 ** 2 - 1);\n    const animation = (bits >> 2) & (2 ** 4 - 1);\n    const islandId = (bits >> 6) & (2 ** 8 - 1);\n    const islandCityNum = (bits >> 14) & (2 ** 3 - 1);\n    const random = (bits >> 17) & (2 ** 5 - 1);\n    const playerId = (bits >> 22) & (2 ** 4 - 1);\n    const empty = (bits >> 26) & (2 ** 6 - 1);\n    if (empty !== 0) {\n      // empty is sometimes 51.\n      // console.warn(`Expected 0, got ${empty}.`);\n    }\n\n    return new Field(\n      buildingId,\n      x,\n      y,\n      islandId,\n      islandCityNum,\n      rotation as Rotation4,\n      animation,\n      random,\n      playerId\n    );\n  }\n\n  constructor(\n    public fieldId: number,\n    public x: number,\n    public y: number,\n    public islandId: number,\n    public islandCityNum: number,\n    public rotation: Rotation4,\n    public ani: number,\n    public random: number,\n    public playerId: number\n  ) {}\n}\n","import FileSystem from \"../../filesystem\";\nimport FieldType from \"../../game/field-type\";\nimport Field from \"../../game/world/field\";\nimport { Island } from \"../../game/world/island\";\nimport assert from \"../../util/assert\";\nimport { Block } from \"./block\";\n\nexport type IslandSizeId = 0 | 1 | 2 | 3 | 4;\n\nexport type IslandSizeName = \"lit\" | \"mit\" | \"med\" | \"big\" | \"lar\";\n\ninterface IslandSize {\n  id: IslandSizeId;\n  name: IslandSizeName;\n  maxSize: number;\n}\n\nexport default class IslandLoader {\n  private readonly islandSizes: IslandSize[] = [\n    {\n      id: 0,\n      name: \"lit\",\n      maxSize: 35\n    },\n    {\n      id: 1,\n      name: \"mit\",\n      maxSize: 45\n    },\n    {\n      id: 2,\n      name: \"med\",\n      maxSize: 55\n    },\n    {\n      id: 3,\n      name: \"big\",\n      maxSize: 85\n    },\n    {\n      id: 4,\n      name: \"lar\",\n      maxSize: 100\n    }\n  ];\n\n  constructor(\n    private fs: FileSystem,\n    private fieldData: ReadonlyMap<number, FieldType>\n  ) {}\n\n  public async loadIslandFile(island: Island) {\n    const climate = island.isSouth ? \"south\" : \"north\";\n    const islandNumber = island.numBaseIsland.toString().padStart(2, \"0\");\n    for (const islandSize of this.islandSizes) {\n      if (island.size.x <= islandSize.maxSize) {\n        return this.fs.openAndGetContentAsStream(\n          `/islands/${climate}/${islandSize.name}${islandNumber}.scp`\n        );\n      }\n    }\n\n    throw new Error(\"Could not load island\");\n  }\n\n  public async loadIslandFileNum(island: {\n    isSouth: boolean;\n    numBaseIsland: number;\n    size: IslandSizeId;\n  }) {\n    const climate = island.isSouth ? \"south\" : \"north\";\n    const islandNumber = island.numBaseIsland.toString().padStart(2, \"0\");\n    const islandSize = this.islandSizes.find(each => each.id === island.size)!;\n    return this.fs.openAndGetContentAsStream(\n      `/islands/${climate}/${islandSize.name}${islandNumber}.scp`\n    );\n\n    throw new Error(\"Could not load island\");\n  }\n\n  public async loadIslandFileByName(name: string) {\n    return this.fs.openAndGetContentAsStream(`/islands/${name}.scp`);\n  }\n\n  public async loadRandomIslandFile(\n    sizeId: 0 | 1 | 2 | 3 | 4,\n    climate: \"NORTH\" | \"SOUTH\" | \"ANY\"\n  ) {\n    const islandSize = this.islandSizes.find(size => size.id === sizeId);\n    if (islandSize === undefined) {\n      throw new Error(\"This should never happen.\");\n    }\n\n    const islandFiles = [];\n    if ([\"ANY\", \"NORTH\"].includes(climate)) {\n      islandFiles.push(\n        ...(await this.loadIslandsWithSizeAndClimate(islandSize.name, \"north\"))\n      );\n    }\n    if ([\"ANY\", \"SOUTH\"].includes(climate)) {\n      islandFiles.push(\n        ...(await this.loadIslandsWithSizeAndClimate(islandSize.name, \"south\"))\n      );\n    }\n\n    const randomIslandFile =\n      islandFiles[Math.floor(Math.random() * islandFiles.length)];\n\n    return {\n      data: await this.fs.openAndGetContentAsStream(\n        randomIslandFile.file.fullPath\n      ),\n      isSouth: randomIslandFile.climate === \"south\",\n      id: randomIslandFile.id\n    };\n  }\n\n  public setIslandFields(island: Island, blocks: Block[]) {\n    island.fields = [];\n    for (let x = 0; x < island.size.x; x++) {\n      island.fields.push(new Array(island.size.y).fill(null));\n    }\n    for (const block of blocks) {\n      const parsedFields = this.parseIslandFields(island, block);\n      for (let x = 0; x < island.size.x; x++) {\n        for (let y = 0; y < island.size.y; y++) {\n          const parsedField = parsedFields[x][y];\n          if (parsedField === null) {\n            continue;\n          }\n          island.fields[x][y] = parsedField;\n        }\n      }\n    }\n  }\n\n  private parseIslandFields(\n    island: Island,\n    block: Block\n  ): Array<Array<Field | null>> {\n    const data = block.data;\n    const dataLength = block.length;\n\n    const fields: Field[][] = [];\n    for (let x = 0; x < island.size.x; x++) {\n      fields.push(new Array(island.size.y).fill(null));\n    }\n\n    for (let i = 0; i < dataLength / Field.saveGameDataLength; i++) {\n      const field = Field.fromSaveGame(data);\n      assert(field.x < island.size.x);\n      assert(field.y < island.size.y);\n      fields[field.x][field.y] = field;\n    }\n\n    return fields;\n  }\n\n  private async loadIslandsWithSizeAndClimate(\n    sizeName: IslandSizeName,\n    climate: \"north\" | \"south\"\n  ) {\n    return (await this.fs.ls(`/islands/${climate}`))\n      .filter(islandFile => islandFile.name.startsWith(sizeName))\n      .filter(islandFile => /\\d\\d\\.scp$/.exec(islandFile.name) !== null)\n      .map(file => {\n        return {\n          file: file,\n          climate: climate,\n          id: parseInt(file.name.substr(3, 2), 10)\n        };\n      });\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport { Spritesheet, Texture } from \"pixi.js\";\nimport FileSystem from \"./filesystem\";\nimport { textureFromUint8ArrayPNG } from \"./util/pixi\";\n\nexport default class SpriteLoader {\n  private textures: Map<string, Map<number, Texture>> = new Map();\n  private lock: AsyncLock = new AsyncLock();\n\n  constructor(private readonly fs: FileSystem) {}\n\n  public getTextures = async (directory: string) => {\n    directory = `/gfx/${directory}`;\n\n    // Make sure that textures aren't loaded multiple times at once.\n    await this.lock.acquire(directory, async () => {\n      if (!this.textures.has(directory)) {\n        await this.loadTextures(directory);\n      }\n    });\n    return this.textures.get(directory)!;\n  };\n\n  private loadTextures = async (directory: string) => {\n    const textureMap = new Map();\n\n    const files = await this.fs.ls(directory);\n    for (const file of files) {\n      const fileExtension = file.name.substr(file.name.lastIndexOf(\".\") + 1);\n      if (fileExtension === \"png\") {\n        const dataFileName =\n          file.fullPath.substring(0, file.fullPath.lastIndexOf(\".\")) + \".json\";\n        const spriteSheetData = JSON.parse(\n          await this.fs.openAndGetContentAsText(dataFileName)\n        );\n\n        const spriteSheetImageData = await this.fs.openAndGetContentAsUint8Array(\n          file\n        );\n        const tex = textureFromUint8ArrayPNG(spriteSheetImageData);\n        const spritesheet = new Spritesheet(tex.baseTexture, spriteSheetData);\n\n        const textures = await new Promise<Record<string, Texture>>(resolve => {\n          spritesheet.parse((textures: Record<string, Texture>) =>\n            resolve(textures)\n          );\n        });\n\n        for (const [id, texture] of Object.entries(textures)) {\n          const gfxId = id.split(\"|\")[1];\n          textureMap.set(parseInt(gfxId, 10), texture);\n        }\n      }\n    }\n    this.textures.set(directory, textureMap);\n  };\n}\n","// prettier-ignore\nconst idxToColors = new Uint8Array([\n  0x00, 0x00, 0x00,\n  0x80, 0x00, 0x00,\n  0x00, 0x80, 0x00,\n  0x80, 0x80, 0x00,\n  0x00, 0x00, 0x80,\n  0x6d, 0x1f, 0x6c,\n  0x00, 0x80, 0x80,\n  0xc0, 0xc0, 0xc0,\n  0xff, 0x00, 0xff,\n  0xff, 0x00, 0xff,\n  0x00, 0x00, 0x00,\n  0x00, 0x04, 0x04,\n  0x00, 0x08, 0x08,\n  0x00, 0x10, 0x00,\n  0x0b, 0x06, 0x03,\n  0x15, 0x08, 0x00,\n  0x25, 0x04, 0x00,\n  0x00, 0x14, 0x04,\n  0x06, 0x16, 0x06,\n  0x00, 0x21, 0x00,\n  0x03, 0x26, 0x03,\n  0x0e, 0x1c, 0x05,\n  0x08, 0x31, 0x04,\n  0x20, 0x18, 0x00,\n  0x1b, 0x2c, 0x00,\n  0x0a, 0x0c, 0x12,\n  0x08, 0x1c, 0x14,\n  0x18, 0x16, 0x10,\n  0x23, 0x17, 0x0c,\n  0x01, 0x29, 0x15,\n  0x0c, 0x2c, 0x13,\n  0x18, 0x2b, 0x11,\n  0x23, 0x29, 0x0f,\n  0x0a, 0x16, 0x25,\n  0x0a, 0x2c, 0x25,\n  0x24, 0x1f, 0x1f,\n  0x22, 0x31, 0x1d,\n  0x12, 0x24, 0x2c,\n  0x26, 0x2e, 0x29,\n  0x13, 0x22, 0x40,\n  0x04, 0x3d, 0x06,\n  0x10, 0x3b, 0x06,\n  0x15, 0x3e, 0x08,\n  0x25, 0x3d, 0x04,\n  0x0e, 0x3c, 0x28,\n  0x21, 0x3b, 0x23,\n  0x29, 0x3d, 0x20,\n  0x0e, 0x37, 0x40,\n  0x18, 0x3d, 0x3d,\n  0x21, 0x31, 0x3d,\n  0x25, 0x3d, 0x39,\n  0x11, 0x3a, 0x48,\n  0x29, 0x3d, 0x42,\n  0x11, 0x3c, 0x4e,\n  0x11, 0x3a, 0x5e,\n  0x0d, 0x4d, 0x00,\n  0x25, 0x4e, 0x00,\n  0x12, 0x4d, 0x08,\n  0x17, 0x4d, 0x25,\n  0x1c, 0x4d, 0x48,\n  0x19, 0x4d, 0x58,\n  0x16, 0x49, 0x6e,\n  0x11, 0x5f, 0x03,\n  0x25, 0x62, 0x00,\n  0x16, 0x5d, 0x3d,\n  0x16, 0x70, 0x2d,\n  0x15, 0x96, 0x24,\n  0x19, 0x7c, 0x6b,\n  0x1c, 0x94, 0x71,\n  0x00, 0x52, 0x8c,\n  0x08, 0x4a, 0x90,\n  0xf8, 0xc2, 0x30,\n  0x08, 0x52, 0x94,\n  0x08, 0x56, 0x94,\n  0x0c, 0x4e, 0x8c,\n  0x17, 0x52, 0x88,\n  0x00, 0x63, 0x8c,\n  0x18, 0x5e, 0x8c,\n  0x08, 0x5a, 0x9c,\n  0x0c, 0x5a, 0xa0,\n  0x12, 0x63, 0x94,\n  0x12, 0x65, 0x94,\n  0x0a, 0x75, 0x96,\n  0x08, 0x5a, 0xad,\n  0x08, 0x63, 0xa9,\n  0x0c, 0x67, 0xa5,\n  0x15, 0x68, 0xa5,\n  0x06, 0x79, 0xad,\n  0x13, 0x73, 0xab,\n  0x21, 0x73, 0xa5,\n  0x0a, 0x76, 0xb5,\n  0x18, 0x77, 0xb1,\n  0x21, 0x73, 0xad,\n  0x21, 0x7b, 0xb1,\n  0x18, 0x75, 0xbb,\n  0x08, 0x88, 0xbd,\n  0x0b, 0x88, 0xc4,\n  0x11, 0x88, 0xdc,\n  0x21, 0x9c, 0x84,\n  0x00, 0x9c, 0x94,\n  0x18, 0x9c, 0xb1,\n  0x00, 0x9c, 0xd6,\n  0x0c, 0x94, 0xce,\n  0xc4, 0x78, 0x5e,\n  0x0b, 0xad, 0xd8,\n  0x08, 0x94, 0xe7,\n  0x08, 0x94, 0xef,\n  0x0c, 0xa0, 0xe6,\n  0x1c, 0x98, 0xe2,\n  0x15, 0xb2, 0xe1,\n  0x10, 0xb1, 0xef,\n  0x18, 0xbd, 0xe7,\n  0x21, 0xbd, 0xde,\n  0x00, 0x94, 0xf7,\n  0x50, 0x96, 0xe2,\n  0x00, 0x9c, 0xff,\n  0xe0, 0x8a, 0x6c,\n  0xf2, 0x99, 0x7a,\n  0xe9, 0x71, 0x02,\n  0xff, 0x7d, 0x02,\n  0x08, 0xa5, 0xf7,\n  0xfb, 0xd8, 0x34,\n  0xf4, 0xaf, 0x2d,\n  0x10, 0x9c, 0xf7,\n  0x18, 0x94, 0xef,\n  0x14, 0x98, 0xfb,\n  0xff, 0xfc, 0x9d,\n  0x21, 0xa5, 0xf7,\n  0x36, 0x11, 0x04,\n  0x4a, 0x11, 0x04,\n  0x35, 0x2d, 0x0c,\n  0x46, 0x2c, 0x0b,\n  0x3c, 0x4a, 0x0b,\n  0x29, 0x63, 0x00,\n  0x3b, 0x5a, 0x13,\n  0x2d, 0x67, 0x00,\n  0x2e, 0x70, 0x00,\n  0x2d, 0x63, 0x08,\n  0x2c, 0x6a, 0x11,\n  0x37, 0x6d, 0x02,\n  0x37, 0x6a, 0x11,\n  0x42, 0x6a, 0x03,\n  0x44, 0x6c, 0x10,\n  0x3b, 0x2f, 0x26,\n  0x3e, 0x44, 0x29,\n  0x3b, 0x3d, 0x40,\n  0x3d, 0x4a, 0x3f,\n  0x3c, 0x61, 0x2d,\n  0x41, 0x5b, 0x44,\n  0x3f, 0x4d, 0x4b,\n  0x3c, 0x63, 0x4b,\n  0x31, 0x4c, 0x5a,\n  0x3f, 0x4b, 0x55,\n  0x2e, 0x62, 0x5a,\n  0x41, 0x65, 0x56,\n  0x3a, 0x5f, 0x68,\n  0x37, 0x62, 0x75,\n  0x37, 0x66, 0x8c,\n  0x5e, 0x16, 0x05,\n  0x59, 0x2a, 0x14,\n  0x5a, 0x40, 0x1a,\n  0x59, 0x60, 0x0b,\n  0x5a, 0x5e, 0x2d,\n  0x58, 0x50, 0x46,\n  0x57, 0x66, 0x44,\n  0x59, 0x4f, 0x50,\n  0x55, 0x67, 0x50,\n  0x5d, 0x6b, 0x4d,\n  0x5a, 0x58, 0x59,\n  0x56, 0x6f, 0x5a,\n  0x57, 0x63, 0x62,\n  0x58, 0x66, 0x75,\n  0x73, 0x21, 0x0a,\n  0x71, 0x41, 0x14,\n  0x6f, 0x5f, 0x11,\n  0x6f, 0x52, 0x39,\n  0x6c, 0x6f, 0x41,\n  0x6f, 0x6b, 0x5a,\n  0x6b, 0x68, 0x6b,\n  0x8f, 0x1d, 0x04,\n  0x89, 0x56, 0x0d,\n  0x8c, 0x58, 0x1f,\n  0x89, 0x63, 0x40,\n  0xac, 0x27, 0x05,\n  0xa6, 0x5d, 0x25,\n  0xc5, 0x31, 0x08,\n  0xcd, 0x54, 0x1e,\n  0x29, 0x7e, 0x02,\n  0x31, 0x7b, 0x00,\n  0x35, 0x7f, 0x00,\n  0x42, 0x7b, 0x00,\n  0x34, 0x7b, 0x0b,\n  0x36, 0x7b, 0x14,\n  0x36, 0x7a, 0x49,\n  0x31, 0x84, 0x04,\n  0x42, 0x84, 0x00,\n  0x31, 0x84, 0x14,\n  0x40, 0x84, 0x16,\n  0x35, 0x8c, 0x00,\n  0x35, 0x86, 0x37,\n  0x31, 0x8d, 0x32,\n  0x31, 0xa7, 0x1d,\n  0x53, 0x82, 0x09,\n  0x5b, 0x7e, 0x3e,\n  0x57, 0x79, 0x6b,\n  0x6c, 0x7b, 0x67,\n  0x52, 0xab, 0x06,\n  0x55, 0x91, 0x2f,\n  0x59, 0xb6, 0x29,\n  0x77, 0x7e, 0x3c,\n  0x77, 0x77, 0x69,\n  0x74, 0xb4, 0x30,\n  0xaa, 0x80, 0x2a,\n  0x91, 0x7d, 0x67,\n  0x85, 0xbb, 0x3a,\n  0xca, 0xac, 0x34,\n  0x2b, 0x85, 0x74,\n  0x53, 0x7f, 0x73,\n  0x7f, 0x7c, 0x73,\n  0x7d, 0x8e, 0x73,\n  0x4a, 0x7e, 0x7e,\n  0x49, 0x80, 0xa4,\n  0x76, 0x84, 0x7b,\n  0x76, 0x87, 0x8f,\n  0x2b, 0xa0, 0x7c,\n  0x5f, 0x9c, 0x84,\n  0x2d, 0xb5, 0x88,\n  0x3f, 0xc1, 0x8a,\n  0x5c, 0xa9, 0xbd,\n  0x3f, 0xde, 0xa7,\n  0x56, 0xed, 0xc8,\n  0x90, 0x89, 0x7b,\n  0x8d, 0x99, 0x85,\n  0x98, 0x95, 0x7f,\n  0xaf, 0x9a, 0x7c,\n  0x98, 0xa5, 0x8c,\n  0x98, 0xb2, 0x8d,\n  0xa9, 0xb0, 0x8c,\n  0xcc, 0xc2, 0x85,\n  0x9a, 0xb0, 0xad,\n  0xb9, 0xb6, 0xa0,\n  0xb3, 0xc8, 0xa7,\n  0xac, 0xd1, 0xcf,\n  0xdd, 0xda, 0xb5,\n  0xe1, 0xef, 0xe2,\n  0xfe, 0xfa, 0xe6,\n  0x00, 0x94, 0xff,\n  0xa0, 0xa0, 0xa4,\n  0x80, 0x80, 0x80,\n  0xff, 0x00, 0x00,\n  0x00, 0xff, 0x00,\n  0xff, 0xff, 0x00,\n  0x00, 0x00, 0xff,\n  0xff, 0x00, 0xff,\n  0x00, 0xff, 0xff,\n  0xff, 0xff, 0xff,\n]);\n\nexport default idxToColors;\n\nconst colorsToIdxInner: Record<string, number> = {};\n\nfor (let i = 0; i < idxToColors.length / 3; i++) {\n  const color =\n    (idxToColors[i * 3 + 0] << 24) +\n    (idxToColors[i * 3 + 1] << 16) +\n    (idxToColors[i * 3 + 2] << 8) +\n    0xff;\n  colorsToIdxInner[color.toString()] = i;\n}\n\nexport const colorsToIdx = colorsToIdxInner;\n","/**\n * This code is based on the bin-packing library by Jake Gordon licensed under MIT license.\n *\n * https://github.com/jakesgordon/bin-packing/blob/master/js/packer.js\n */\n\n/******************************************************************************\n This is a very simple binary tree based bin packing algorithm that is initialized\n with a fixed width and height and will fit each block into the first node where\n it fits and then split that node into 2 parts (down and right) to track the\n remaining whitespace.\n Best results occur when the input blocks are sorted by height, or even better\n when sorted by max(width,height).\n Inputs:\n ------\n w:       width of target rectangle\n h:      height of target rectangle\n blocks: array of any objects that have .w and .h attributes\n Outputs:\n -------\n marks each block that fits with a .fit attribute pointing to a\n node with .x and .y coordinates\n Example:\n -------\n var blocks = [\n { w: 100, h: 100 },\n { w: 100, h: 100 },\n { w:  80, h:  80 },\n { w:  80, h:  80 },\n etc\n etc\n ];\n var packer = new Packer(500, 500);\n packer.fit(blocks);\n for(var n = 0 ; n < blocks.length ; n++) {\n    var block = blocks[n];\n    if (block.fit) {\n      Draw(block.fit.x, block.fit.y, block.w, block.h);\n    }\n  }\n ******************************************************************************/\n\ninterface Rect {\n  w: number;\n  h: number;\n  fit?: Node;\n}\n\ninterface Node {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  used?: boolean;\n  down?: Node;\n  right?: Node;\n}\n\nexport default class BinPacker {\n  private readonly root: Node;\n\n  constructor(w: number, h: number) {\n    this.root = { x: 0, y: 0, w: w, h: h };\n  }\n\n  public addBlock(block: Rect) {\n    const node = this.findNode(this.root, block.w, block.h);\n    if (node) {\n      return this.splitNode(node, block.w, block.h);\n    } else {\n      return false;\n    }\n  }\n\n  private findNode(root: Node, w: number, h: number): Node | null {\n    if (root.used) {\n      return (\n        this.findNode(root.right!, w, h) || this.findNode(root.down!, w, h)\n      );\n    } else if (w <= root.w && h <= root.h) {\n      return root;\n    } else {\n      return null;\n    }\n  }\n\n  private splitNode(node: Node, w: number, h: number) {\n    node.used = true;\n    node.down = { x: node.x, y: node.y + h, w: node.w, h: node.h - h };\n    node.right = { x: node.x + w, y: node.y, w: node.w - w, h: h };\n    return node;\n  }\n}\n","// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst UPNG = require(\"upng-js/UPNG.js\");\n\nexport default class BSHImage {\n  public width: number;\n  public height: number;\n  public pixels: Uint8Array;\n\n  constructor(width: number, height: number, pixels: Uint8Array) {\n    this.width = width;\n    this.height = height;\n    this.pixels = pixels;\n  }\n\n  public toPNG(): ArrayBuffer {\n    return UPNG.encode([this.pixels.buffer], this.width, this.height);\n  }\n}\n","import * as log from \"loglevel\";\nimport { SmartBuffer, SmartBufferOptions } from \"smart-buffer\";\nimport FileSystem from \"../../filesystem\";\nimport assert from \"../../util/assert\";\nimport Stream from \"../stream\";\nimport BinPacker from \"./bin-packer\";\nimport colorPalette, { colorsToIdx } from \"./bsh-color-palette\";\nimport BSHImage from \"./bsh-image\";\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst UPNG = require(\"upng-js/UPNG.js\");\n\ninterface AtlasData {\n  meta: {};\n  frames: {\n    [key: string]: {\n      frame: {\n        x: number;\n        y: number;\n        w: number;\n        h: number;\n      };\n      rotated: boolean;\n      trimmed: boolean;\n      spriteSourceSize: {\n        x: number;\n        y: number;\n        w: number;\n        h: number;\n      };\n      sourceSize: {\n        w: number;\n        h: number;\n      };\n    };\n  };\n}\n\nexport interface SpriteSheetConfig {\n  png: ArrayBuffer;\n  config: AtlasData;\n}\n\nexport default class BSHParser {\n  private readonly SPRITESHEET_SIZE = 2048;\n\n  private readonly HEADER_SIZE = 20;\n\n  private log: log.Logger;\n\n  constructor() {\n    this.log = log.getLogger(\"bsh-parser\");\n  }\n\n  public async decodeBSH(data: Stream) {\n    return this.decode(data, \"BSH\");\n  }\n\n  public async decodeZEI(data: Stream) {\n    return this.decode(data, \"ZEI\");\n  }\n\n  public createSpriteSheets(\n    prefix: string,\n    images: BSHImage[]\n  ): SpriteSheetConfig[] {\n    assert(!prefix.includes(\"|\"));\n\n    const sheets: SpriteSheetConfig[] = [];\n\n    let binPacker = new BinPacker(this.SPRITESHEET_SIZE, this.SPRITESHEET_SIZE);\n    let pixels = new Uint8Array(\n      this.SPRITESHEET_SIZE * this.SPRITESHEET_SIZE * 4\n    );\n    let atlasData: AtlasData = { meta: {}, frames: {} };\n\n    for (let i = 0; i < images.length; i++) {\n      const image = images[i];\n      let result = binPacker.addBlock({ w: image.width, h: image.height });\n      if (result === false) {\n        sheets.push({\n          png: UPNG.encode(\n            [pixels.buffer],\n            this.SPRITESHEET_SIZE,\n            this.SPRITESHEET_SIZE\n          ),\n          config: atlasData\n        });\n        binPacker = new BinPacker(this.SPRITESHEET_SIZE, this.SPRITESHEET_SIZE);\n        pixels = new Uint8Array(\n          this.SPRITESHEET_SIZE * this.SPRITESHEET_SIZE * 4\n        );\n        atlasData = { meta: {}, frames: {} };\n\n        result = binPacker.addBlock({ w: image.width, h: image.height });\n      }\n      if (!result) {\n        throw new Error(\"Could not add image to empty spritesheet!\");\n      }\n\n      const startX = result.x;\n      const startY = result.y;\n\n      let j = 0;\n      for (let y = 0; y < image.height; y++) {\n        for (let x = 0; x < image.width; x++) {\n          const idx =\n            (startX +\n              x +\n              this.SPRITESHEET_SIZE * y +\n              this.SPRITESHEET_SIZE * startY) *\n            4;\n          pixels[idx + 0] = image.pixels[j * 4 + 0];\n          pixels[idx + 1] = image.pixels[j * 4 + 1];\n          pixels[idx + 2] = image.pixels[j * 4 + 2];\n          pixels[idx + 3] = image.pixels[j * 4 + 3];\n          j++;\n        }\n      }\n\n      // We need to add the prefix here, because Pixi.js caches textures when\n      // loading them based on this key. If we were to use just i, Pixi.js\n      // would cache all textures from different spritehseets with the same key\n      // leading to this warning:\n      // \"Texture added to the cache with an id [614] that already had an entry\"\n      atlasData.frames[`${prefix}|${i}`] = {\n        frame: {\n          x: startX,\n          y: startY,\n          w: image.width,\n          h: image.height\n        },\n        rotated: false,\n        trimmed: false,\n        spriteSourceSize: {\n          x: 0,\n          y: 0,\n          w: image.width,\n          h: image.height\n        },\n        sourceSize: {\n          w: image.width,\n          h: image.height\n        }\n      };\n    }\n\n    sheets.push({\n      png: UPNG.encode(\n        [pixels.buffer],\n        this.SPRITESHEET_SIZE,\n        this.SPRITESHEET_SIZE\n      ),\n      config: atlasData\n    });\n\n    return sheets;\n  }\n\n  public async saveSpriteSheets(\n    fs: FileSystem,\n    sheets: SpriteSheetConfig[],\n    outName: string\n  ) {\n    await fs.mkdir(outName);\n    for (let i = 0; i < sheets.length; i++) {\n      await this.saveSpriteSheet(fs, sheets[i], i, outName);\n    }\n  }\n\n  public encodeBSH(images: BSHImage[]): Buffer {\n    const data = new SmartBuffer();\n    data.writeString(\"BSH\".padEnd(16, \"\\0\"), \"ascii\");\n    data.writeUInt32LE(42);\n\n    images.forEach(() => data.writeUInt32LE(42));\n\n    images.forEach((image, i) => {\n      const imageBuffer = this.encodeImage(image).toBuffer();\n      data.writeUInt32LE(data.writeOffset - this.HEADER_SIZE, 20 + i * 4);\n      data.writeBuffer(imageBuffer);\n    });\n\n    data.writeUInt32LE(data.length - this.HEADER_SIZE, 16);\n\n    return data.toBuffer();\n  }\n\n  /**\n   * The parsing algorithm is based on code from the 'mdcii-engine'\n   * project by Benedikt Freisen released under GPLv2+.\n   * https://github.com/roybaer/mdcii-engine\n   */\n  private async decode(data: Stream, extension: string) {\n    const fileType = data.readString(16);\n    assert(fileType === extension);\n\n    const fileLength = data.read32();\n    assert(this.HEADER_SIZE + fileLength === data.length);\n\n    const imageOffsets: number[] = [];\n    imageOffsets.push(data.read32());\n    const numImages = imageOffsets[0] / 4;\n\n    for (let i = 1; i < numImages; i++) {\n      imageOffsets.push(data.read32());\n    }\n    const images: BSHImage[] = [];\n\n    for (let i = 0; i < numImages; i++) {\n      data.seek(imageOffsets[i] + this.HEADER_SIZE);\n      const bshImage = this.decodeImage(data);\n      if (bshImage !== null) {\n        images.push(bshImage);\n      }\n    }\n\n    return images;\n  }\n\n  private decodeImage(data: Stream): BSHImage | null {\n    const width = data.read32();\n    const height = data.read32();\n    const type = data.read32();\n    const length = data.read32();\n\n    assert(width > 0);\n    assert(height > 0);\n\n    const BYTES_PER_PIXEL = 4;\n    const pixels = new Uint8Array(width * height * BYTES_PER_PIXEL);\n\n    // The image's current row we write to.\n    let rowIdx = 0;\n\n    let targetIdx = 0;\n\n    while (true) {\n      const ch = data.read8();\n      if (ch === 0xff) {\n        break;\n      }\n      if (ch === 0xfe) {\n        // Go to next row. All remaining pixels in this row are empty\n        rowIdx++;\n        targetIdx = rowIdx * width * BYTES_PER_PIXEL;\n      } else {\n        // New row. First check how many pixels are empty and increase targetIdx by that amount\n        const emptyPixels = ch;\n        targetIdx += emptyPixels * BYTES_PER_PIXEL;\n\n        // How many pixels are colored\n        const coloredPixels = data.read8();\n        for (let i = 0; i < coloredPixels; i++) {\n          const idx = data.read8() * 3;\n\n          pixels[targetIdx++] = colorPalette[idx];\n          pixels[targetIdx++] = colorPalette[idx + 1];\n          pixels[targetIdx++] = colorPalette[idx + 2];\n          pixels[targetIdx++] = 0xff;\n        }\n      }\n    }\n    return new BSHImage(width, height, pixels);\n  }\n\n  private encodeImage(image: BSHImage) {\n    const data = new SmartBuffer();\n    data\n      .writeUInt32LE(image.width)\n      .writeUInt32LE(image.height)\n      .writeUInt32LE(1)\n      .writeUInt32LE(42); // This is overwritten later on\n\n    let FEs = 0;\n    for (let y = 0; y < image.height; y++) {\n      let skipPixelsEmpty = 0;\n      let coloredPixels: number[] = [];\n      let state: \"empty\" | \"colored\" = \"empty\";\n      for (let x = 0; x < image.width; x++) {\n        const color =\n          (image.pixels[(y * image.width + x) * 4 + 0] << 24) +\n          (image.pixels[(y * image.width + x) * 4 + 1] << 16) +\n          (image.pixels[(y * image.width + x) * 4 + 2] << 8) +\n          (image.pixels[(y * image.width + x) * 4 + 3] << 0);\n\n        if (color === 0x00000000) {\n          // Transparent pixel\n          if (state === \"empty\") {\n            skipPixelsEmpty++;\n          } else if (state === \"colored\") {\n            while (FEs > 0) {\n              data.writeUInt8(0xfe);\n              FEs--;\n            }\n\n            while (skipPixelsEmpty > 0xfd) {\n              data.writeUInt8(0xfd);\n              data.writeUInt8(0);\n              skipPixelsEmpty -= 0xfd;\n            }\n            data.writeUInt8(skipPixelsEmpty);\n\n            for (let i = 0; i < coloredPixels.length; i += 0xff) {\n              const coloredPixelsSlice = coloredPixels.slice(i, i + 0xff);\n              if (i > 0) {\n                data.writeUInt8(0x00);\n              }\n              data.writeUInt8(coloredPixelsSlice.length);\n              coloredPixelsSlice.forEach(pixel => {\n                const colorIdx = colorsToIdx[pixel];\n                data.writeUInt8(colorIdx);\n              });\n            }\n            skipPixelsEmpty = 1;\n            coloredPixels = [];\n          }\n          state = \"empty\";\n        } else {\n          // Non-transparent pixel\n          state = \"colored\";\n          coloredPixels.push(color);\n        }\n      }\n\n      if (state === \"colored\") {\n        while (FEs > 0) {\n          data.writeUInt8(0xfe);\n          FEs--;\n        }\n\n        while (skipPixelsEmpty > 0xfd) {\n          data.writeUInt8(0xfd);\n          data.writeUInt8(0);\n          skipPixelsEmpty -= 0xfd;\n        }\n        data.writeUInt8(skipPixelsEmpty);\n        for (let i = 0; i < coloredPixels.length; i += 0xff) {\n          const coloredPixelsSlice = coloredPixels.slice(i, i + 0xff);\n          if (i > 0) {\n            data.writeUInt8(0x00);\n          }\n          data.writeUInt8(coloredPixelsSlice.length);\n          coloredPixelsSlice.forEach(pixel => {\n            data.writeUInt8(colorsToIdx[pixel.toString()]);\n          });\n        }\n      }\n      FEs++;\n    }\n    data.writeUInt8(0xff);\n\n    const padding = (4 - (data.length % 4)) % 4; // How many bytes left to make it dividable by 4?\n    for (let i = 0; i < padding; i++) {\n      data.writeUInt8(0x00);\n    }\n    data.writeUInt32LE(data.length, 12);\n\n    return data;\n  }\n\n  private async saveSpriteSheet(\n    fs: FileSystem,\n    sheet: SpriteSheetConfig,\n    spritesheetIndex: number,\n    outName: string\n  ) {\n    await fs.write(\n      `${outName}/sprite-sheet-${spritesheetIndex}.png`,\n      sheet.png\n    );\n    await fs.write(\n      `${outName}/sprite-sheet-${spritesheetIndex}.json`,\n      JSON.stringify(sheet.config)\n    );\n  }\n}\n","import * as log from \"loglevel\";\nimport assert from \"../../util/assert\";\n\n/**\n * TODO: Some constant values are set inside the .exe binary. These are:\n *\n * # figuren.cod\n *\n * ```ts\n * const constants = {\n *  FIGUR: 1,\n *  ANIM: 2,\n *  FORMATION: 3,\n *  MAXFIGUR: 0x77,\n *  NOANIM: 0x0F,\n *  NOOBJEKT: 0xFFFF,\n *  TIMENEVER: 0,\n *  ENDLESS: 1,\n *  JUMPTO: 3,\n *  RANDOM: 2,\n *  FIGTYP_SCHWERT: 1,\n *  FIGTYP_KAVALERIE: 2,\n *  FIGTYP_MUSKETIER: 3,\n *  FIGTYP_KANONIER: 4\n * }\n * ```\n *\n * # Ware ids\n *\n * ```ts\n * const wareIds = [\n *   // Icons exist for these (gfx: TOOLS/TOOLS)\n *   \"NOWARE\",\n *   \"ALLWARE\",\n *   \"EISENERZ\",\n *   \"GOLD\",\n *   \"WOLLE\",\n *   \"ZUCKER\",\n *   \"TABAK\",\n *   \"FLEISCH\",\n *   \"KORN\",\n *   \"MEHL\",\n *   \"EISEN\",\n *   \"SCHWERTER\",\n *   \"MUSKETEN\",\n *   \"KANONEN\",\n *   \"NAHRUNG\",\n *   \"TABAKWAREN\",\n *   \"GEWUERZE\",\n *   \"KAKAO\",\n *   \"ALKOHOL\",\n *   \"STOFFE\",\n *   \"KLEIDUNG\",\n *   \"SCHMUCK\",\n *   \"WERKZEUG\",\n *   \"HOLZ\",\n *   \"ZIEGEL\",\n *   \"wSOLDAT1\",\n *   \"wSOLDAT2\",\n *   \"wSOLDAT3\",\n *   \"wSOLDAT4\",\n *   \"wKAVALERIE1\",\n *   \"wKAVALERIE2\",\n *   \"wKAVALERIE3\",\n *   \"wKAVALERIE4\",\n *   \"wMUSKETIER1\",\n *   \"wMUSKETIER2\",\n *   \"wMUSKETIER3\",\n *   \"wMUSKETIER4\",\n *   \"wKANONIER1\",\n *   \"wKANONIER2\",\n *   \"wKANONIER3\",\n *   \"wKANONIER4\",\n *\n *   // No icons for these\n *\n *   \"wPIONIER1\",\n *   \"wPIONIER2\",\n *   \"wPIONIER3\",\n *   \"wPIONIER4\",\n *   \"GETREIDE\",\n *   \"TABAKBAUM\",\n *   \"GEWUERZBAUM\",\n *   \"ZUCKERROHR\",\n *   \"BAUMWOLLE\",\n *   \"WEINTRAUBEN\",\n *   \"KAKAOBAUM\",\n *   \"GRAS\",\n *   \"BAUM\",\n *   \"STEINE\",\n *   \"ERZE\",\n *   \"WILD\",\n *   \"FISCHE\",\n *   \"SCHATZ\"\n * ];\n * ```\n */\nexport default class DATParser {\n  private log: log.Logger;\n\n  private variables: Map<string, any>;\n  private objects: any;\n  private template: object | null;\n  private gfxMap: Map<string, string>;\n\n  private lastGfxName: string | null;\n  private currentObject: string | null;\n  private currentNestedObject: string | null;\n  private currentItem: string | null;\n  private currentNestedItem: number | null;\n\n  constructor() {\n    this.log = log.getLogger(\"dat-parser\");\n  }\n\n  public parse(content: string, initialVariables?: Map<string, any>) {\n    // Make a copy of the variables to avoid changing the passed map.\n    this.variables = new Map(initialVariables || []);\n    this.objects = {};\n    this.template = null;\n    this.gfxMap = new Map();\n    this.lastGfxName = null;\n    this.currentObject = null;\n    this.currentNestedObject = null;\n    this.currentItem = null;\n    this.currentNestedItem = 0;\n\n    for (let line of content.split(\"\\n\")) {\n      line = line.split(\";\")[0].trim();\n      if (line.length === 0) {\n        continue;\n      }\n\n      if (\n        line.startsWith(\"Nahrung:\") ||\n        line.startsWith(\"Soldat:\") ||\n        line.startsWith(\"Turm:\")\n      ) {\n        // TODO: Skipped for now.\n        continue;\n      }\n\n      if (line === 'Include: \"TOOLS.INC\"') {\n        assert(initialVariables && initialVariables.size > 0);\n        continue;\n      }\n\n      let result;\n\n      if ((result = /^(@?)(\\w+)\\s*=\\s*((?:\\d+|\\+|\\w+)+)$/.exec(line))) {\n        this.handleConstantAssignment(result);\n        continue;\n      }\n\n      if ((result = /^ObjFill:\\s*([\\w,]+)$/.exec(line))) {\n        this.handleObjFill(result);\n        continue;\n      }\n\n      if ((result = /^Objekt:\\s*(\\w+)$/.exec(line))) {\n        this.handleNestedObjectBegin(result);\n        continue;\n      }\n\n      if (line === \"EndObj\") {\n        this.handleNestedObjectEnd();\n        continue;\n      }\n\n      if ((result = /^(@?)(\\w+):\\s*(.*?)\\s*$/.exec(line))) {\n        this.handleProperty(result);\n        continue;\n      }\n\n      throw new Error(\"Could not parse: \" + line);\n    }\n\n    return {\n      variables: this.mapToObject(this.variables),\n      objects: this.objects,\n      gfx_category_map: this.mapToObject(this.gfxMap)\n    };\n  }\n\n  private handleObjFill(result: RegExpMatchArray) {\n    assert(this.currentObject != null);\n    assert(this.currentItem != null);\n\n    const fill = result[1];\n    const item = this.objects[this.currentObject!].items[this.currentItem!];\n    if (fill.startsWith(\"0,MAX\")) {\n      assert(this.template === null);\n      this.template = item;\n    } else {\n      assert(Object.prototype.hasOwnProperty.call(item, \"nested_objects\"));\n\n      const baseItemNum = this.getValue(null, fill, false);\n      const baseItem = this.objects[this.currentObject!].items[baseItemNum];\n      this.objects[this.currentObject!].items[\n        this.currentItem!\n      ] = this.deepCopy(baseItem);\n\n      if (this.lastGfxName != null) {\n        item.GfxCategory = this.lastGfxName;\n      }\n    }\n  }\n\n  private handleConstantAssignment(result: RegExpMatchArray) {\n    const isMath = result[1].length > 0;\n    const constant = result[2];\n    const value = result[3];\n\n    if (constant.startsWith(\"GFX\")) {\n      if (value === \"0\") {\n        this.gfxMap.set(constant, constant);\n      } else if (value.startsWith(\"GFX\")) {\n        const currentGfx = value.split(\"+\")[0];\n        if (this.gfxMap.has(currentGfx)) {\n          this.gfxMap.set(constant, this.gfxMap.get(currentGfx)!);\n        }\n      }\n    }\n\n    this.variables.set(constant, this.getValue(constant, value, isMath));\n  }\n\n  private handleNestedObjectBegin(result: RegExpMatchArray) {\n    const objectName = result[1];\n    if (this.currentObject === null) {\n      this.currentObject = objectName;\n      this.objects[objectName] = {\n        items: {}\n      };\n    } else if (this.currentNestedObject === null) {\n      assert(this.currentItem !== null);\n      this.currentNestedObject = objectName;\n      this.currentNestedItem = 0;\n      const item = this.objects[this.currentObject].items[this.currentItem!];\n      if (\n        item.nested_objects[this.currentNestedObject] === undefined ||\n        item.nested_objects[this.currentNestedObject][\n          this.currentNestedItem\n        ] === undefined\n      ) {\n        item.nested_objects[this.currentNestedObject] = {\n          [this.currentNestedItem]: {}\n        };\n      }\n    } else {\n      throw new Error(\n        \"It appears like there is more than one nesting level. \" +\n          \"This is not supported by this parser.\"\n      );\n    }\n  }\n\n  private handleNestedObjectEnd() {\n    if (this.currentNestedObject !== null) {\n      this.currentNestedObject = null;\n      this.currentNestedItem = null;\n    } else if (this.currentObject !== null) {\n      this.currentObject = null;\n      this.currentItem = null;\n    } else {\n      throw new Error(\"Received EndObj without current object!\");\n    }\n  }\n\n  private handleProperty(result: RegExpMatchArray) {\n    const isMath = result[1].length > 0;\n    const key = result[2];\n    const valueAsString = result[3];\n\n    const value = this.deepCopy(this.getValue(key, valueAsString, isMath));\n    this.variables.set(key, value);\n\n    if (key === \"Nummer\") {\n      if (this.currentNestedObject === null) {\n        this.currentItem = value;\n\n        this.objects[this.currentObject!].items[this.currentItem!] = {\n          nested_objects: {}\n        };\n        if (this.template !== null) {\n          const tmp = this.deepCopy(this.template);\n          this.objects[this.currentObject!].items[\n            this.currentItem!\n          ] = this.deepMerge(\n            tmp,\n            this.objects[this.currentObject!].items[this.currentItem!]\n          );\n        }\n      } else {\n        this.currentNestedItem = value;\n        this.objects[this.currentObject!].items[\n          this.currentItem!\n        ].nested_objects[this.currentNestedObject][\n          this.currentNestedItem!\n        ] = {};\n      }\n\n      return;\n    }\n    const item = this.objects[this.currentObject!].items[this.currentItem!];\n\n    if (key === \"Gfx\" && valueAsString.startsWith(\"GFX\")) {\n      this.lastGfxName = valueAsString.split(\"+\")[0];\n    }\n\n    if (this.currentNestedObject == null) {\n      item[key] = value;\n      if (this.lastGfxName != null) {\n        item.GfxCategory = this.lastGfxName;\n        item.GfxCategoryMapped = this.gfxMap.get(this.lastGfxName);\n      }\n    } else {\n      const nestedItem =\n        item.nested_objects[this.currentNestedObject][this.currentNestedItem!];\n      if (\n        Object.keys(nestedItem).includes(key) &&\n        this.isObject(nestedItem[key])\n      ) {\n        nestedItem[key] = this.deepMerge(nestedItem[key], value);\n      } else {\n        nestedItem[key] = value;\n      }\n    }\n  }\n\n  private getValue(\n    key: string | null,\n    value: string,\n    isMath: boolean,\n    arrayElement: number = -1\n  ): any {\n    let result;\n    if (isMath) {\n      if ((result = /^([+-])(\\d+)$/.exec(value))) {\n        let oldVal = this.variables.has(key!)\n          ? this.deepCopy(this.variables.get(key!))\n          : null;\n        if (oldVal.toString() === \"RUINE_KONTOR_1\") {\n          // TODO\n          oldVal = 424242;\n        }\n\n        if (arrayElement > -1) {\n          if (key === \"Size\") {\n            oldVal = oldVal[arrayElement === 0 ? \"x\" : \"y\"];\n          } else {\n            oldVal = oldVal[arrayElement];\n          }\n        }\n\n        if (result[1] === \"+\") {\n          return oldVal + parseInt(result[2], 10);\n        }\n        if (result[1] === \"-\") {\n          return oldVal - parseInt(result[2], 10);\n        }\n\n        throw new Error(\"This code should not be reached.\");\n      }\n    }\n\n    if (/^[-+]?\\d+$/.exec(value)) {\n      return parseInt(value, 10);\n    }\n    if (/^[-+]?\\d+\\.\\d+$/.exec(value)) {\n      return parseFloat(value);\n    }\n    if ((result = /^([A-Za-z0-9_]+)(?:\\[(\\d+)])?$/.exec(value))) {\n      const name = result[1];\n      const arrayIdx = result[2];\n      // TODO: When is value not in variables\n      const res = this.variables.has(name)\n        ? this.deepCopy(this.variables.get(name))\n        : name;\n      if (arrayIdx !== undefined) {\n        return res[arrayIdx];\n      }\n      return res;\n    }\n    if (value.includes(\",\")) {\n      const values = value\n        .split(\",\")\n        .map((v, index) => this.getValue(key, v.trim(), isMath, index));\n\n      if (key === \"Size\") {\n        return {\n          x: values[0],\n          y: values[1]\n        };\n      } else if (key === \"Ware\") {\n        const obj: any = {};\n        obj[values[0]] = values[1];\n        return obj;\n      } else {\n        return values;\n      }\n    }\n    if (\n      (result = /^([A-z]+(?:\\[\\d+])?|\\d+)([+-])([A-z]+(?:\\[\\d+])?|\\d+)$/.exec(\n        value\n      ))\n    ) {\n      const op = result[2];\n      const val1 = this.getValue(key, result[1], false);\n      const val2 = this.getValue(key, result[3], false);\n      return op === \"+\" ? val1 + val2 : val1 - val2;\n    }\n\n    throw new Error(\"This code should not be reached.\");\n  }\n\n  private deepCopy(data: any): any {\n    return JSON.parse(JSON.stringify(data));\n  }\n\n  private isObject(item: any) {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n  }\n\n  /**\n   * Deep-Merge two objects.\n   *\n   * Based on code written by CplLL, which was based on code by Salakar.\n   *\n   * https://stackoverflow.com/a/37164538\n   */\n  private deepMerge(target: any, patch: any) {\n    const output = { ...target };\n    if (this.isObject(target) && this.isObject(patch)) {\n      Object.keys(patch).forEach(key => {\n        if (this.isObject(patch[key])) {\n          if (!(key in target)) {\n            Object.assign(output, { [key]: patch[key] });\n          } else {\n            output[key] = this.deepMerge(target[key], patch[key]);\n          }\n        } else {\n          Object.assign(output, { [key]: patch[key] });\n        }\n      });\n    }\n    return output;\n  }\n\n  private mapToObject<K, V>(map: Map<K, V>): object {\n    const obj: any = {};\n    map.forEach((value: V, key: K) => (obj[key] = value));\n    return obj;\n  }\n}\n","import { loadFFmpeg } from \"../../util/ffmpeg\";\n\ninterface FileInfo {\n  data: Uint8Array;\n  name: string;\n}\n\nexport default class SMKParser {\n  private ffmpeg: any;\n  private memory = 100_000_000;\n\n  public async parse(data: Uint8Array): Promise<Uint8Array> {\n    this.ffmpeg = await loadFFmpeg();\n\n    const inputFiles = [{ data, name: \"input.smk\" }];\n    try {\n      const args = this.prepareArguments(true);\n      return await this.convert(args, inputFiles);\n    } catch (e) {\n      if (e.message === \"only-one-audio-stream\") {\n        const args = this.prepareArguments(false);\n        return await this.convert(args, inputFiles);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private prepareArguments(mergeAudio: boolean) {\n    const args = [\"-i\", \"input.smk\"];\n    if (mergeAudio) {\n      args.push(\n        ...[\n          \"-filter_complex\",\n          \"[0:a]amerge[c]\", // merge all audio streams into [c]\n          \"-map\",\n          \"[c]\", // use merged audio stream\n          \"-map\",\n          \"0:v:0\" // pass through first video stream\n        ]\n      );\n    }\n    args.push(\n      ...[\n        \"-ac\",\n        \"2\", // use stereo audio\n\n        // H.264 options\n        // https://trac.ffmpeg.org/wiki/Encode/H.264\n        \"-c:v\",\n        \"libx264\",\n        \"-pix_fmt\",\n        \"yuv420p\", // older pix_fmt required for Firefox\n        \"-preset\",\n        \"ultrafast\", // faster encoding, but bigger filesize\n        \"-movflags\",\n        \"+faststart\", // faster loading\n        \"output.mp4\"\n        // \"output.ogg\", // I wish I could use the free ogg format instead of mp4.\n      ]\n    );\n\n    return args;\n  }\n\n  private async convert(args: string[], inputFiles: FileInfo[]) {\n    console.log(`Converting video with arguments ${args.join(\" \")}`);\n\n    return new Promise<Uint8Array>((resolve, reject) => {\n      let output = \"\";\n      const handleOutput = (str: string) => {\n        output += str + \"\\n\";\n        console.log(str);\n      };\n      this.ffmpeg({\n        // apt update && apt -y install binutils pkg-config && cd /src/build && ./build_lgpl.sh\n        arguments: args,\n        files: inputFiles,\n        print: handleOutput,\n        printErr: handleOutput,\n        stdin: () => {\n          // Do nothing. This prevents the browser from \"prompt\"ing the user for input.\n        },\n        TOTAL_MEMORY: this.memory,\n        noExitRuntime: false,\n        returnCallback: (files: FileInfo[]) => {\n          if (\n            output.includes(\n              \"Cannot find a matching stream for unlabeled input pad 1\"\n            )\n          ) {\n            reject(new Error(\"only-one-audio-stream\"));\n          } else if (files.length !== 1) {\n            reject(new Error(\"unknown-error\"));\n          } else {\n            resolve(new Uint8Array(files[0].data));\n          }\n        }\n      });\n    });\n  }\n}\n","import WaveFile from \"wavefile\";\n\ninterface ADPCMChannelStatus {\n  predictor: number;\n  step_index: number;\n}\n\nexport interface RawSamples {\n  left: Int16Array;\n  right: Int16Array;\n  sampleRate: number;\n}\n\n/**\n * This code is based on FFmpeg:\n * https://github.com/FFmpeg/FFmpeg/blob/a8ce6fb425e07e60eb06d3f44992fdb91f23aafb/libavcodec/adpcm.c#L180-L204\n *\n * FFmpeg is licensed under the terms of the GNU Lesser General Public License 2.1 and later.\n */\nexport default class WAVParser {\n  // prettier-ignore\n  private readonly adpcmIndexTable = [\n    -1, -1, -1, -1, 2, 4, 6, 8,\n    -1, -1, -1, -1, 2, 4, 6, 8,\n  ];\n\n  // prettier-ignore\n  private readonly adpcmStepTable = [\n    7,     8,     9,    10,    11,    12,    13,    14,    16,    17,\n    19,    21,    23,    25,    28,    31,    34,    37,    41,    45,\n    50,    55,    60,    66,    73,    80,    88,    97,   107,   118,\n    130,   143,   157,   173,   190,   209,   230,   253,   279,   307,\n    337,   371,   408,   449,   494,   544,   598,   658,   724,   796,\n    876,   963,  1060,  1166,  1282,  1411,  1552,  1707,  1878,  2066,\n    2272,  2499,  2749,  3024,  3327,  3660,  4026,  4428,  4871,  5358,\n    5894,  6484,  7132,  7845,  8630,  9493, 10442, 11487, 12635, 13899,\n    15289, 16818, 18500, 20350, 22385, 24623, 27086, 29794, 32767,\n  ];\n\n  public decode(data: Uint8Array): RawSamples {\n    const wav = new WaveFile(data);\n\n    const bitsPerSample: number = (wav.fmt as any).bitsPerSample;\n    const sampleRate: number = (wav.fmt as any).sampleRate;\n    const channels: number = (wav.fmt as any).numChannels;\n\n    if (bitsPerSample !== 4) {\n      throw new Error(\"Can only convert .wav files with 4 bits per sample.\");\n    }\n    if (channels !== 2) {\n      throw new Error(\"Can only convert .wav files with stereo sound.\");\n    }\n\n    const c1: ADPCMChannelStatus = {\n      step_index: 0,\n      predictor: 0\n    };\n    const c2: ADPCMChannelStatus = {\n      step_index: 0,\n      predictor: 0\n    };\n\n    const samples: Buffer = (wav.data as any).samples;\n    const left = new Int16Array(samples.length);\n    const right = new Int16Array(samples.length);\n    for (let i = 0; i < samples.length; i++) {\n      left[i] = this.decodeADPCM_IMA(c1, samples[i] >>> 4);\n      right[i] = this.decodeADPCM_IMA(c2, samples[i] & 0x0f);\n    }\n\n    return {\n      left,\n      right,\n      sampleRate\n    };\n  }\n\n  public encode(rawData: RawSamples) {\n    const numSamples = rawData.left.length;\n    const samples = new Int16Array(numSamples * 2);\n    for (let i = 0; i < numSamples; i++) {\n      samples[i * 2 + 0] = rawData.left[i];\n      samples[i * 2 + 1] = rawData.right[i];\n    }\n\n    const wav = new WaveFile();\n    wav.fromScratch(2, rawData.sampleRate, \"16\", samples as any);\n    return wav.toBuffer();\n  }\n\n  private av_clip(n: number, min: number, max: number) {\n    return Math.min(Math.max(min, n), max);\n  }\n\n  private av_clip_int16(a: number) {\n    if ((a + 0x8000) & ~0xffff) {\n      return (a >> 31) ^ 0x7fff;\n    } else {\n      return a;\n    }\n  }\n\n  private decodeADPCM_IMA(c: ADPCMChannelStatus, nibble: number) {\n    const step = this.adpcmStepTable[c.step_index];\n    const stepIndex = this.av_clip(\n      c.step_index + this.adpcmIndexTable[nibble],\n      0,\n      88\n    );\n\n    const sign = nibble & 8;\n    const delta = nibble & 7;\n    const diff = ((2 * delta + 1) * step) >>> 3;\n    let predictor = c.predictor;\n    if (sign) {\n      predictor -= diff;\n    } else {\n      predictor += diff;\n    }\n\n    c.predictor = this.av_clip_int16(predictor);\n    c.step_index = stepIndex;\n\n    return c.predictor;\n  }\n}\n","import { uInt8ToBase64 } from \"../../util/util\";\nimport { SpriteSheetConfig } from \"../BSH/bsh-parser\";\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst xml = require(\"xml\");\n\nexport default class BitmapFontGenerator {\n  public async createBitmapFont(sheets: SpriteSheetConfig[], fontName: string) {\n    const pages = [];\n    const chars = [];\n\n    for (let pageId = 0; pageId < sheets.length; pageId++) {\n      const sheet = sheets[pageId];\n\n      pages.push({\n        page: [\n          {\n            _attr: {\n              id: pageId,\n              file: `data:image/png;base64,${uInt8ToBase64(\n                new Uint8Array(sheet.png)\n              )}`\n              // file: `${pageId}.png`,\n            }\n          }\n        ]\n      });\n\n      for (const [key, config] of Object.entries(sheet.config.frames)) {\n        const idx = key.split(\"|\")[1];\n\n        const char = parseInt(idx, 10) + 32;\n        chars.push({\n          char: [\n            {\n              _attr: {\n                id: char,\n                x: config.frame.x,\n                y: config.frame.y,\n                width: config.frame.w,\n                height: config.frame.h,\n                xoffset: 0,\n                yoffset: 0,\n                xadvance: config.frame.w,\n                page: pageId,\n                chnl: 15,\n                letter: String.fromCharCode(char)\n              }\n            }\n          ]\n        });\n      }\n    }\n\n    const fontSize = Object.values(sheets[0].config.frames)[0].sourceSize.h;\n\n    // http://www.angelcode.com/products/bmfont/doc/file_format.html\n    // https://raw.githubusercontent.com/pixijs/examples/gh-pages/required/assets/desyrel.xml\n    const font: any = {\n      font: [\n        {\n          info: [\n            {\n              _attr: {\n                face: fontName,\n                size: fontSize,\n                padding: \"0,0,0,0\",\n                spacing: \"0,0\",\n                italic: \"0\",\n                bold: \"0\",\n                stretchH: \"100\",\n                smooth: \"1\", // unsure\n                aa: \"1\" // unsure\n                // charset\n                // unicode\n              }\n            }\n          ]\n        },\n        {\n          common: [\n            {\n              _attr: {\n                pages: sheets.length,\n                lineHeight: fontSize,\n                // base\n                // scaleW\n                // scaleH\n                packed: 0\n                // alphaChnl\n                // redChnl\n                // greenChnl\n                // blueChnl\n              }\n            }\n          ]\n        },\n        { pages },\n        { chars }\n      ]\n    };\n\n    return xml(font, { indent: \"  \" });\n  }\n}\n","import { TranslationDomain } from \"./translations\";\n\nexport default function parseTranslations(\n  data: string\n): Record<TranslationDomain, string[]> {\n  const translations: any = {};\n  let currentDomain: string | null = null;\n\n  for (const line of data.split(\"\\r\\n\")) {\n    if (currentDomain) {\n      if (line === \"[END]\") {\n        currentDomain = null;\n      } else {\n        translations[currentDomain].push(line);\n      }\n    } else {\n      if (line.startsWith(\"[\")) {\n        currentDomain = line.split(/[[\\]]/)[1];\n        translations[currentDomain] = [];\n      }\n    }\n  }\n\n  return translations as Record<TranslationDomain, string[]>;\n}\n","import * as React from \"react\";\nimport { ChangeEvent } from \"react\";\nimport { UploadLogger } from \"./upload\";\n\ninterface Props {\n  onUploaded: (file: File) => Promise<boolean>;\n  onReset: () => Promise<void>;\n  onSaveOrMissionUploaded: (\n    evt: ChangeEvent<HTMLInputElement>\n  ) => Promise<void>;\n  setLogger: (logger: UploadLogger) => void;\n  onDownloadFiles: () => Promise<void>;\n}\n\ninterface State {\n  isUploading: boolean;\n  messages: Array<{ msg: string; type: \"info\" | \"warn\" | \"error\" }>;\n}\n\nexport default class UploadInfo extends React.Component<Props, State>\n  implements UploadLogger {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      isUploading: false,\n      messages: []\n    };\n\n    this.props.setLogger(this);\n  }\n\n  public render() {\n    return (\n      <div\n        style={{\n          marginLeft: \"1em\",\n          marginRight: \"1em\",\n          fontFamily: \"Arial\",\n          maxWidth: \"800px\",\n          lineHeight: 1.4\n        }}\n      >\n        <h1>Anno 2018</h1>\n        <p>\n          Welcome to Anno 2018, an effort to port twenty-year-old Anno 1602 to\n          the browser. This is in early development, however, you can already\n          load your savegames and start new games. Much of the actual simulation\n          is still missing though. For copyright reasons, we can't include the\n          original Anno 1602 files and graphics.{\" \"}\n          <strong>\n            You need own your own copy of Anno 1602 for Anno 2018 work.\n          </strong>\n        </p>\n        <p>\n          The following versions have been tested by us and confirmed to work:\n        </p>\n        <ul>\n          <li>German \"Anno 1602 Köngisedition\"</li>\n          <li>English \"Anno 1602 A.D.\" from GOG</li>\n        </ul>\n        <p>\n          Anno 2018 is tested in the latest versions of{\" \"}\n          <strong>Chrome (preferred, faster) and Firefox</strong> only. Other\n          browsers <em>might</em> work, but aren't supported.\n        </p>\n        <p>\n          To get started, follow these steps. You will need to \"upload\" your\n          Anno files on this website. Don't worry though, the files{\" \"}\n          <em>never</em> leave your PC and are only uploaded into your browser.\n          Once uploaded, the files remain in your browser and will be there when\n          you re-open this website.\n        </p>\n        <ol>\n          <li>\n            Find your Anno 1602 files and zip them. If you are using a version\n            of Anno 1602 which came with a physical CD, copy the videosmk and\n            music8 folders into your Anno 1602 root folder before creating the\n            zip file.\n          </li>\n          <li>\n            Use the upload button below to upload the zip file. The file should\n            be around 50MB if it doesn't contain music and videos, and around\n            500MB if it does.\n          </li>\n          <li>\n            <p>\n              Grab a coffee. The upload takes some time. Progress is being\n              logged below. Should anything go wrong, take a look at the error\n              message. It might tell you what to do. If it doesn't, make sure\n              you're using a recent version of Chrome or Firefox. If it is still\n              not working,{\" \"}\n              <a href=\"https://reddit.com/u/cmfcmf\">drop me a note at reddit</a>\n              , <a href=\"https://twitter.com/christianmflach\">twitter</a>, or{\" \"}\n              <a href=\"https://github.com/cmfcmf/Anno2018\">\n                create an issue at GitHub\n              </a>\n              . Make sure to include the upload progress output.\n            </p>\n            Upload:{\" \"}\n            <input\n              type={\"file\"}\n              multiple={false}\n              accept={\".zip\"}\n              onChange={this.zipUploaded}\n              disabled={this.state.isUploading}\n            />\n          </li>\n        </ol>\n\n        <h2>\n          Upload Progress <small>(newest at the top)</small>\n        </h2>\n        {this.state.messages.length === 0 && <p>Nothing yet...</p>}\n        <div style={{ fontSize: \"10px\" }}>\n          {this.state.messages.map((message, i) => (\n            <div key={i}>\n              <span\n                style={{\n                  color:\n                    message.type === \"info\"\n                      ? \"blue\"\n                      : message.type === \"warn\"\n                      ? \"orange\"\n                      : \"red\"\n                }}\n              >\n                {message.type.toUpperCase()}\n              </span>\n              : {message.msg}\n            </div>\n          ))}\n        </div>\n\n        <h2>Uploading custom missions and additional savegames</h2>\n        <p>\n          Use this button to upload additional missions or savegames after you\n          uploaded the main game:{\" \"}\n          <input\n            type={\"file\"}\n            multiple={true}\n            accept={\".szm,.szs,.gam\"}\n            onChange={this.props.onSaveOrMissionUploaded}\n          />\n        </p>\n\n        <h2>Downloading all uploaded and converted files</h2>\n        <p>\n          Use this button to download an archive of all uploaded files. This\n          includes the original files as well as converted files:\n        </p>\n        <button type=\"button\" onClick={this.props.onDownloadFiles}>\n          Download files\n        </button>\n\n        <h2>Resetting files</h2>\n        <p>\n          You can use the \"Reset all files\" button to delete all uploaded files\n          if needed: <button onClick={this.resetFiles}>Reset all files</button>\n        </p>\n      </div>\n    );\n  }\n\n  public readonly info = (msg: string) => {\n    this.log(msg, \"info\");\n  };\n\n  public readonly warn = (msg: string) => {\n    this.log(msg, \"warn\");\n  };\n\n  public readonly error = (msg: string) => {\n    this.log(msg, \"error\");\n  };\n\n  private readonly log = (msg: string, type: \"info\" | \"warn\" | \"error\") => {\n    this.setState((prevState: State) => {\n      return {\n        ...prevState,\n        messages: [\n          { msg, type },\n          ...prevState.messages.filter(\n            (message, i) => message.type !== \"info\" || i < 50\n          )\n        ]\n      };\n    });\n  };\n\n  private zipUploaded = async (evt: ChangeEvent<HTMLInputElement>) => {\n    const files = evt.target.files;\n    if (files === null || files.length !== 1) {\n      alert(\"Please select the zipped Anno1602 folder to upload.\");\n      return;\n    }\n    const file = files[0];\n    if (!file.name.endsWith(\".zip\")) {\n      alert(\"You need to upload a .zip file!\");\n      return;\n    }\n\n    this.setState({ isUploading: true });\n    const worked = await this.props.onUploaded(file);\n    this.setState({ isUploading: false });\n\n    if (worked) {\n      this.info(\"Upload finished. Please reload the page.\");\n      alert(\"Upload finished. Please reload the page.\");\n    } else {\n      this.error(\"The upload failed.\");\n      alert(\"The upload failed.\");\n    }\n  };\n\n  private resetFiles = async () => {\n    await this.props.onReset();\n    alert(\"All files deleted. The page will now refresh.\");\n    window.location.reload(true);\n  };\n}\n","import JSZip from \"jszip\";\nimport { JSZipObject } from \"jszip\";\nimport * as log from \"loglevel\";\nimport * as React from \"react\";\nimport { ChangeEvent } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport FileSystem from \"./filesystem\";\nimport BSHParser from \"./parsers/BSH/bsh-parser\";\nimport CODParser from \"./parsers/COD/cod-parser\";\nimport DATParser from \"./parsers/DAT/dat-parser\";\nimport SMKParser from \"./parsers/SMK/smk-parser\";\nimport Stream from \"./parsers/stream\";\n// import MP3Encoder from \"./parsers/WAV/mp3-encoder\";\nimport WAVParser from \"./parsers/WAV/wav-parser\";\nimport BitmapFontGenerator from \"./parsers/ZEI/bitmap-font-generator\";\nimport parseTranslations from \"./translation/translation-parser\";\nimport UploadInfo from \"./uploadInfo\";\nimport { findRootInZip } from \"./util/util\";\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst escapeStringRegexp = require(\"escape-string-regexp\");\n\nexport interface UploadLogger {\n  readonly info: (msg: string) => void;\n  readonly warn: (msg: string) => void;\n  readonly error: (msg: string) => void;\n}\n\nexport default class UploadHandler {\n  private logger: UploadLogger;\n\n  constructor(private readonly fs: FileSystem) {\n    this.logger = log;\n  }\n\n  public async init() {\n    console.table(await this.fs.ls(\"/\"));\n  }\n\n  public render(game: HTMLElement) {\n    const notes = document.createElement(\"div\");\n    ReactDOM.render(\n      React.createElement(UploadInfo, {\n        onUploaded: this.uploadAndParse.bind(this),\n        onReset: this.reset.bind(this),\n        onSaveOrMissionUploaded: async (evt: ChangeEvent<HTMLInputElement>) => {\n          const files = evt.target.files;\n          if (files === null || files.length === 0) {\n            return;\n          }\n          await Promise.all(\n            Array.from(files).map(file => this.uploadSaveOrMission(file))\n          );\n          alert(\"Upload finished. The page will now refresh.\");\n          window.location.reload(true);\n        },\n        onDownloadFiles: async () => {\n          await this.fs.download(\"/\");\n        },\n        setLogger: this.setLogger.bind(this)\n      }),\n      game\n    );\n\n    game.appendChild(notes);\n  }\n\n  public async isUploaded() {\n    return this.fs.exists(\"/fields.dat\");\n  }\n\n  public setLogger(logger: UploadLogger) {\n    this.logger = logger;\n  }\n\n  private async reset() {\n    await this.fs.rmRoot();\n  }\n\n  private async uploadAndParse(file: File): Promise<boolean> {\n    let zip;\n    try {\n      await this.fs.write(\"/original.zip\", file);\n      const zipFileEntry = await this.fs.open(\"/original.zip\");\n      zip = await JSZip.loadAsync(zipFileEntry);\n    } catch (e) {\n      this.logger.error(`Could not upload the ZIP file: ${e.message}`);\n      return false;\n    }\n\n    try {\n      const annoRoot = findRootInZip(zip);\n      await this.fs.rmRoot();\n\n      await this.copyIslands(annoRoot);\n      await this.copySaves(annoRoot);\n      const customMissionPath = await this.parseTranslations(annoRoot);\n      await this.copyMissions(annoRoot, customMissionPath);\n      await this.decryptCODs(annoRoot);\n      await this.parseDATs();\n      await this.parseGADs(annoRoot);\n      await this.parseBSHs(annoRoot);\n      await this.parseZEIs(annoRoot);\n      await this.parseMusic(annoRoot);\n      await this.parseVideos(annoRoot);\n    } catch (e) {\n      this.logger.error(e.message);\n      return false;\n    }\n\n    return true;\n  }\n\n  private async uploadSaveOrMission(file: File) {\n    if (file.name.endsWith(\".gam\")) {\n      await this.fs.write(`/saves/${file.name}`, file);\n    } else {\n      await this.fs.write(`/missions-custom/${file.name}`, file);\n    }\n  }\n\n  private async parseDATs() {\n    return Promise.all(\n      [\n        [\"/fields.dat\", \"/fields.json\"],\n        [\"/animations.dat\", \"/animations.json\"]\n      ].map(async r => {\n        const inName = r[0];\n        const outName = r[1];\n        this.logger.info(`Started parsing \"${inName}\".`);\n\n        const parser = new DATParser();\n        const data = parser.parse(\n          await this.fs.openAndGetContentAsText(inName)\n        );\n        await this.fs.write(outName, JSON.stringify(data));\n\n        this.logger.info(`Finished parsing \"${inName}\".`);\n      })\n    );\n  }\n\n  private async parseGADs(annoRoot: JSZip) {\n    await this.fs.mkdir(\"/screens\");\n\n    const parser = new DATParser();\n\n    const toolsIncPath = \"GADDATA/TOOLS.INC\";\n    this.logger.info(`Started parsing \"${toolsIncPath}\".`);\n    const toolsIncFile = this.findFileCaseInsensitive(annoRoot, toolsIncPath);\n    const toolsIncData = parser.parse(await toolsIncFile.async(\"text\"));\n    const initialVariables = new Map(Object.entries(toolsIncData.variables));\n    this.logger.info(`Finished parsing \"${toolsIncPath}\".`);\n\n    const files = [\n      [\"Anno.gad\", \"\"],\n      [\"BASE.GAD\", \"menu_main\"],\n      [\"BAU.GAD\", \"\"],\n      [\"BAUKONT.GAD\", \"\"],\n      [\"BAUSHIP.GAD\", \"\"],\n      [\"BERGWERK.GAD\", \"\"],\n      [\"BUBBLE01.GAD\", \"\"],\n      [\"BUBBLE.GAD\", \"\"],\n      [\"CHAT.GAD\", \"\"],\n      [\"CLIENT.GAD\", \"\"],\n      [\"CTRL.GAD\", \"\"],\n      [\"DISK.GAD\", \"\"],\n      // [\"ENDE_DEM.GAD\", \"\"],\n      [\"ENDE.GAD\", \"menu_points\"],\n      [\"FARBWAHL.GAD\", \"menu_player_selection\"],\n      [\"HANDEL.GAD\", \"\"],\n      [\"HOST.GAD\", \"menu_missions\"],\n      [\"INFO.GAD\", \"\"],\n      [\"INFRA.GAD\", \"\"],\n      [\"KONTOR.GAD\", \"\"],\n      [\"LAGER.GAD\", \"\"],\n      [\"LEIST.GAD\", \"\"],\n      [\"MARKT.GAD\", \"\"],\n      [\"MILITAR.GAD\", \"\"],\n      [\"MISSION.GAD\", \"menu_mission_details\"],\n      [\"MISSZIEL.GAD\", \"\"],\n      [\"MKSHIP.GAD\", \"\"],\n      [\"MKSOLDAT.GAD\", \"\"],\n      [\"MUSIK.GAD\", \"\"],\n      [\"OPTION.GAD\", \"\"],\n      [\"PIRAT.GAD\", \"\"],\n      [\"PIRATORD.GAD\", \"\"],\n      [\"PLANTAGE.GAD\", \"\"],\n      [\"PROD.GAD\", \"\"],\n      [\"ROUTE.GAD\", \"\"],\n      [\"SCAPE.GAD\", \"\"],\n      [\"SHIP.GAD\", \"\"],\n      [\"SHIPLIST.GAD\", \"\"],\n      [\"SIEDLER.GAD\", \"\"],\n      [\"SKSHIP.GAD\", \"\"],\n      [\"SKSOLDAT.GAD\", \"\"],\n      [\"STADT.GAD\", \"\"],\n      [\"STADTLST.GAD\", \"\"],\n      // [\"TOOLS.INC\", \"\"],\n      [\"TRADE.GAD\", \"\"],\n      [\"TRADER.GAD\", \"\"],\n      [\"TRANSFER.GAD\", \"\"],\n      [\"TRIBUT.GAD\", \"\"],\n      [\"TUTOR.GAD\", \"\"],\n      [\"VERTRAG.GAD\", \"\"],\n      [\"WAITLOAD.GAD\", \"menu_loading\"],\n      [\"WERFT.GAD\", \"\"]\n    ];\n\n    for (const r of files) {\n      if (r[1] === \"\") {\n        r[1] = r[0];\n      }\n      const inName = `GADDATA/${r[0]}`;\n      const outName = `/screens/${r[1]}.json`;\n      this.logger.info(`Started parsing \"${inName}\".`);\n\n      const gadFile = this.findFileCaseInsensitive(annoRoot, inName);\n      const data = parser.parse(await gadFile.async(\"text\"), initialVariables);\n      await this.fs.write(outName, JSON.stringify(data));\n\n      this.logger.info(`Finished parsing \"${inName}\".`);\n    }\n  }\n\n  private async decryptCODs(annoRoot: JSZip) {\n    const parser = new CODParser();\n\n    return Promise.all(\n      [[\"haeuser.cod\", \"/fields.dat\"], [\"figuren.cod\", \"/animations.dat\"]].map(\n        async r => {\n          const inName = r[0];\n          const outName = r[1];\n\n          this.logger.info(`Started parsing \"${inName}\".`);\n\n          const codFile = this.findFileCaseInsensitive(annoRoot, inName);\n          const codStream = await Stream.fromZipObject(codFile);\n          await this.fs.write(outName, parser.decrypt(codStream));\n\n          this.logger.info(`Finished parsing \"${inName}\".`);\n        }\n      )\n    );\n  }\n\n  private async parseBSHs(annoRoot: JSZip) {\n    const parser = new BSHParser();\n\n    const files = [\n      [\"GFX/NUMBERS\", \"NUMBERS\"],\n      [\"GFX/STADTFLD\", \"STADTFLD\"],\n      [\"GFX/EFFEKTE\", \"EFFEKT\"],\n      [\"GFX/FISCHE\", \"WAL\"],\n      [\"GFX/GAUKLER\", \"GAUKLER\"],\n      [\"GFX/MAEHER\", \"MAEHER\"],\n      [\"GFX/SCHATTEN\", \"SCHATTEN\"],\n      [\"GFX/SHIP\", \"SHIP\"],\n      [\"GFX/SOLDAT\", \"SOLDAT\"],\n      [\"GFX/TIERE\", \"RIND\"],\n      [\"GFX/TRAEGER\", \"TRAEGER\"],\n      [\"ToolGfx/BAUHAUS\", \"TOOLS/BAUHAUS\"],\n      [\"ToolGfx/BAUSHIP\", \"TOOLS/BAUSHIP\"],\n      // [\"ToolGfx/EDITOR\",  \"TOOLS/EDITOR\"],\n      [\"ToolGfx/START\", \"TOOLS/START\"],\n      [\"ToolGfx/SYMBOL\", \"TOOLS/SYMBOL\"],\n      [\"ToolGfx/TOOLS\", \"TOOLS/TOOLS\"]\n    ];\n    for (const r of files) {\n      const inName = r[0] + \".BSH\";\n      const outName = r[1];\n\n      this.logger.info(`Started parsing \"${inName}\".`);\n      const bshFile = this.findFileCaseInsensitive(annoRoot, inName);\n      const images = await parser.decodeBSH(\n        await Stream.fromZipObject(bshFile)\n      );\n      const sheets = parser.createSpriteSheets(outName, images);\n      await parser.saveSpriteSheets(this.fs, sheets, `/gfx/${outName}`);\n      this.logger.info(`Finished parsing \"${inName}\".`);\n    }\n  }\n\n  private async parseTranslations(annoRoot: JSZip) {\n    this.logger.info(\"Started parsing translations.\");\n    const translationFile = this.findFileCaseInsensitive(annoRoot, \"text.cod\");\n    const codParser = new CODParser();\n    const translations = parseTranslations(\n      codParser.decrypt(await Stream.fromZipObject(translationFile))\n    );\n    await this.fs.write(\"/translations.json\", JSON.stringify(translations));\n    this.logger.info(\"Finished parsing translations.\");\n\n    return translations.PATH[0];\n  }\n\n  private async parseZEIs(annoRoot: JSZip) {\n    await this.fs.mkdir(\"/fonts\");\n\n    const parser = new BSHParser();\n    const bitmapFontGenerator = new BitmapFontGenerator();\n\n    const files = [\n      \"ZEI11A\",\n      \"ZEI14A\",\n      \"ZEI14V\",\n      \"ZEI16G\",\n      \"ZEI16H\",\n      \"ZEI16V\",\n      \"ZEI20H\",\n      \"ZEI20V\",\n      \"ZEI24V\",\n      \"ZEI28V\",\n      \"ZEI2\",\n      \"ZEI9A\"\n    ];\n    for (const fontName of files) {\n      const inName = `TOOLGFX/${fontName}.ZEI`;\n      this.logger.info(`Started parsing \"${inName}\".`);\n\n      const zeiFile = this.findFileCaseInsensitive(annoRoot, inName);\n      const images = await parser.decodeZEI(\n        await Stream.fromZipObject(zeiFile)\n      );\n      const sheets = parser.createSpriteSheets(fontName, images);\n      await parser.saveSpriteSheets(this.fs, sheets, `/fonts/${fontName}`);\n      const font = await bitmapFontGenerator.createBitmapFont(sheets, fontName);\n\n      await this.fs.write(`/fonts/${fontName}/font.xml`, font);\n\n      this.logger.info(`Finished parsing \"${inName}\".`);\n    }\n  }\n\n  private async parseMusic(annoRoot: JSZip) {\n    await this.fs.mkdir(\"/music\");\n\n    if (!this.hasFolderCaseInsensitive(annoRoot, \"MUSIC8\")) {\n      this.logger.warn(\"No music files found.\");\n      return;\n    }\n\n    const wavParser = new WAVParser();\n    // const mp3Encoder = new MP3Encoder();\n\n    const songs = this.findFilesInZip(annoRoot, \"MUSIC8\", \".wav\");\n    for (const song of songs) {\n      const name = song.path.substr(1);\n      this.logger.info(`Converting song ${name}`);\n      const rawData = wavParser.decode(await song.file.async(\"uint8array\"));\n      const wavData = wavParser.encode(rawData);\n\n      await this.fs.write(`/music/${name}`, wavData);\n\n      // Alternatively, we could convert the .wav files into .mp3 format.\n      // This takes about 10 seconds per .wav file.\n      //\n      // const mp3Data = mp3Encoder.encode(rawData);\n      // await this.fs.write(\n      //     `/music/${name.replace(\".wav\", \".mp3\")}`,\n      //     mp3Data,\n      // );\n\n      this.logger.info(`Finished converting song ${name}`);\n    }\n  }\n\n  private async parseVideos(annoRoot: JSZip) {\n    await this.fs.mkdir(\"/videos\");\n\n    if (!this.hasFolderCaseInsensitive(annoRoot, \"VIDEOSMK\")) {\n      this.logger.warn(\"No video files found.\");\n      return;\n    }\n\n    const smkParser = new SMKParser();\n\n    const videos = this.findFilesInZip(annoRoot, \"VIDEOSMK\", \".smk\");\n    for (const video of videos) {\n      const name = video.path.substr(1);\n      this.logger.info(`Converting video ${name}`);\n\n      const videoData = await video.file.async(\"uint8array\");\n      const result = await smkParser.parse(videoData);\n\n      await this.fs.write(`/videos/${name.replace(\".smk\", \".mp4\")}`, result);\n      this.logger.info(`Finished converting video ${name}`);\n    }\n  }\n\n  private async copyIslands(annoRoot: JSZip) {\n    return Promise.all(\n      [\n        [\"NOKLIMA\", \"/islands/noklima\"],\n        [\"NORD\", \"/islands/north\"],\n        [\"NORDNAT\", \"/islands/northnat\"],\n        [\"SUED\", \"/islands/south\"],\n        [\"SUEDNAT\", \"/islands/southnat\"]\n      ].map(r => {\n        return this.copyFolderFromZip(annoRoot, r[0], r[1], \".scp\");\n      })\n    );\n  }\n\n  private async copySaves(annoRoot: JSZip) {\n    await this.copyFolderFromZip(annoRoot, \"SAVEGAME\", \"/saves\", \".gam\");\n  }\n\n  private async copyMissions(annoRoot: JSZip, customMissionPath: string) {\n    await this.copyFolderFromZip(\n      annoRoot,\n      \"Szenes\",\n      \"/missions-original\",\n      \".szm|.szs|.hss\"\n    );\n    await this.copyFolderFromZip(\n      annoRoot,\n      customMissionPath,\n      \"/missions-custom\",\n      \".szm|.szs|.hss\"\n    );\n  }\n\n  private async copyFolderFromZip(\n    zip: JSZip,\n    inPath: string,\n    outPath: string,\n    fileExtensions: string,\n    makeLowerCase: boolean = true\n  ) {\n    inPath = `${inPath}/`;\n    this.logger.info(\n      `Copying '${fileExtensions}' files from '${inPath}' to '${outPath}'.`\n    );\n\n    const files = this.findFilesInZip(zip, inPath, fileExtensions);\n\n    await this.fs.mkdir(outPath);\n\n    for (const fileAndPath of files) {\n      const relativePath = makeLowerCase\n        ? fileAndPath.path.toLowerCase()\n        : fileAndPath.path;\n      const file = fileAndPath.file;\n\n      const targetPath = `${outPath}/${relativePath}`;\n      this.logger.info(`Copying '${relativePath}' to '${targetPath}'.`);\n      await this.fs.write(targetPath, await file.async(\"blob\"));\n    }\n  }\n\n  private findFilesInZip(zip: JSZip, inPath: string, fileExtensions: string) {\n    const files: Array<{ path: string; file: JSZipObject }> = [];\n    zip.forEach((relativePath, file) => {\n      if (relativePath.startsWith(inPath)) {\n        for (const fileExtension of fileExtensions.split(\"|\")) {\n          if (\n            relativePath.toLowerCase().endsWith(fileExtension.toLowerCase())\n          ) {\n            relativePath = relativePath.substring(inPath.length);\n            relativePath = relativePath.substring(\n              0,\n              relativePath.length - fileExtension.length\n            );\n            relativePath += fileExtension;\n            files.push({\n              path: relativePath,\n              file: file\n            });\n            break;\n          }\n        }\n      }\n    });\n    return files;\n  }\n\n  private findFileCaseInsensitive(zip: JSZip, path: string): JSZip.JSZipObject {\n    const caseInsensitiveFileName = new RegExp(escapeStringRegexp(path), \"i\");\n    const file = zip.file(caseInsensitiveFileName)[0];\n    if (file === undefined) {\n      throw new Error(`Could not find file ${path}.`);\n    }\n\n    return file;\n  }\n\n  private hasFolderCaseInsensitive(zip: JSZip, path: string): boolean {\n    const caseInsensitiveFolderName = new RegExp(escapeStringRegexp(path), \"i\");\n    return zip.folder(caseInsensitiveFolderName)[0] !== undefined;\n  }\n}\n","import FileSystem from \"../filesystem\";\nimport {\n  translations as lookup,\n  TranslationKeys,\n  fieldIdToTranslationMap\n} from \"./translations\";\n\nexport class Translator {\n  private readonly translations = new Map<TranslationKeys, string>();\n  private jsonData: any;\n\n  constructor(private readonly fs: FileSystem) {}\n\n  public async loadTranslations() {\n    this.jsonData = JSON.parse(\n      await this.fs.openAndGetContentAsText(\"/translations.json\")\n    );\n    for (const domain of Object.keys(this.jsonData)) {\n      const keyToIdxMapping = (lookup as any)[domain];\n\n      for (const translationIdx in keyToIdxMapping) {\n        if (parseInt(translationIdx, 10) >= 0) {\n          const translationKey = keyToIdxMapping[translationIdx];\n          this.translations.set(\n            translationKey,\n            this.jsonData[domain][translationIdx]\n          );\n        }\n      }\n    }\n  }\n\n  public translate(key: TranslationKeys): string {\n    const result = this.translations.get(key);\n    if (!result) {\n      throw new Error(`Unknown translation key ${key}.`);\n    }\n    return result;\n  }\n\n  public getFieldName(fieldId: number): string {\n    for (const each of fieldIdToTranslationMap) {\n      for (let i = 0; i < each.ids.length; i++) {\n        const id = each.ids[i];\n        if (id === fieldId) {\n          return this.jsonData[each.type][i];\n        }\n      }\n    }\n\n    throw new Error(`Could not find translation for field id ${fieldId}.`);\n  }\n}\n","import * as log from \"loglevel\";\nimport { Viewport } from \"pixi-viewport\";\nimport {\n  Application,\n  MIPMAP_MODES,\n  Point,\n  Rectangle,\n  SCALE_MODES,\n  settings\n} from \"pixi.js\";\nimport FileSystem from \"./filesystem\";\nimport GameLoader from \"./game-loader\";\nimport AnimationRenderer from \"./game/animation-renderer\";\nimport ConfigLoader from \"./game/config-loader\";\nimport FontLoader from \"./game/font-loader\";\nimport GADRenderer from \"./game/gad-renderer\";\nimport IslandRenderer from \"./game/island-renderer\";\nimport IslandSpriteLoader from \"./game/island-sprite-loader\";\nimport MenuStructure from \"./game/menu-structure\";\nimport MusicPlayer from \"./game/music-player\";\nimport { islandFromSaveGame } from \"./game/world/island\";\nimport { Block } from \"./parsers/GAM/block\";\nimport GAMParser from \"./parsers/GAM/gam-parser\";\nimport IslandLoader from \"./parsers/GAM/island-loader\";\nimport SpriteLoader from \"./sprite-loader\";\nimport UploadHandler from \"./upload\";\nimport { getQueryParameter } from \"./util/util\";\nimport { Translator } from \"./translation/translator\";\n\n// eslint-disable-next-line @typescript-eslint/no-floating-promises\n(async () => {\n  log.enableAll();\n\n  const style = document.createElement(\"style\");\n  style.innerText = `\n        body, html {\n            margin: 0;\n        }\n    `;\n  const game = document.createElement(\"div\");\n  game.id = \"game\";\n  const version = document.createElement(\"p\");\n  version.innerHTML = `Anno 2018, version ${__VERSION__},\n                         made by <a href=\"https://github.com/cmfcmf\">@cmfcmf</a>.\n                         The sourcecode can be found at <a href=\"https://github.com/cmfcmf/Anno2018\">GitHub</a>.`;\n\n  document.head.appendChild(style);\n  document.body.appendChild(game);\n  document.body.appendChild(version);\n\n  const fs = new FileSystem();\n  const FS_SIZE_MB = 2000;\n  await fs.init(1024 * 1024 * FS_SIZE_MB);\n  (window as any).fs = fs;\n\n  const uploadHandler = new UploadHandler(fs);\n  await uploadHandler.init();\n  uploadHandler.render(game);\n\n  if (!(await uploadHandler.isUploaded())) {\n    console.warn(\"Anno 1602 files not yet uploaded.\");\n    return;\n  }\n\n  // utils.skipHello();\n  settings.SCALE_MODE = SCALE_MODES.NEAREST;\n  settings.MIPMAP_TEXTURES = MIPMAP_MODES.OFF;\n  // settings.RENDER_OPTIONS.antialias = false;\n\n  const app = new Application({\n    width: window.innerWidth,\n    height: window.innerHeight - 120,\n    antialias: false,\n    transparent: false\n  });\n  game.insertAdjacentElement(\"afterbegin\", app.view);\n\n  const viewport = new Viewport({\n    screenWidth: app.screen.width,\n    screenHeight: app.screen.height,\n    passiveWheel: false\n  });\n  app.stage.addChild(viewport);\n\n  viewport\n    .drag({ direction: \"all\", wheel: false })\n    .wheel()\n    .mouseEdges({ distance: 20, speed: 15 });\n\n  const menuViewport = new Viewport({\n    screenWidth: app.screen.width,\n    screenHeight: app.screen.height,\n    worldWidth: 1024,\n    worldHeight: 768\n  });\n  app.stage.addChild(menuViewport);\n\n  const translator = new Translator(fs);\n  await translator.loadTranslations();\n\n  const fontLoader = new FontLoader(fs);\n  await fontLoader.load();\n\n  const configLoader = new ConfigLoader(fs);\n  await configLoader.load();\n  console.log(`Finished loading config.`);\n\n  const musicPlayer = new MusicPlayer(fs);\n  await musicPlayer.load();\n  console.log(`Finished loading music.`);\n\n  const spriteLoader = new SpriteLoader(fs);\n  const islandLoader = new IslandLoader(fs, configLoader.getFieldData());\n\n  const animationData = JSON.parse(\n    await fs.openAndGetContentAsText(\"/animations.json\")\n  );\n  const animationRenderer = new AnimationRenderer(animationData, spriteLoader);\n\n  const gamParser = new GAMParser(islandLoader);\n  const islandSpriteLoader = new IslandSpriteLoader(\n    configLoader,\n    spriteLoader,\n    animationRenderer\n  );\n\n  const gadRenderer = new GADRenderer(spriteLoader);\n  const menuStructure = new MenuStructure(\n    fs,\n    gadRenderer,\n    musicPlayer,\n    translator\n  );\n  const gameLoader = new GameLoader(\n    fs,\n    gamParser,\n    islandSpriteLoader,\n    app,\n    viewport,\n    configLoader,\n    musicPlayer,\n    animationRenderer,\n    menuStructure,\n    translator,\n    spriteLoader\n  );\n\n  const queryGameName = getQueryParameter(\"load\");\n  const gad = getQueryParameter(\"gad\");\n  const animationName = getQueryParameter(\"animation\");\n  const islandName = getQueryParameter(\"island\");\n  if (queryGameName !== null) {\n    await gameLoader.loadByName(queryGameName);\n    // eslint-disable-next-line require-atomic-updates\n    menuViewport.visible = false;\n  } else if (gad !== null) {\n    console.info(`Rendering \"${gad}\" screen.`);\n    for (const gadName of gad.split(\",\")) {\n      await menuStructure.renderScreen(menuViewport, gadName);\n    }\n  } else if (animationName !== null) {\n    console.log(`Rendering animation \"${animationName}\".`);\n    await animationRenderer.renderAnimation(animationName, viewport);\n  } else if (islandName !== null) {\n    console.info(`Rendering island \"${islandName}\".`);\n    const islandFile = await islandLoader.loadIslandFileByName(islandName);\n\n    const blocks: Block[] = [];\n    while (!islandFile.eof()) {\n      blocks.push(Block.fromStream(islandFile));\n    }\n    console.table(blocks);\n\n    const island = islandFromSaveGame(\n      blocks.find(block => [\"INSEL5\", \"INSEL4\", \"INSEL3\"].includes(block.type))!\n        .data\n    );\n    islandLoader.setIslandFields(island, [\n      blocks.find(block => block.type === \"INSELHAUS\")!\n    ]);\n    island.position = new Point(0, 0);\n    island.positionRect = new Rectangle(0, 0, island.size.x, island.size.y);\n\n    // eslint-disable-next-line require-atomic-updates\n    menuViewport.visible = false;\n    const islandRenderer = new IslandRenderer(viewport, islandSpriteLoader);\n    await islandRenderer.render([island]);\n  } else {\n    // menuViewport.fit(); // TODO: Makes usage of sliders harder\n    menuStructure.on(\"load-game\", async (mission: string) => {\n      await gameLoader.load(mission);\n      menuViewport.visible = false;\n    });\n    await menuStructure.renderScreen(menuViewport, \"menu_main\");\n  }\n})();\n","import AsyncLock from \"async-lock\";\n\nlet loadedFFmpeg: any;\n\nconst lock = new AsyncLock();\n\nexport async function loadFFmpeg(): Promise<any> {\n  await lock.acquire(\"ffmpeg\", async () => {\n    if (!loadedFFmpeg) {\n      // eslint-disable-next-line require-atomic-updates\n      loadedFFmpeg = await doLoadFFmpeg();\n\n      await new Promise((resolve, reject) => {\n        loadedFFmpeg({\n          arguments: [\"-version\"],\n          returnCallback: resolve\n        });\n      });\n    }\n  });\n\n  return loadedFFmpeg;\n}\n\nasync function doLoadFFmpeg() {\n  console.log(\"Loading FFmpeg\");\n  let ffmpeg;\n\n  if (typeof window !== \"undefined\") {\n    ffmpeg = await loadFFmpegInBrowser();\n  } else {\n    // We can't write require() directly, because we don't want webpack to interpret it.\n    // It is only used when running this script under Node.js.\n    ffmpeg = eval(\"require\")(\n      __dirname + \"/../../node_modules/smk2mp4/demo/ffmpeg.js\"\n    );\n  }\n  console.log(\"Finished loading FFmpeg\");\n  return ffmpeg;\n}\n\nasync function loadFFmpegInBrowser(): Promise<any> {\n  return new Promise<any>((resolve, reject) => {\n    const callback = () => {\n      const ffmpeg_run = (self as any).ffmpeg_run;\n      if (ffmpeg_run) {\n        resolve(ffmpeg_run);\n      } else {\n        reject(\"Could not load FFmpeg!\");\n      }\n    };\n\n    const head = document.getElementsByTagName(\"head\")[0];\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = \"ffmpeg.js\";\n    (script as any).onreadystatechange = callback;\n    script.onload = callback;\n\n    head.appendChild(script);\n  });\n}\n","import { JSZipObject } from \"jszip\";\nimport assert from \"../util/assert\";\n\nexport default class Stream {\n  public static async fromZipObject(zip: JSZipObject) {\n    const data = await zip.async(\"uint8array\");\n\n    return new Stream(data);\n  }\n\n  private pos: number;\n  private readonly data: Uint8Array;\n\n  public constructor(data: Uint8Array) {\n    this.pos = 0;\n    this.data = data;\n  }\n\n  get length(): number {\n    return this.data.length;\n  }\n\n  public position(): number {\n    return this.pos;\n  }\n\n  public seek(pos: number) {\n    this.pos = pos;\n  }\n\n  public readString(length: number) {\n    let result = \"\";\n    let done = false;\n    while (length--) {\n      const character = this.read8();\n      if (done || character === 0) {\n        done = true;\n        continue;\n      }\n      result += String.fromCharCode(character);\n    }\n\n    return result;\n  }\n\n  public readStringUnterminated(length: number) {\n    let result = \"\";\n    while (length--) {\n      result += String.fromCharCode(this.read8());\n    }\n\n    return result;\n  }\n\n  public read(length: number, size: number = 1) {\n    length *= size;\n    const result = [];\n    while (length > 0) {\n      result.push(this.readNBytes(size));\n      length -= size;\n    }\n    return result;\n  }\n\n  public slice(length: number) {\n    const data = this.data.slice(this.pos, this.pos + length);\n    this.pos += length;\n    return data;\n  }\n\n  public read16() {\n    return this.readNBytes(2);\n  }\n\n  public read24() {\n    return this.readNBytes(3);\n  }\n\n  public read32() {\n    return this.readNBytes(4);\n  }\n\n  public read32S(): number {\n    return this.readNBytes(4) >> 0;\n  }\n\n  // Potentially unsafe due to JavaScript's Number.MAX_SAFE_INTEGER\n  // public read64() {\n  //   return this.readNBytes(8);\n  // }\n\n  public read8() {\n    return this.data[this.pos++];\n  }\n\n  public eof() {\n    return this.pos === this.length;\n  }\n\n  public read8Bool(): boolean {\n    return this.read8() !== 0;\n  }\n\n  private readNBytes(n: number) {\n    let result = 0;\n    for (let i = 0; i < n; i++) {\n      result += this.read8() * 2 ** (i * 8);\n    }\n    return result;\n  }\n\n  private writeNBytes(n: number, value: number) {\n    for (let i = 0; i < n; i++) {\n      this.write8((value * 2 ** (-i * 8)) & 0xff);\n    }\n  }\n\n  public write8(value: number) {\n    assert(value >= 0 && value <= 0xff);\n    this.data[this.pos++] = value;\n  }\n\n  public write16(value: number) {\n    this.writeNBytes(2, value);\n  }\n}\n","import { decode as iconv_decode, encode as iconv_encode } from \"iconv-lite\";\nimport Stream from \"../stream\";\n\nexport default class CODParser {\n  private encoding = \"win1252\";\n\n  public decrypt(data: Stream): string {\n    const decryptedBytes = Buffer.allocUnsafe(data.length);\n    for (let i = 0; i < data.length; i++) {\n      decryptedBytes[i] = 256 - data.read8();\n    }\n\n    // Decode the bytes using Windows 1252 \"Western\" encoding.\n    // The resulting string will then be written in UTF-8 format.\n    return iconv_decode(decryptedBytes, this.encoding);\n  }\n\n  public encrypt(content: string): Uint8Array {\n    const file = new Stream(iconv_encode(content, this.encoding));\n    const encryptedBytes = Buffer.allocUnsafe(file.length);\n    for (let i = 0; i < file.length; i++) {\n      encryptedBytes[i] = 256 - file.read8();\n    }\n\n    return encryptedBytes;\n  }\n}\n","/**\n * Based on the MIT-licensed browser-assert NPM package.\n * Copyright (c) 2015 Social Ally\n */\nexport default function assert(expr: any, message?: string) {\n  if (!expr) {\n    throw new Error(message || \"unknown assertion error\");\n  }\n}\n","// https://stackoverflow.com/a/12713326/2560557\nimport JSZip from \"jszip\";\n\nexport function uInt8ToBase64(arr: Uint8Array): string {\n  const CHUNK_SIZE = 0x8000; // arbitrary number\n  let index = 0;\n  const length = arr.length;\n  let result = \"\";\n  while (index < length) {\n    const slice = arr.subarray(index, Math.min(index + CHUNK_SIZE, length));\n    result += String.fromCharCode.apply(null, slice);\n    index += CHUNK_SIZE;\n  }\n\n  return typeof window !== \"undefined\"\n    ? btoa(result)\n    : eval(\"require\")(\"btoa\")(result);\n}\n\n/**\n * Get the value of the first query parameter with the given name.\n *\n * Taken from https://stackoverflow.com/a/901144\n */\nexport function getQueryParameter(\n  name: string,\n  defaultValue: string | null = null\n): string | null {\n  const url = window.location.href;\n  name = name.replace(/[[\\]]/g, \"\\\\$&\");\n  const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\");\n  const results = regex.exec(url);\n  if (!results) {\n    return defaultValue;\n  }\n  if (!results[2]) {\n    return \"\";\n  }\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nexport function findRootInZip(zip: JSZip): JSZip {\n  const gfxFolder = zip.filter(relativePath =>\n    (\"/\" + relativePath).endsWith(\"/GFX/\")\n  );\n  if (gfxFolder.length === 1) {\n    return zip.folder(gfxFolder[0].name.replace(\"GFX/\", \"\"));\n  }\n  throw new Error(\"Your ZIP file does not have the expected structure.\");\n}\n\nexport function make2DArray<T>(x: number, y: number): Array<Array<T | null>> {\n  return Array(x)\n    .fill(undefined)\n    .map(() => Array(y).fill(null));\n}\n\nexport function assertNever(x: never): never {\n  throw new Error(`Unexpected object: ${x}`);\n}\n"],"sourceRoot":""}