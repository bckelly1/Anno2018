{"version":3,"sources":["webpack:///./src/filesystem.ts","webpack:///./src/util/assert.ts","webpack:///./src/game/logic/reducers.ts","webpack:///./src/game/world/world.ts","webpack:///./src/game/logic/action-creators.ts","webpack:///./src/game/game.ts","webpack:///./src/game/island-renderer.ts","webpack:///./src/game/game-renderer.ts","webpack:///./src/game-loader.ts","webpack:///./src/game/animation-renderer.ts","webpack:///./src/game/field-type.ts","webpack:///./src/game/config-loader.ts","webpack:///./src/game/font-loader.ts","webpack:///./src/game/ui/slider-sprite.ts","webpack:///./src/game/gad-renderer.ts","webpack:///./src/game/island-sprite-loader.ts","webpack:///./src/util/pixi.ts","webpack:///./src/game/world/island-ore-location.ts","webpack:///./src/game/world/castle.ts","webpack:///./src/game/world/city.ts","webpack:///./src/game/world/island.ts","webpack:///./src/game/world/good.ts","webpack:///./src/game/world/contract.ts","webpack:///./src/game/world/kontor.ts","webpack:///./src/game/world/player-event.ts","webpack:///./src/game/world/player.ts","webpack:///./src/game/world/ship-course.ts","webpack:///./src/game/world/producer.ts","webpack:///./src/game/world/soldier.ts","webpack:///./src/game/world/ship.ts","webpack:///./src/game/world/task.ts","webpack:///./src/game/world/timers.ts","webpack:///./src/game/world/world-generation-settings.ts","webpack:///./src/parsers/GAM/block.ts","webpack:///./src/parsers/GAM/world-generator.ts","webpack:///./src/translation/translations.ts","webpack:///./src/parsers/GAM/gam-parser.ts","webpack:///./src/game/world/trader.ts","webpack:///./src/translation/translator.ts","webpack:///./src/game/menu/missions.ts","webpack:///./src/game/menu-structure.ts","webpack:///./src/game/music-player.ts","webpack:///./src/game/world/field.ts","webpack:///./src/parsers/GAM/island-loader.ts","webpack:///./src/sprite-loader.ts","webpack:///./src/parsers/BSH/bsh-color-palette.ts","webpack:///./src/parsers/BSH/bin-packer.ts","webpack:///./src/parsers/BSH/bsh-image.ts","webpack:///./src/parsers/BSH/bsh-parser.ts","webpack:///./src/parsers/DAT/dat-parser.ts","webpack:///./src/parsers/SMK/smk-parser.ts","webpack:///./src/parsers/WAV/wav-parser.ts","webpack:///./src/parsers/ZEI/bitmap-font-generator.ts","webpack:///./src/translation/translation-parser.ts","webpack:///./src/uploadInfo.tsx","webpack:///./src/upload.ts","webpack:///./src/index.ts","webpack:///./src/util/ffmpeg.ts","webpack:///./src/parsers/stream.ts","webpack:///./src/parsers/COD/cod-parser.ts","webpack:///./src/util/util.ts"],"names":["Filer","require","FileSystem","_classCallCheck","this","filer","size","Promise","resolve","reject","_this","init","persistent","filename","_this2","create","foldername","_this3","mkdir","directory","filterByExtensions","_this4","ls","entries","extensions","split","filter","entry","isFile","some","extension","name","endsWith","entryOrPath","path","fullPath","startsWith","Error","concat","parts","part","undefined","find","_this5","open","getTextContentFromFile","Stream","getUint8ContentFromFile","file","fileReader","FileReader","onload","event","result","onerror","readAsText","Uint8Array","readAsArrayBuffer","_this6","df","used","free","cap","pathOrEntry","content","_this7","write","data","_this8","rm","all","map","_this9","files","downloadFile","downloadDirectory","fileName","openAndGetContentAsUint8Array","element","document","createElement","setAttribute","uInt8ToBase64","style","display","body","appendChild","click","removeChild","download","assert","expr","message","Boolean","SimulationSpeed","TICK","DONATE_MONEY","SET_SIMULATION_SPEED","ADD_MONEY","UPDATE_PRODUCER","inc","counter","max","interval","arguments","length","timerReducer","state","defaultTimers","action","type","newTimeGame","timeGame","_objectSpread","cntCity","cntIsland","cntShipyard","cntMilitary","cntProduction","simulationSpeed","payload","playerReducer","_objectSpread2","_defineProperty","fromPlayer","money","amount","toPlayer","playerId","producerReducer","Map","_action$payload","id","patch","mergeIn","createTick","createDonateMoney","createSetSimulationSpeed","newSpeed","createAddMoney","createUpdateProducer","producerId","World","islands","players","tasks","gameName","soldiers","ships","kontors","castles","cities","trader","timers","producers","world_classCallCheck","console","table","log","cntSettlers","cntGrowth","timeCity","timeIsland","timeShipyard","timeMilitary","timeProduction","timeGoodToolsCnt","timeGoodToolsMax","noErzOutFlg","tutorFlg","aiLevel","missionNumber","gameId","cityNameNumber","timeNextDrought","timePirateSec","missionSubNumber","shipMax","timeNextVulcano","cntVulcano","timeSettlers","timeGrowth","enableTrader","bigIronRunsOut","enableDroughts","enablePirate","enableVulcano","GameStateFactory","Record","ImmutableMap","getState$","store","Observable","observer","next","getState","subscribe","Game","gameRenderer","configLoader","game_classCallCheck","timerId","myPlayerId","keyboardManager","getFieldAtIsland","island","islandPos","fields","x","y","getFieldAt","globalPos","Object","values","each","positionRect","contains","Point","position","tick","dispatch","KeyboardManager","enable","setupHotKeys","world","producer","idx","initialState","mapArrayById","game_objectSpread","Paused","createStore","enableBatching","combineReducers","devToolsEnhancer","actionsBlacklist","actionCreators","watchSimulationSpeed","watchTicksForUpkeep","watchTicksForProducing","pipe","distinctUntilChanged","setMoney","Default","begin","arr","reduce","objectMap","obj","speed","clearInterval","window","setInterval","time","upkeeps","calculateUpkeeps","_i","_Object$keys","keys","upkeep","Math","floor","parseInt","a","b","fieldData","getFieldData","actions","entrySeq","flatMap","_ref","_ref2","_slicedToArray","active","islandId","buildingId","fieldId","fieldConfig","get","producedGood","timer","canProduceEvenMore","firstGoodStock","production","amount1","secondGoodStock","amount2","stock","maxStock","newStock","onProduced","canProduce","batchActions","toArray","forEach","field","showTaskKey","Key","F1","onKeyPressedWithPreventDefault","player","assignedTask","assignedTaskId","info","text","zoomKeys","key","F2","zoom","F3","F4","_loop","zoomKey","_zoomKeys","_i2","speedKeys","PAUSE","F5","Slow","F6","Medium","F7","Fast","SHIFT","F8","SuperFast","_loop2","speedKey","_speedKeys","_i3","onKeysPressedWithPreventDefault","TILE_WIDTH","TILE_HEIGHT","IslandRenderer","spriteLoader","island_renderer_classCallCheck","render","island_renderer_asyncToGenerator","regeneratorRuntime","mark","_callee2","islandSprites","wrap","_context2","prev","_callee","_context","abrupt","getIslandSprites","stop","_x2","apply","sent","spritesOfIsland","row","sprite","addChild","_x","GameRenderer","islandRenderer","app","viewport","game_renderer_classCallCheck","WIDTH","HEIGHT","cull","viewportBounds","getVisibleBounds","topLeft","worldPosToFieldPos","bottomRight","width","height","visible","Text","fontFamily","fontSize","fill","fieldPos","xx","yy","worldX","worldY","worldPos","round","adjustedWorldPos","copyFrom","debugControls","removeChildren","spritesPerIsland","make2DArray","mapPosition","waterTexture","texture","Sprite","_GameRenderer$fieldPo","fieldPosToWorldPos","anchor","set","moveCameraToStartPosition","merge","from","fromEvent","auditTime","center","scale","moveCenter","pos","debugContainer","Container","coordinates","islandNumber","interactionManager","renderer","plugins","interaction","updatePosition","worldPosToFieldPosLand","toWorld","mouse","global","on","parent","myKontor","kontor","myShip","ship","moveTo","kontorIsland","point","GameLoader","fs","gamParser","musicPlayer","game_loader_classCallCheck","loadSavesAndMissions","games","saveGame","saveOrMission","game","join","load","openAndGetContentAsStream","saveGameData","getWorld","gameLogic","playAll","saves","push","missions","AnimationRenderer","animationData","animation_renderer_classCallCheck","objects","FIGUR","items","nested_objects","ANIM","baseGfx","Gfx","baseFramesPerRotation","Rotate","rotations","GfxCategoryMapped","gfxFilename","substr","getTextures","textures","animatedSprites","animIdx","animatedSpritesForAnim","animation","numSteps","AnimAnz","AnimSpeed","gfxPerStep","AnimAdd","AnimRept","framesPerRotation","rotationIdx","gfx","AnimOffs","frames","step","animatedSprite","AnimatedSprite","loop","Kind","animationSpeed","sprites","config","getAnimation","animations","_Object$keys2","play","FieldType","field_type_classCallCheck","gfxId","kind","rotate","animAdd","yOffset","animTime","animAnz","Id","Size","AnimTime","Posoffs","productionConfig","HAUS_PRODTYP","inactive","Array","isArray","Kosten","good","Ware","good1","Rohstoff","good2","Workstoff","Rohmenge","Workmenge","radius","Radius","Interval","Maxlager","islandPosition","rotation","animationStep","sx","sy","getTexture","animatedTextures","i","pixelPosition","mapPositionOnIsland","tileId","ConfigLoader","config_loader_classCallCheck","loaded","JSON","openAndGetContentAsText","parse","HAUS","FontLoader","font_loader_classCallCheck","fonts","ZEI20V","fontName","font","Loader","shared","add","SliderSprite","dragging","topY","sizeY","offsetY","sliderSizeY","eventY","originalEvent","clamp","val","min","GADRenderer","stage","gad_renderer_classCallCheck","videos","destroyVideos","blockNumMapping","variables","value","substring","radioButtons","selectableCount","gadgets","GADGET","num","gadget","blockNr","Blocknr","Gfxnr","Pos","selectable","Noselflg","pressOff","Pressoff","isRadioButton","Reiheflg","isSlider","Slidverflg","sliderOffset","Slidoffs","sliderSize","Slidsize","defaultTexture","activeTexture","setSliderData","buttonMode","interactive","callback","buttons","_radioButtons","button","BitmapText","pivot","hitArea","Rectangle","warn","onLoad","videoSprite","onEnd","baseTexture","resource","source","addEventListener","once","video","destroy","IslandSpriteLoader","island_sprite_loader_classCallCheck","inited","island_sprite_loader_asyncToGenerator","handleField","origin","getSprites","ani","newSprite","_newSprite$mapPositio","textureFromUint8ArrayMP4","_textureFromUint8ArrayMP","tmpVideo","src","Texture","addListener","OreLocationKind","OreLocationSize","Unit","ready","hp","castle_classCallCheck","read8","flags","read16","castleFromSaveGame","read32","numSwords","numMuscets","numCanons","units","fromSaveGame","parseUnits","read","cityFromSaveGame","cityIslandNum","progressAllowed","read8Bool","inhabitants","taxes","readString","IslandFertilityFlags","GoodAction","OreLocation","discoveredBy","island_ore_location_classCallCheck","islandFromIsland3File","isSouth","numBaseIsland","numOreLocations","oreLocations","fertility","tobacco","sugarcane","wine","cotton","cacao","spice","differsFromBaseIsland","fertilityDiscovered","islandFromIsland4File","islandFromIsland5File","islandFromSaveGame","every","e","TOBACCO","SUGARCANE","WINE","COTTON","CACAO","SPICE","parseFertility","ContractState","Good","goodId","sellingPrice","buyingPrice","wantedSellingAmount","wantedBuyingAmount","currentAmount","good_classCallCheck","tmp","kontorFromSaveGame","goods","parseGoods","PlayerEventKind","Contract","contract_classCallCheck","PlayerKind","CourseState","PlayerEvent","otherPlayerId","player_event_classCallCheck","playerFromSaveGame","read32S","color","killedByPlayerId","_3_3","_3_2","palaceBuilt","cathedralBuilt","enemiesDefeated","triumphArchesBuilt","soldiersKilled","soldiersFallen","shipsSunken","shipsKilled","_4","enablePositiveWillInfluence","enableNegativeWillInfluence","_5","positiveWillInfluence","negativeWillInfluence","accessibleBuildings","statues","statuesBuilt","tradeContracts","peaceContracts","playerEvents","fullName","shortName","producerFromSaveGame","speedCount","prodCnt","timeCnt","flags1","connectedToMarket","animCnt","allowGoodPickup","noGoodCnt","SoldierType","ShipCourse","ship_course_classCallCheck","byte2","byte3","byte4","shipFromSaveGame","tradeStops","n","kontor_id","_1","parseShipGoods","_2","parseShipTradeStops","cargo","good_id","soldierFromSaveGame","isPatrolling","taskFromSaveGame","monopolyGoodId1","monopolyGoodId2","helpOtherToReachInhabitantsPlayerId","playersToKill","_3","requiredBalance","successVideoId","requiredTradeBalance","_6","ownCityReachInhabitants","count","requiredLevel","requiredLevelCount","_7","helpOtherToReachInhabitants","timersFromSaveGame","WorldGenerationSettings","numNativesNorth","numNativesSouth","numBigIronOre","numSmallIronOre","numGoldOre","numWine","numSugarCane","numSpice","numCacao","numTobacco","numCotton","numTreasures","islandTemplates","world_generation_settings_classCallCheck","slice","numIslands","forceNorth","forceSouth","islandSize","climate","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","Block","block_classCallCheck","WorldGenerator","islandLoader","world_generator_classCallCheck","worldGenerationSettings","nextIslandId","world_generator_toConsumableArray","islandTemplate","loadRandomIslandFile","blocks","eof","fromStream","inselBlock","block","includes","inselHausBlock","newIsland","setIslandFields","GAME","LEISTE","PLAYCOL","VIDEOKIND","SPEECHKIND","PATH","ENDLESSKIND","TUTORKIND","KAMPAGNE","FIGKIND","WARE","ROHST","ROHSTFELD","MILITAR","WOHNHAUS","STRASSE","BERGWERK","HANDWERK","FARM","HAFEN","DIVERS","ABRISS","LANDSCHAFT","GAMParser","gam_parser_classCallCheck","worldGenerator","has","lastIslandBlock","inselHausBlocks","doParse","populateWorld","gam_parser_toConsumableArray","nameBlock","playerBlock","parsePlayers","islandBlocks","parseIslands","handleBlock","empty","entities","islandBlock","islandBuildingBlocks","islandTopBlock","islandBottomBlock","loadIslandFile","islandFile","lookup","translations","t","loadTranslations","_loadTranslations","jsonData","domain","keyToIdxMapping","translationIdx","translationKey","t0","t1","call","Missions","menuStructure","missions_classCallCheck","renderNewGame","bind","renderLoadGame","missions_asyncToGenerator","renderScreen","emit","_ref3","_callee3","_context3","currentPage","_ref4","_callee4","_context4","ceil","newGameLines","ROWS","SCROLL_UP","SCROLL_DOWN","getNewGameLines","_playMainMenuMusic","currentTopItem","bitmapText","getChildByName","off","line","_callee6","_context6","save","toString","padStart","_callee8","_context8","loadMissions","mission","missionNum","replace","_callee11","ranking","campaignNum","_context11","sort","MenuStructure","gadRenderer","menu_structure_classCallCheck","menu_structure_getPrototypeOf","structure","menu_main","menu_structure_asyncToGenerator","loadVideoSprite","renderVideo","renderVideoFullscreen","_callee5","_context5","menu_missions","menu_structure_assertThisInitialized","menu_loading","menu_mission_details","_callee7","_context7","_callee9","_context9","_callee10","_context10","_callee12","_context12","_callee13","_context13","_callee14","_context14","_callee15","_context15","_callee16","_context16","_callee17","_context17","utils","EventEmitter","screen","videoNumber","videoData","Sound","pixiSound","MusicPlayer","music_player_classCallCheck","playing","songs","currentSongIdx","buffer","loadSound","sound","song","isPlaying","playNext","preload","singleInstance","preloadedSound","Field","islandCityNum","random","field_classCallCheck","bits","pow","saveGameDataLength","IslandLoader","island_loader_classCallCheck","islandSizes","maxSize","sizeId","islandFiles","loadIslandsWithSizeAndClimate","randomIslandFile","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","parsedFields","parseIslandFields","parsedField","dataLength","sizeName","match","SpriteLoader","sprite_loader_classCallCheck","sprite_loader_asyncToGenerator","loadTextures","textureMap","lastIndexOf","delegateYield","dataFileName","spriteSheetData","spriteSheetImageData","tex","spritesheet","Spritesheet","sheet","hmm","finish","BinPacker","w","h","bin_packer_classCallCheck","root","node","findNode","splitNode","right","down","idxToColors","colorsToIdxInner","colorsToIdx","UPNG","BSHImage","pixels","bsh_image_classCallCheck","encode","BSHParser","bsh_parser_classCallCheck","SPRITESHEET_SIZE","HEADER_SIZE","decode","images","sheets","binPacker","atlasData","meta","image","addBlock","png","startX","startY","j","frame","rotated","trimmed","spriteSourceSize","sourceSize","outName","saveSpriteSheet","SmartBuffer","writeString","padEnd","writeUInt32LE","imageBuffer","encodeImage","toBuffer","writeOffset","writeBuffer","fileLength","imageOffsets","numImages","seek","bshImage","decodeImage","rowIdx","targetIdx","ch","coloredPixels","colorPalette","FEs","skipPixelsEmpty","writeUInt8","coloredPixelsSlice","pixel","colorIdx","padding","spritesheetIndex","stringify","DATParser","dat_parser_classCallCheck","template","gfxMap","lastGfxName","currentObject","currentNestedObject","currentItem","currentNestedItem","initialVariables","trim","handleConstantAssignment","handleObjFill","handleNestedObjectBegin","handleProperty","handleNestedObjectEnd","mapToObject","gfx_category_map","item","hasOwnProperty","baseItemNum","getValue","baseItem","deepCopy","GfxCategory","isMath","constant","currentGfx","objectName","dat_parser_defineProperty","valueAsString","nestedItem","isObject","deepMerge","arrayElement","oldVal","parseFloat","arrayIdx","res","indexOf","v","index","op","val1","val2","dat_parser_typeof","target","output","dat_parser_objectSpread","assign","SMKParser","ffmpeg","memory","loadFFmpeg","inputFiles","args","prepareArguments","convert","mergeAudio","handleOutput","str","print","printErr","stdin","TOTAL_MEMORY","noExitRuntime","returnCallback","WAVParser","adpcmIndexTable","adpcmStepTable","wav","WaveFile","bitsPerSample","fmt","sampleRate","channels","numChannels","c1","step_index","predictor","c2","samples","left","Int16Array","decodeADPCM_IMA","rawData","numSamples","fromScratch","c","nibble","stepIndex","av_clip","sign","diff","av_clip_int16","xml","BitmapFontGenerator","pages","chars","pageId","page","_attr","char","xoffset","yoffset","xadvance","chnl","letter","String","fromCharCode","face","spacing","italic","bold","stretchH","smooth","aa","common","lineHeight","packed","indent","parseTranslations","currentDomain","UploadInfo","props","uploadInfo_classCallCheck","uploadInfo_getPrototypeOf","msg","error","setState","prevState","uploadInfo_objectSpread","messages","uploadInfo_toConsumableArray","zipUploaded","uploadInfo_asyncToGenerator","evt","worked","alert","isUploading","onUploaded","resetFiles","onReset","location","reload","setLogger","uploadInfo_assertThisInitialized","React","react","marginLeft","marginRight","maxWidth","href","multiple","accept","onChange","disabled","toUpperCase","onSaveOrMissionUploaded","onClick","escapeStringRegexp","UploadHandler","upload_classCallCheck","logger","notes","ReactDOM","uploadAndParse","reset","_onSaveOrMissionUploaded","upload_asyncToGenerator","uploadSaveOrMission","exists","rmRoot","zipFileEntry","JSZip","loadAsync","zip","annoRoot","findRootInZip","copyIslands","copySaves","customMissionPath","copyMissions","decryptCODs","parseDATs","parseGADs","parseBSHs","parseZEIs","parseMusic","parseVideos","r","inName","parser","_x4","toolsIncPath","toolsIncFile","findFileCaseInsensitive","async","toolsIncData","gadFile","CODParser","codFile","codStream","fromZipObject","decrypt","_x7","bshFile","decodeBSH","createSpriteSheets","saveSpriteSheets","translationFile","codParser","bitmapFontGenerator","zeiFile","decodeZEI","createBitmapFont","hasFolderCaseInsensitive","wavParser","findFilesInZip","wavData","smkParser","copyFolderFromZip","inPath","outPath","fileExtensions","makeLowerCase","fileAndPath","relativePath","toLowerCase","targetPath","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","fileExtension","caseInsensitiveFileName","RegExp","caseInsensitiveFolderName","folder","src_asyncToGenerator","version","uploadHandler","menuViewport","fontLoader","worldFieldBuilder","gameLoader","queryGameName","gad","animationName","islandName","animationRenderer","cnt","_gadRenderer","_menuStructure","innerText","innerHTML","__VERSION__","head","isUploaded","settings","SCALE_MODE","SCALE_MODES","NEAREST","MIPMAP_TEXTURES","MIPMAP_MODES","OFF","Application","innerWidth","innerHeight","antialias","transparent","insertAdjacentElement","view","Viewport","screenWidth","screenHeight","passiveWheel","drag","direction","wheel","mouseEdges","distance","worldWidth","worldHeight","getQueryParameter","loadByName","onLoop","loadIslandFileByName","loadedFFmpeg","_loadFFmpeg","doLoadFFmpeg","_callee2$","loadFFmpegInBrowser","eval","__dirname","ffmpeg_run","self","getElementsByTagName","script","onreadystatechange","character","readNBytes","encoding","decryptedBytes","Buffer","iconv_decode","iconv_encode","encryptedBytes","CHUNK_SIZE","subarray","btoa","url","results","exec","decodeURIComponent","gfxFolder","__webpack_require__","d","__webpack_exports__"],"mappings":"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GAAM,GAAM,IACZ,GAAM,GAAM,IACZ,EAAM,GAAM,IACZ,GAAM,GAAM,IACZ,EAAM,GAAM,IACZ,GAAM,GAAM,IACZ,GAAM,GAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,GAAM,IACZ,EAAM,GAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,GAAM,IAAM,IACZ,IAAM,IAAM,GACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,EAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,GAAM,IAAM,IACZ,EAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,EACZ,IAAM,IAAM,EACZ,EAAM,IAAM,IACZ,IAAM,IAAM,GACZ,IAAM,IAAM,GACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,IAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,GAAM,EACZ,GAAM,GAAM,EACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,EACZ,GAAM,GAAM,GACZ,GAAM,IAAM,EACZ,GAAM,IAAM,EACZ,GAAM,GAAM,EACZ,GAAM,IAAM,GACZ,GAAM,IAAM,EACZ,GAAM,IAAM,GACZ,GAAM,IAAM,EACZ,GAAM,IAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,IAAM,GACZ,GAAM,GAAM,IACZ,GAAM,GAAM,IACZ,GAAM,IAAM,IACZ,GAAM,GAAM,EACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,GAAM,GACZ,GAAM,IAAM,GACZ,GAAM,GAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,GAAM,GAAM,GACZ,GAAM,IAAM,GACZ,GAAM,GAAM,GACZ,GAAM,IAAM,IACZ,IAAM,GAAM,GACZ,IAAM,GAAM,GACZ,IAAM,GAAM,GACZ,IAAM,GAAM,GACZ,IAAM,IAAM,GACZ,IAAM,IAAM,GACZ,IAAM,IAAM,IACZ,IAAM,GAAM,EACZ,IAAM,GAAM,GACZ,IAAM,GAAM,GACZ,IAAM,GAAM,GACZ,IAAM,GAAM,EACZ,IAAM,GAAM,GACZ,IAAM,GAAM,EACZ,IAAM,GAAM,GACZ,GAAM,IAAM,EACZ,GAAM,IAAM,EACZ,GAAM,IAAM,EACZ,GAAM,IAAM,EACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,EACZ,GAAM,IAAM,EACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,EACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,GAAM,IAAM,EACZ,GAAM,IAAM,GACZ,GAAM,IAAM,IACZ,IAAM,IAAM,IACZ,GAAM,IAAM,EACZ,GAAM,IAAM,GACZ,GAAM,IAAM,GACZ,IAAM,IAAM,GACZ,IAAM,IAAM,IACZ,IAAM,IAAM,GACZ,IAAM,IAAM,GACZ,IAAM,IAAM,IACZ,IAAM,IAAM,GACZ,IAAM,IAAM,GACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,GAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,EAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,IAAM,IACZ,IAAM,EAAM,EACZ,EAAM,IAAM,EACZ,IAAM,IAAM,EACZ,EAAM,EAAM,IACZ,IAAM,EAAM,IACZ,EAAM,IAAM,IACZ,IAAM,IAAM,MAGC49B,MAETC,GAA2C,GAExChgB,GAAI,EAAGA,GAAI+f,GAAY36B,OAAS,EAAG4a,KAAK,CAM/CggB,KAJGD,GAAgB,EAAJ/f,GAAQ,IAAM,KAC1B+f,GAAgB,EAAJ/f,GAAQ,IAAM,KAC1B+f,GAAgB,EAAJ/f,GAAQ,IAAM,GAC3B,KACqBuY,YAAcvY,GAGhC,IAAMigB,GAAcD,0KEjR3B,IAAME,GAAOthC,EAAQ,QAEAuhC,cAKnB,SAAAA,EAAYrqB,EAAeC,EAAgBqqB,gGAAoBC,CAAAthC,KAAAohC,GAAAphC,KAJxD+W,WAIwD,EAAA/W,KAHxDgX,YAGwD,EAAAhX,KAFxDqhC,YAEwD,EAC7DrhC,KAAK+W,MAAQA,EACb/W,KAAKgX,OAASA,EACdhX,KAAKqhC,OAASA,yDAId,OAAOF,GAAKI,OAAO,CAACvhC,KAAKqhC,OAAOlE,QAASn9B,KAAK+W,MAAO/W,KAAKgX,ohBCL9D,IAAMmqB,GAAOthC,EAAQ,QAiCA2hC,cAOnB,SAAAA,iGAAcC,CAAAzhC,KAAAwhC,GAAAxhC,KANG0hC,iBAAmB,KAMtB1hC,KAJG2hC,YAAc,GAIjB3hC,KAFN0J,SAEM,EACZ1J,KAAK0J,IAAMA,YAAc,qHAGJ3F,2GACd/D,KAAK4hC,OAAO79B,EAAM,2LAGJA,2GACd/D,KAAK4hC,OAAO79B,EAAM,sJAGD89B,GASxB,IARA,IAAMC,EAA8B,GAEhCC,EAAY,IAAIzB,GAAUtgC,KAAK0hC,iBAAkB1hC,KAAK0hC,kBACtDL,EAAS,IAAIj+B,WACfpD,KAAK0hC,iBAAmB1hC,KAAK0hC,iBAAmB,GAE9CM,EAAuB,CAAEC,KAAM,GAAInkB,OAAQ,IAEtCmD,EAAI,EAAGA,EAAI4gB,EAAOx7B,OAAQ4a,IAAK,CACtC,IAAMihB,EAAQL,EAAO5gB,GACjBhe,EAAS8+B,EAAUI,SAAS,CAAE5B,EAAG2B,EAAMnrB,MAAOypB,EAAG0B,EAAMlrB,SAkB3D,IAjBe,IAAX/T,IACF6+B,EAAOlmB,KAAK,CACVwmB,IAAKjB,GAAKI,OACR,CAACF,EAAOlE,QACRn9B,KAAK0hC,iBACL1hC,KAAK0hC,kBAEPpjB,OAAQ0jB,IAEVD,EAAY,IAAIzB,GAAUtgC,KAAK0hC,iBAAkB1hC,KAAK0hC,kBACtDL,EAAS,IAAIj+B,WACXpD,KAAK0hC,iBAAmB1hC,KAAK0hC,iBAAmB,GAElDM,EAAY,CAAEC,KAAM,GAAInkB,OAAQ,IAEhC7a,EAAS8+B,EAAUI,SAAS,CAAE5B,EAAG2B,EAAMnrB,MAAOypB,EAAG0B,EAAMlrB,WAEpD/T,EACH,MAAM,IAAIhB,MAAM,6CAOlB,IAJA,IAAMogC,EAASp/B,EAAO2J,EAChB01B,EAASr/B,EAAO4J,EAElB01B,EAAI,EACC11B,EAAI,EAAGA,EAAIq1B,EAAMlrB,OAAQnK,IAChC,IAAK,IAAID,EAAI,EAAGA,EAAIs1B,EAAMnrB,MAAOnK,IAAK,CACpC,IAAMkB,EAKJ,GAJCu0B,EACCz1B,EACA5M,KAAK0hC,iBAAmB70B,EACxB7M,KAAK0hC,iBAAmBY,GAE5BjB,EAAOvzB,EAAM,GAAKo0B,EAAMb,OAAW,EAAJkB,EAAQ,GACvClB,EAAOvzB,EAAM,GAAKo0B,EAAMb,OAAW,EAAJkB,EAAQ,GACvClB,EAAOvzB,EAAM,GAAKo0B,EAAMb,OAAW,EAAJkB,EAAQ,GACvClB,EAAOvzB,EAAM,GAAKo0B,EAAMb,OAAW,EAAJkB,EAAQ,GACvCA,IAIJP,EAAUlkB,OAAOmD,EAAEuY,SAAS,KAAO,CACjCgJ,MAAO,CACL51B,EAAGy1B,EACHx1B,EAAGy1B,EACH/B,EAAG2B,EAAMnrB,MACTypB,EAAG0B,EAAMlrB,QAEXyrB,SAAS,EACTC,SAAS,EACTC,iBAAkB,CAChB/1B,EAAG,EACHC,EAAG,EACH0zB,EAAG2B,EAAMnrB,MACTypB,EAAG0B,EAAMlrB,QAEX4rB,WAAY,CACVrC,EAAG2B,EAAMnrB,MACTypB,EAAG0B,EAAMlrB,SAcf,OATA8qB,EAAOlmB,KAAK,CACVwmB,IAAKjB,GAAKI,OACR,CAACF,EAAOlE,QACRn9B,KAAK0hC,iBACL1hC,KAAK0hC,kBAEPpjB,OAAQ0jB,IAGHF,yFAIPnnB,EACAmnB,EACAe,wGAEMloB,EAAG7Z,MAAM+hC,UACN5hB,EAAI,cAAGA,EAAI6gB,EAAOz7B,wCACnBrG,KAAK8iC,gBAAgBnoB,EAAImnB,EAAO7gB,GAAIA,EAAG4hB,UADZ5hB,4JAKpB4gB,GAA4B,IAAAvhC,EAAAN,KACrC+D,EAAO,IAAIg/B,eAcjB,OAbAh/B,EAAKi/B,YAAY,MAAMC,OAAO,GAAI,MAAO,SACzCl/B,EAAKm/B,cAAc,IAEnBrB,EAAO3vB,QAAQ,kBAAMnO,EAAKm/B,cAAc,MAExCrB,EAAO3vB,QAAQ,SAACgwB,EAAOjhB,GACrB,IAAMkiB,EAAc7iC,EAAK8iC,YAAYlB,GAAOmB,WAC5Ct/B,EAAKm/B,cAAcn/B,EAAKu/B,YAAchjC,EAAKqhC,YAAa,GAAS,EAAJ1gB,GAC7Dld,EAAKw/B,YAAYJ,KAGnBp/B,EAAKm/B,cAAcn/B,EAAKsC,OAASrG,KAAK2hC,YAAa,IAE5C59B,EAAKs/B,wFAQOt/B,EAAcrC,oGAWjC,IATA4D,EADiBvB,EAAKglB,WAAW,MACbrnB,GAEd8hC,EAAaz/B,EAAKkkB,SACxB3iB,EAAOtF,KAAK2hC,YAAc6B,IAAez/B,EAAKsC,SAExCo9B,EAAyB,IAClB7nB,KAAK7X,EAAKkkB,UACjByb,EAAYD,EAAa,GAAK,EAE3BxiB,EAAI,EAAGA,EAAIyiB,EAAWziB,IAC7BwiB,EAAa7nB,KAAK7X,EAAKkkB,UAIzB,IAFM4Z,EAAqB,GAElB5gB,EAAI,EAAGA,EAAIyiB,EAAWziB,IAC7Bld,EAAK4/B,KAAKF,EAAaxiB,GAAKjhB,KAAK2hC,aAEhB,QADXiC,EAAW5jC,KAAK6jC,YAAY9/B,KAEhC89B,EAAOjmB,KAAKgoB,4BAIT/B,6IAGW99B,GAClB,IAAMgT,EAAQhT,EAAKkkB,SACbjR,EAASjT,EAAKkkB,SACPlkB,EAAKkkB,SACHlkB,EAAKkkB,SAEpB3iB,EAAOyR,EAAQ,GACfzR,EAAO0R,EAAS,GAUhB,IARA,IACMqqB,EAAS,IAAIj+B,WAAW2T,EAAQC,EADd,GAIpB8sB,EAAS,EAETC,EAAY,IAEH,CACX,IAAMC,EAAKjgC,EAAK8jB,QAChB,GAAW,MAAPmc,EACF,MAEF,GAAW,MAAPA,EAGFD,IADAD,EACqB/sB,EAhBD,MAiBf,CAGLgtB,GApBoB,EAmBAC,EAKpB,IADA,IAAMC,EAAgBlgC,EAAK8jB,QAClB5G,EAAI,EAAGA,EAAIgjB,EAAehjB,IAAK,CACtC,IAAMnT,EAAqB,EAAf/J,EAAK8jB,QAEjBwZ,EAAO0C,KAAeG,GAAap2B,GACnCuzB,EAAO0C,KAAeG,GAAap2B,EAAM,GACzCuzB,EAAO0C,KAAeG,GAAap2B,EAAM,GACzCuzB,EAAO0C,KAAe,MAI5B,OAAO,IAAI3C,GAASrqB,EAAOC,EAAQqqB,uCAGjBa,GAClB,IAAMn+B,EAAO,IAAIg/B,eACjBh/B,EACGm/B,cAAchB,EAAMnrB,OACpBmsB,cAAchB,EAAMlrB,QACpBksB,cAAc,GACdA,cAAc,IAGjB,IADA,IAAIiB,EAAM,EACDt3B,EAAI,EAAGA,EAAIq1B,EAAMlrB,OAAQnK,IAAK,CAIrC,IAHA,IAAIu3B,EAAkB,EAClBH,EAA0B,GAC1B19B,EAA6B,QACxBqG,EAAI,EAAGA,EAAIs1B,EAAMnrB,MAAOnK,IAAK,CACpC,IAAM0f,GACH4V,EAAMb,OAA+B,GAAvBx0B,EAAIq1B,EAAMnrB,MAAQnK,GAAS,IAAM,KAC/Cs1B,EAAMb,OAA+B,GAAvBx0B,EAAIq1B,EAAMnrB,MAAQnK,GAAS,IAAM,KAC/Cs1B,EAAMb,OAA+B,GAAvBx0B,EAAIq1B,EAAMnrB,MAAQnK,GAAS,IAAM,IAC/Cs1B,EAAMb,OAA+B,GAAvBx0B,EAAIq1B,EAAMnrB,MAAQnK,GAAS,IAAM,GAElD,GAAc,IAAV0f,EAAsB,CAExB,GAAc,UAAV/lB,EACF69B,SACK,GAAc,YAAV79B,EAAqB,CAC9B,KAAO49B,EAAM,GACXpgC,EAAKsgC,WAAW,KAChBF,IAGF,KAAOC,EAAkB,KACvBrgC,EAAKsgC,WAAW,KAChBtgC,EAAKsgC,WAAW,GAChBD,GAAmB,IAErBrgC,EAAKsgC,WAAWD,GAEhB,IAAK,IAAInjB,EAAI,EAAGA,EAAIgjB,EAAc59B,OAAQ4a,GAAK,IAAM,CACnD,IAAMqjB,EAAqBL,EAActS,MAAM1Q,EAAGA,EAAI,KAClDA,EAAI,GACNld,EAAKsgC,WAAW,GAElBtgC,EAAKsgC,WAAWC,EAAmBj+B,QACnCi+B,EAAmBpyB,QAAQ,SAAAqyB,GACzB,IAAMC,EAAWtD,GAAYqD,GAC7BxgC,EAAKsgC,WAAWG,KAGpBJ,EAAkB,EAClBH,EAAgB,GAElB19B,EAAQ,aAGRA,EAAQ,UACR09B,EAAcroB,KAAK0Q,GAIvB,GAAc,YAAV/lB,EAAqB,CACvB,KAAO49B,EAAM,GACXpgC,EAAKsgC,WAAW,KAChBF,IAGF,KAAOC,EAAkB,KACvBrgC,EAAKsgC,WAAW,KAChBtgC,EAAKsgC,WAAW,GAChBD,GAAmB,IAErBrgC,EAAKsgC,WAAWD,GAChB,IAAK,IAAInjB,EAAI,EAAGA,EAAIgjB,EAAc59B,OAAQ4a,GAAK,IAAM,CACnD,IAAMqjB,EAAqBL,EAActS,MAAM1Q,EAAGA,EAAI,KAClDA,EAAI,GACNld,EAAKsgC,WAAW,GAElBtgC,EAAKsgC,WAAWC,EAAmBj+B,QACnCi+B,EAAmBpyB,QAAQ,SAAAqyB,GACzBxgC,EAAKsgC,WAAWnD,GAAYqD,EAAM/K,gBAIxC2K,IAEFpgC,EAAKsgC,WAAW,KAGhB,IADA,IAAMI,GAAW,EAAK1gC,EAAKsC,OAAS,GAAM,EACjC4a,EAAI,EAAGA,EAAIwjB,EAASxjB,IAC3Bld,EAAKsgC,WAAW,GAIlB,OAFAtgC,EAAKm/B,cAAcn/B,EAAKsC,OAAQ,IAEzBtC,wFAIP4W,EACAwlB,EACAuE,EACA7B,kGAEMloB,EAAG7W,MAAH,GAAA5B,OACD2gC,EADC,kBAAA3gC,OACuBwiC,EADvB,QAEJvE,EAAMiC,4BAEFznB,EAAG7W,MAAH,GAAA5B,OACD2gC,EADC,kBAAA3gC,OACuBwiC,EADvB,SAEJljB,KAAKmjB,UAAUxE,EAAM7hB,4qBCvWNsmB,cAcnB,SAAAA,iGAAcC,CAAA7kC,KAAA4kC,GAAA5kC,KAbN0J,SAaM,EAAA1J,KAXNsjB,eAWM,EAAAtjB,KAVNic,aAUM,EAAAjc,KATN8kC,cASM,EAAA9kC,KARN+kC,YAQM,EAAA/kC,KANNglC,iBAMM,EAAAhlC,KALNilC,mBAKM,EAAAjlC,KAJNklC,yBAIM,EAAAllC,KAHNmlC,iBAGM,EAAAnlC,KAFNolC,uBAEM,EACZplC,KAAK0J,IAAMA,YAAc,mEAIzB9F,GAEA,IADAyhC,EACAj/B,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GADqC,IAAI0B,IAEzC9H,KAAKsjB,UAAY+hB,EACjBrlC,KAAKic,QAAU,GACfjc,KAAK8kC,SAAW,KAChB9kC,KAAK+kC,OAAS,IAAIj9B,IAClB9H,KAAKglC,YAAc,KACnBhlC,KAAKilC,cAAgB,KACrBjlC,KAAKklC,oBAAsB,KAC3BllC,KAAKmlC,YAAc,KACnBnlC,KAAKolC,kBAAoB,EATzB,IAAAnT,GAAA,EAAAC,GAAA,EAAAC,OAAA9vB,EAAA,IAWA,QAAA+vB,EAAAC,EAAiBzuB,EAAQvC,MAAM,MAA/BixB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAvmB,QAAA0mB,MAAAP,GAAA,EAAsC,KAA7BmH,EAA6BhH,EAAA7O,MAEpC,GAAoB,KADpB6V,EAAOA,EAAK/3B,MAAM,KAAK,GAAGikC,QACjBj/B,UAKP+yB,EAAKp3B,WAAW,aAChBo3B,EAAKp3B,WAAW,YAChBo3B,EAAKp3B,WAAW,UAMlB,GAAa,yBAATo3B,EAAJ,CAKA,IAAIn2B,OAAM,EAEV,GAAKA,EAASm2B,EAAKiG,MAAM,uCACvBr/B,KAAKulC,yBAAyBtiC,QAIhC,GAAKA,EAASm2B,EAAKiG,MAAM,yBACvBr/B,KAAKwlC,cAAcviC,QAIrB,GAAKA,EAASm2B,EAAKiG,MAAM,qBACvBr/B,KAAKylC,wBAAwBxiC,QAI/B,GAAa,WAATm2B,EAAJ,CAKA,KAAKn2B,EAASm2B,EAAKiG,MAAM,4BAKzB,MAAM,IAAIp9B,MAAM,oBAAsBm3B,GAJpCp5B,KAAK0lC,eAAeziC,QALpBjD,KAAK2lC,6BAtBLrgC,EAAO+/B,EAAiBnlC,KAAO,IA3BnC,MAAAuyB,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GA6DA,MAAO,CACL7O,UAAWtjB,KAAK4lC,YAAY5lC,KAAKsjB,WACjCrH,QAASjc,KAAKic,QACd4pB,iBAAkB7lC,KAAK4lC,YAAY5lC,KAAK+kC,+CAItB9hC,GACpBqC,EAA6B,MAAtBtF,KAAKilC,eACZ3/B,EAA2B,MAApBtF,KAAKmlC,aAEZ,IAAM9tB,EAAOpU,EAAO,GACd6iC,EAAO9lC,KAAKic,QAAQjc,KAAKilC,eAAgB9oB,MAAMnc,KAAKmlC,aAC1D,GAAI9tB,EAAKrV,WAAW,SAClBsD,EAAyB,OAAlBtF,KAAK8kC,UACZ9kC,KAAK8kC,SAAWgB,MACX,CACLxgC,EAAOwgC,EAAKC,eAAe,mBAE3B,IAAMC,EAAchmC,KAAKimC,SAAS,KAAM5uB,GAAM,GACxC6uB,EAAWlmC,KAAKic,QAAQjc,KAAKilC,eAAgB9oB,MAAM6pB,GACzDhmC,KAAKic,QAAQjc,KAAKilC,eAAgB9oB,MAChCnc,KAAKmlC,aACHnlC,KAAKmmC,SAASD,GAEM,MAApBlmC,KAAKglC,cACPc,EAAKM,YAAcpmC,KAAKglC,+DAKG/hC,GAC/B,IAAMojC,EAASpjC,EAAO,GAAGoD,OAAS,EAC5BigC,EAAWrjC,EAAO,GAClBsgB,EAAQtgB,EAAO,GAErB,GAAIqjC,EAAStkC,WAAW,OACtB,GAAc,MAAVuhB,EACFvjB,KAAK+kC,OAAOrsB,IAAI4tB,EAAUA,QACrB,GAAI/iB,EAAMvhB,WAAW,OAAQ,CAClC,IAAMukC,EAAahjB,EAAMliB,MAAM,KAAK,GAChCrB,KAAK+kC,OAAOvP,IAAI+Q,IAClBvmC,KAAK+kC,OAAOrsB,IAAI4tB,EAAUtmC,KAAK+kC,OAAO7zB,IAAIq1B,IAKhDvmC,KAAKsjB,UAAU5K,IAAI4tB,EAAUtmC,KAAKimC,SAASK,EAAU/iB,EAAO8iB,oDAG9BpjC,GAC9B,IAAMujC,EAAavjC,EAAO,GAC1B,GAA2B,OAAvBjD,KAAKilC,cACPjlC,KAAKilC,cAAgBuB,EACrBxmC,KAAKic,QAAQuqB,GAAc,CACzBrqB,MAAO,QAEJ,IAAiC,OAA7Bnc,KAAKklC,oBAgBd,MAAM,IAAIjjC,MACR,+FAhBFqD,EAA4B,OAArBtF,KAAKmlC,aACZnlC,KAAKklC,oBAAsBsB,EAC3BxmC,KAAKolC,kBAAoB,EACzB,IAAMU,EAAO9lC,KAAKic,QAAQjc,KAAKilC,eAAe9oB,MAAMnc,KAAKmlC,kBAEL9iC,IAAlDyjC,EAAK1pB,eAAepc,KAAKklC,2BAGnB7iC,IAFNyjC,EAAK1pB,eAAepc,KAAKklC,qBACvBllC,KAAKolC,qBAGPU,EAAK1pB,eAAepc,KAAKklC,qBAAzBuB,GAAA,GACGzmC,KAAKolC,kBAAoB,sDAYhC,GAAiC,OAA7BplC,KAAKklC,oBACPllC,KAAKklC,oBAAsB,KAC3BllC,KAAKolC,kBAAoB,SACpB,IAA2B,OAAvBplC,KAAKilC,cAId,MAAM,IAAIhjC,MAAM,2CAHhBjC,KAAKilC,cAAgB,KACrBjlC,KAAKmlC,YAAc,6CAMAliC,GACrB,IAAMojC,EAASpjC,EAAO,GAAGoD,OAAS,EAC5ByM,EAAM7P,EAAO,GACbyjC,EAAgBzjC,EAAO,GAEvBsgB,EAAQvjB,KAAKmmC,SAASnmC,KAAKimC,SAASnzB,EAAK4zB,EAAeL,IAG9D,GAFArmC,KAAKsjB,UAAU5K,IAAI5F,EAAKyQ,GAEZ,WAARzQ,EAAJ,CA2BA,IAAMgzB,EAAO9lC,KAAKic,QAAQjc,KAAKilC,eAAgB9oB,MAAMnc,KAAKmlC,aAM1D,GAJY,QAARryB,GAAiB4zB,EAAc1kC,WAAW,SAC5ChC,KAAKglC,YAAc0B,EAAcrlC,MAAM,KAAK,IAGd,MAA5BrB,KAAKklC,oBACPY,EAAKhzB,GAAOyQ,EACY,MAApBvjB,KAAKglC,cACPc,EAAKM,YAAcpmC,KAAKglC,YACxBc,EAAKnpB,kBAAoB3c,KAAK+kC,OAAO7zB,IAAIlR,KAAKglC,kBAE3C,CACL,IAAM2B,EACJb,EAAK1pB,eAAepc,KAAKklC,qBAAqBllC,KAAKolC,mBAEnDp4B,OAAO8C,KAAK62B,GAAYjT,SAAS5gB,IACjC9S,KAAK4mC,SAASD,EAAW7zB,IAEzB6zB,EAAW7zB,GAAO9S,KAAK6mC,UAAUF,EAAW7zB,GAAMyQ,GAElDojB,EAAW7zB,GAAOyQ,QA/CpB,GAAiC,OAA7BvjB,KAAKklC,qBAMP,GALAllC,KAAKmlC,YAAc5hB,EAEnBvjB,KAAKic,QAAQjc,KAAKilC,eAAgB9oB,MAAMnc,KAAKmlC,aAAgB,CAC3D/oB,eAAgB,IAEI,OAAlBpc,KAAK8kC,SAAmB,CAC1B,IAAMtZ,EAAMxrB,KAAKmmC,SAASnmC,KAAK8kC,UAC/B9kC,KAAKic,QAAQjc,KAAKilC,eAAgB9oB,MAChCnc,KAAKmlC,aACHnlC,KAAK6mC,UACPrb,EACAxrB,KAAKic,QAAQjc,KAAKilC,eAAgB9oB,MAAMnc,KAAKmlC,oBAIjDnlC,KAAKolC,kBAAoB7hB,EACzBvjB,KAAKic,QAAQjc,KAAKilC,eAAgB9oB,MAChCnc,KAAKmlC,aACL/oB,eAAepc,KAAKklC,qBACpBllC,KAAKolC,mBACH,oCAgCRtyB,EACAyQ,EACA8iB,GAEK,IACDpjC,EADC3C,EAAAN,KADL8mC,EACK1gC,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,IADmB,EAGxB,GAAIigC,IACGpjC,EAASsgB,EAAM8b,MAAM,mBAAoB,CAC5C,IAAI0H,EAAS/mC,KAAKsjB,UAAUkS,IAAI1iB,GAC5B9S,KAAKmmC,SAASnmC,KAAKsjB,UAAUpS,IAAI4B,IACjC,KAcJ,GAb0B,mBAAtBi0B,EAAOvN,aAETuN,EAAS,QAGPD,GAAgB,IAEhBC,EADU,SAARj0B,EACOi0B,EAAwB,IAAjBD,EAAqB,IAAM,KAElCC,EAAOD,IAIF,MAAd7jC,EAAO,GACT,OAAO8jC,EAAS72B,SAASjN,EAAO,GAAI,IAEtC,GAAkB,MAAdA,EAAO,GACT,OAAO8jC,EAAS72B,SAASjN,EAAO,GAAI,IAGtC,MAAM,IAAIhB,MAAM,oCAIpB,GAAIshB,EAAM8b,MAAM,eACd,OAAOnvB,SAASqT,EAAO,IAEzB,GAAIA,EAAM8b,MAAM,oBACd,OAAO2H,WAAWzjB,GAEpB,GAAKtgB,EAASsgB,EAAM8b,MAAM,kCAAoC,CAC5D,IAAM19B,EAAOsB,EAAO,GACdgkC,EAAWhkC,EAAO,GAElBikC,EAAMlnC,KAAKsjB,UAAUkS,IAAI7zB,GAC3B3B,KAAKmmC,SAASnmC,KAAKsjB,UAAUpS,IAAIvP,IACjCA,EACJ,YAAiBU,IAAb4kC,EACKC,EAAID,GAENC,EAET,IAA4B,IAAxB3jB,EAAM4jB,QAAQ,KAAa,CAC7B,IAAMl6B,EAASsW,EACZliB,MAAM,KACN8C,IAAI,SAACijC,EAAGC,GAAJ,OAAc/mC,EAAK2lC,SAASnzB,EAAKs0B,EAAE9B,OAAQe,EAAQgB,KAE1D,GAAY,SAARv0B,EACF,MAAO,CACLlG,EAAGK,EAAO,GACVJ,EAAGI,EAAO,IAEP,GAAY,SAAR6F,EAAgB,CACzB,IAAM1D,EAAW,GAEjB,OADAA,EAAInC,EAAO,IAAMA,EAAO,GACjBmC,EAEP,OAAOnC,EAGX,GACGhK,EAASsgB,EAAM8b,MACd,2DAEF,CACA,IAAMiI,EAAKrkC,EAAO,GACZskC,EAAOvnC,KAAKimC,SAASnzB,EAAK7P,EAAO,IAAI,GACrCukC,EAAOxnC,KAAKimC,SAASnzB,EAAK7P,EAAO,IAAI,GAC3C,MAAc,MAAPqkC,EAAaC,EAAOC,EAAOD,EAAOC,EAG3C,MAAM,IAAIvlC,MAAM,qEAGD8B,GACf,OAAOyd,KAAKE,MAAMF,KAAKmjB,UAAU5gC,qCAGlB+hC,GACf,OAAOA,GAAwB,WAAhB2B,GAAO3B,KAAsBnmB,MAAMC,QAAQkmB,qCAU1C4B,EAAaz/B,GAAY,IAAAvH,EAAAV,KACnC2nC,qUAASC,CAAA,GAAKF,GAcpB,OAbI1nC,KAAK4mC,SAASc,IAAW1nC,KAAK4mC,SAAS3+B,IACzC+E,OAAO8C,KAAK7H,GAAOiK,QAAQ,SAAAY,GACrBpS,EAAKkmC,SAAS3+B,EAAM6K,KAChBA,KAAO40B,EAGXC,EAAO70B,GAAOpS,EAAKmmC,UAAUa,EAAO50B,GAAM7K,EAAM6K,IAGlD9F,OAAO66B,OAAOF,EAAdlB,GAAA,GAAyB3zB,EAAM7K,EAAM6K,OAIpC60B,sCAGiBxjC,GACxB,IAAMiL,EAAW,GAEjB,OADAjL,EAAI+N,QAAQ,SAACqR,EAAUzQ,GAAX,OAAuB1D,EAAI0D,GAAOyQ,IACvCnU,+hBCjWU04B,sIACXC,mBACAC,OAAS,uGAEEjkC,4GACGkkC,6BAApBjoC,KAAK+nC,cAECG,EAAa,CAAC,CAAEnkC,OAAMpC,KAAM,uBAE1BwmC,EAAOnoC,KAAKooC,kBAAiB,YACtBpoC,KAAKqoC,QAAQF,EAAMD,gFAEd,0BAAd5yB,EAAAgiB,GAAE9xB,0CAEI2iC,EAAOnoC,KAAKooC,kBAAiB,aACtBpoC,KAAKqoC,QAAQF,EAAMD,mSAUfI,GACvB,IAAMH,EAAO,CAAC,KAAM,aAiCpB,OAhCIG,GACFH,EAAKvsB,KAALjG,MAAAwyB,EACK,CACD,kBACA,iBACA,OACA,MACA,OACA,UAINA,EAAKvsB,KAALjG,MAAAwyB,EACK,CACD,MACA,IAIA,OACA,UACA,WACA,UACA,UACA,YACA,YACA,aACA,eAKGA,gFAGaA,EAAgBD,oGACpC1+B,QAAQE,IAAR,mCAAAxH,OAA+CimC,EAAK/sB,KAAK,yBAElD,IAAIjb,QAAoB,SAACC,EAASC,GACvC,IAAIsnC,EAAS,GACPY,EAAe,SAACC,GACpBb,GAAUa,EAAM,KAChBh/B,QAAQE,IAAI8+B,IAEdloC,EAAKynC,OAAO,CAEV3hC,UAAW+hC,EACX9jC,MAAO6jC,EACPO,MAAOF,EACPG,SAAUH,EACVI,MAAO,aAGPC,aAActoC,EAAK0nC,OACnBa,eAAe,EACfC,eAAgB,SAACzkC,GAEbsjC,EAAOjU,SACL,2DAGFrzB,EAAO,IAAI4B,MAAM,0BACS,IAAjBoC,EAAMgC,OACfhG,EAAO,IAAI4B,MAAM,kBAEjB7B,EAAQ,IAAIgD,WAAWiB,EAAM,GAAGN,4UChFvBglC,sIAEFC,gBAAkB,EAChC,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GACxB,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,QAIVC,eAAiB,CAChC,EAAO,EAAO,EAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC9D,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC/D,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,IAAO,IAC9D,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAC/D,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAC/D,IAAO,IAAM,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAC9D,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAC/D,KAAO,KAAO,KAAO,KAAO,KAAO,KAAM,MAAO,MAAO,MAAO,MAC9D,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,6DAG5CllC,GACZ,IAAMmlC,EAAM,IAAIC,KAASplC,GAEnBqlC,EAAyBF,EAAIG,IAAYD,cACzCE,EAAsBJ,EAAIG,IAAYC,WACtCC,EAAoBL,EAAIG,IAAYG,YAE1C,GAAsB,IAAlBJ,EACF,MAAM,IAAInnC,MAAM,uDAElB,GAAiB,IAAbsnC,EACF,MAAM,IAAItnC,MAAM,kDAelB,IAZA,IAAMwnC,EAAyB,CAC7BC,WAAY,EACZC,UAAW,GAEPC,EAAyB,CAC7BF,WAAY,EACZC,UAAW,GAGPE,EAAmBX,EAAInlC,KAAa8lC,QACpCC,EAAO,IAAIC,WAAWF,EAAQxjC,QAC9By6B,EAAQ,IAAIiJ,WAAWF,EAAQxjC,QAC5B4a,EAAI,EAAGA,EAAI4oB,EAAQxjC,OAAQ4a,IAClC6oB,EAAK7oB,GAAKjhB,KAAKgqC,gBAAgBP,EAAII,EAAQ5oB,KAAO,GAClD6f,EAAM7f,GAAKjhB,KAAKgqC,gBAAgBJ,EAAiB,GAAbC,EAAQ5oB,IAG9C,MAAO,CACL6oB,OACAhJ,QACAwI,6CAIUW,GAGZ,IAFA,IAAMC,EAAaD,EAAQH,KAAKzjC,OAC1BwjC,EAAU,IAAIE,WAAwB,EAAbG,GACtBjpB,EAAI,EAAGA,EAAIipB,EAAYjpB,IAC9B4oB,EAAY,EAAJ5oB,EAAQ,GAAKgpB,EAAQH,KAAK7oB,GAClC4oB,EAAY,EAAJ5oB,EAAQ,GAAKgpB,EAAQnJ,MAAM7f,GAGrC,IAAMioB,EAAM,IAAIC,KAEhB,OADAD,EAAIiB,YAAY,EAAGF,EAAQX,WAAY,KAAMO,GACtCX,EAAI7F,2CAGGpU,EAAWlM,EAAa7c,GACtC,OAAO8J,KAAK+S,IAAI/S,KAAK9J,IAAI6c,EAAKkM,GAAI/oB,yCAGdiK,GACpB,OAAKA,EAAI,OAAU,MACTA,GAAK,GAAM,MAEZA,0CAIai6B,EAAuBC,GAC7C,IAAMtsB,EAAO/d,KAAKipC,eAAemB,EAAEV,YAC7BY,EAAYtqC,KAAKuqC,QACrBH,EAAEV,WAAa1pC,KAAKgpC,gBAAgBqB,GACpC,EACA,IAGIG,EAAgB,EAATH,EAEPI,GAAS,GADQ,EAATJ,GACa,GAAKtsB,IAAU,EACtC4rB,EAAYS,EAAET,UAUlB,OATIa,EACFb,GAAac,EAEbd,GAAac,EAGfL,EAAET,UAAY3pC,KAAK0qC,cAAcf,GACjCS,EAAEV,WAAaY,EAERF,EAAET,kVCzHb,IAAMgB,GAAM9qC,EAAQ,QAEC+qC,iPACW9I,EAA6B9f,4GAIzD,IAHM6oB,EAAQ,GACRC,EAAQ,GAELC,EAAS,EAAGA,EAASjJ,EAAOz7B,OAAQ0kC,IAiB3C,IAhBM5K,EAAQ2B,EAAOiJ,GAErBF,EAAMjvB,KAAK,CACTovB,KAAM,CACJ,CACEC,MAAO,CACLjjC,GAAI+iC,EACJnoC,KAAI,yBAAAV,OAA2B4C,YAC7B,IAAI1B,WAAW+8B,EAAMiC,YAQ/BxyB,EAAA,EAAAC,EAAkB7C,OAAO8C,KAAKqwB,EAAM7hB,OAAOR,QAA3ClO,EAAAC,EAAAxJ,OAAAuJ,IAAW9B,EAAyC+B,EAAAD,GAC5C0O,EAAS6hB,EAAM7hB,OAAOR,OAAOhQ,GAE7Bo9B,EAAOh7B,SAASpC,EAAK,IAAM,GACjCg9B,EAAMlvB,KAAK,CACTsvB,KAAM,CACJ,CACED,MAAO,CACLjjC,GAAIkjC,EACJt+B,EAAG0R,EAAOkkB,MAAM51B,EAChBC,EAAGyR,EAAOkkB,MAAM31B,EAChBkK,MAAOuH,EAAOkkB,MAAMjC,EACpBvpB,OAAQsH,EAAOkkB,MAAMhC,EACrB2K,QAAS,EACTC,QAAS,EACTC,SAAU/sB,EAAOkkB,MAAMjC,EACvByK,KAAMD,EACNO,KAAM,GACNC,OAAQC,OAAOC,aAAaP,eAQlC9zB,EAAW0qB,EAAO,GAAGxjB,OAAOR,OAAO,GAAG8kB,WAAWpC,EAIjDve,EAAY,CAChBA,KAAM,CACJ,CACEtP,KAAM,CACJ,CACEs4B,MAAO,CACLS,KAAM1pB,EACN9hB,KAAMkX,EACNqtB,QAAS,UACTkH,QAAS,MACTC,OAAQ,IACRC,KAAM,IACNC,SAAU,MACVC,OAAQ,IACRC,GAAI,QAOZ,CACEC,OAAQ,CACN,CACEhB,MAAO,CACLJ,MAAO/I,EAAOz7B,OACd6lC,WAAY90B,EAIZ+0B,OAAQ,MAShB,CAAEtB,SACF,CAAEC,6BAICH,GAAI1oB,EAAM,CAAEmqB,OAAQ,6TClGhB,SAASC,GACtBtoC,GAEA,IAAM8yB,EAAoB,GACtByV,EAA+B,KAFEra,GAAA,EAAAC,GAAA,EAAAC,OAAA9vB,EAAA,IAIrC,QAAA+vB,EAAAC,EAAmBtuB,EAAK1C,MAAM,QAA9BixB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAvmB,QAAA0mB,MAAAP,GAAA,EAAuC,KAA5BmH,EAA4BhH,EAAA7O,MACjC+oB,EACW,UAATlT,EACFkT,EAAgB,KAEhBzV,EAAayV,GAAe1wB,KAAKwd,GAG/BA,EAAKp3B,WAAW,OAElB60B,EADAyV,EAAgBlT,EAAK/3B,MAAM,SAAS,IACN,KAdC,MAAAoxB,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAmBrC,OAAO0E,8/CCLY0V,eAEnB,SAAAA,EAAYC,GAAc,IAAAlsC,MAAA,mGAAAmsC,CAAAzsC,KAAAusC,KACxBvsC,OAAA0sC,GAAAH,GAAA/U,KAAAx3B,KAAMwsC,IAANlsC,sDAqIcqS,KAAO,SAACg6B,GACtBrsC,EAAKoJ,IAAIijC,EAAK,SAvIUrsC,EA0IVslB,KAAO,SAAC+mB,GACtBrsC,EAAKoJ,IAAIijC,EAAK,SA3IUrsC,EA8IVssC,MAAQ,SAACD,GACvBrsC,EAAKoJ,IAAIijC,EAAK,UA/IUrsC,EAkJToJ,IAAM,SAACijC,EAAajmC,GACnCpG,EAAKusC,SAAS,SAACC,GACb,0UAAAC,CAAA,GACKD,EADL,CAEEE,SAAQ,CACN,CAAEL,MAAKjmC,SADDxE,OAAA+qC,GAEHH,EAAUE,SAAS1rC,OACpB,SAACkE,EAASyb,GAAV,MAAiC,SAAjBzb,EAAQkB,MAAmBua,EAAI,YAzJ/B3gB,EAgKlB4sC,YAhKkB,eAAAx8B,EAAAy8B,GAAAr4B,mBAAAC,KAgKJ,SAAAM,EAAO+3B,GAAP,IAAA/oC,EAAAzB,EAAAyqC,EAAA,OAAAv4B,mBAAAI,KAAA,SAAAI,GAAA,cAAAA,EAAAF,KAAAE,EAAAxJ,MAAA,UAEN,QADRzH,EAAQ+oC,EAAI1F,OAAOrjC,QACc,IAAjBA,EAAMgC,OAFR,CAAAiP,EAAAxJ,KAAA,eAGlBwhC,MAAM,uDAHYh4B,EAAAC,OAAA,qBAMd3S,EAAOyB,EAAM,IACT1C,KAAKC,SAAS,QAPJ,CAAA0T,EAAAxJ,KAAA,eAQlBwhC,MAAM,mCARYh4B,EAAAC,OAAA,wBAYpBjV,EAAKusC,SAAS,CAAEU,aAAa,IAZTj4B,EAAAxJ,KAAA,GAaCxL,EAAKksC,MAAMgB,WAAW5qC,GAbvB,QAadyqC,EAbc/3B,EAAAM,KAcpBtV,EAAKusC,SAAS,CAAEU,aAAa,IAEzBF,GACF/sC,EAAKqS,KAAK,4CACV26B,MAAM,8CAENhtC,EAAKssC,MAAM,sBACXU,MAAM,uBArBY,yBAAAh4B,EAAAG,SAAAJ,MAhKI,gBAAAY,GAAA,OAAAvF,EAAAiF,MAAA3V,KAAAoG,YAAA,GAAA9F,EAyLlBmtC,WAzLkBN,GAAAr4B,mBAAAC,KAyLL,SAAAC,IAAA,OAAAF,mBAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArJ,MAAA,cAAAqJ,EAAArJ,KAAA,EACbxL,EAAKksC,MAAMkB,UADE,OAEnBJ,MAAM,iDACN/9B,OAAOo+B,SAASC,QAAO,GAHJ,wBAAAz4B,EAAAM,SAAAT,MAtLnB1U,EAAKiG,MAAQ,CACXgnC,aAAa,EACbP,SAAU,IAGZ1sC,EAAKksC,MAAMqB,UAAXC,GAAAxtC,IARwBA,yPAFYytC,wDAcpC,OACEC,GAAA,qBACEjpC,MAAO,CACLkpC,WAAY,MACZC,YAAa,MACb/2B,WAAY,QACZg3B,SAAU,QACVjC,WAAY,MAGd8B,GAAA,qCACAA,GAAA,qVAKyC,IACvCA,GAAA,4FAIFA,GAAA,+FAGAA,GAAA,wBACEA,GAAA,4DACAA,GAAA,8DAEFA,GAAA,uEACgD,IAC9CA,GAAA,sEAFF,yBAGWA,GAAA,iCAHX,gCAKAA,GAAA,uJAE4D,IAC1DA,GAAA,iCAHF,4JAOAA,GAAA,wBACEA,GAAA,6OAMAA,GAAA,mLAKAA,GAAA,wBACEA,GAAA,uSAKe,IACbA,GAAA,mBAAGI,KAAK,+BAAR,4BANF,KAOIJ,GAAA,mBAAGI,KAAK,uCAAR,WAPJ,OAOkE,IAChEJ,GAAA,mBAAGI,KAAK,sCAAR,6BARF,sDADF,UAcU,IACRJ,GAAA,uBACEtnC,KAAM,OACN2nC,UAAU,EACVC,OAAQ,OACRC,SAAUvuC,KAAKktC,YACfsB,SAAUxuC,KAAKuG,MAAMgnC,gBAK3BS,GAAA,2CACkBA,GAAA,mDAEc,IAA/BhuC,KAAKuG,MAAMymC,SAAS3mC,QAAgB2nC,GAAA,yCACrCA,GAAA,qBAAKjpC,MAAO,CAAEqS,SAAU,SACrBpX,KAAKuG,MAAMymC,SAAS7oC,IAAI,SAACqB,EAASyb,GAAV,OACvB+sB,GAAA,qBAAKl7B,IAAKmO,GACR+sB,GAAA,sBACEjpC,MAAO,CACLunB,MACmB,SAAjB9mB,EAAQkB,KACJ,OACiB,SAAjBlB,EAAQkB,KACR,SACA,QAGPlB,EAAQkB,KAAK+nC,eAXlB,KAaKjpC,EAAQmnC,QAKjBqB,GAAA,8EACAA,GAAA,sHAE0B,IACxBA,GAAA,uBACEtnC,KAAM,OACN2nC,UAAU,EACVC,OAAQ,iBACRC,SAAUvuC,KAAKwsC,MAAMkC,2BAIzBV,GAAA,2CACAA,GAAA,2GAEaA,GAAA,wBAAQW,QAAS3uC,KAAKytC,YAAtB,iiBCjIrB,IAAMmB,GAAqB/uC,EAAQ,QAQdgvC,cAGnB,SAAAA,EAA6Bl0B,gGAAgBm0B,CAAA9uC,KAAA6uC,GAAA7uC,KAAA2a,KAAA3a,KAFrC+uC,YAEqC,EAC3C/uC,KAAK+uC,OAASrlC,iMAIdF,iBAAoBxJ,KAAK2a,GAAGzZ,GAAG,6BAAvBuI,uJAGI0R,GAAmB,IAAA7a,EAAAN,KACzBgvC,EAAQrqC,SAASC,cAAc,OACrCqqC,UACElB,iBAAoBxB,GAAY,CAC9BiB,WAAYxtC,KAAKkvC,eAAerX,KAAK73B,MACrC0tC,QAAS1tC,KAAKmvC,MAAMtX,KAAK73B,MACzB0uC,wBAAuB,eAAAU,EAAAC,GAAAv6B,mBAAAC,KAAE,SAAAC,EAAOo4B,GAAP,IAAA/oC,EAAA,OAAAyQ,mBAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArJ,MAAA,UAET,QADRzH,EAAQ+oC,EAAI1F,OAAOrjC,QACc,IAAjBA,EAAMgC,OAFL,CAAA8O,EAAArJ,KAAA,eAAAqJ,EAAAI,OAAA,wBAAAJ,EAAArJ,KAAA,EAKjB3L,QAAQ+D,IACZyb,MAAM9G,KAAKxU,GAAOF,IAAI,SAAAvB,GAAI,OAAItC,EAAKgvC,oBAAoB1sC,MANlC,OAQvB0qC,MAAM,+CACN/9B,OAAOo+B,SAASC,QAAO,GATA,wBAAAz4B,EAAAM,SAAAT,MAAF,gBAAAiB,GAAA,OAAAm5B,EAAAz5B,MAAA3V,KAAAoG,YAAA,GAWvBynC,UAAW7tC,KAAK6tC,UAAUhW,KAAK73B,QAEjCmb,GAGFA,EAAKjW,YAAY8pC,8LAIVhvC,KAAK2a,GAAG40B,OAAO,oJAGPR,GACf/uC,KAAK+uC,OAASA,+KAIR/uC,KAAK2a,GAAG60B,gMAGa5sC,uHAGnB5C,KAAK2a,GAAG7W,MAAM,gBAAiBlB,0BACV5C,KAAK2a,GAAGnY,KAAK,+BAAlCitC,kBACMC,KAAMC,UAAUF,UAA5BG,kEAEA5vC,KAAK+uC,OAAOnC,MAAZ,kCAAA1qC,OAAoD84B,EAAA1D,GAAE9xB,6BAC/C,4BAIDqqC,EAAWC,YAAcF,aACzB5vC,KAAK2a,GAAG60B,kCAERxvC,KAAK+vC,YAAYF,4BACjB7vC,KAAKgwC,UAAUH,4BACW7vC,KAAKqsC,kBAAkBwD,kBAAjDI,mBACAjwC,KAAKkwC,aAAaL,EAAUI,4BAC5BjwC,KAAKmwC,YAAYN,4BACjB7vC,KAAKowC,qCACLpwC,KAAKqwC,UAAUR,4BACf7vC,KAAKswC,UAAUT,4BACf7vC,KAAKuwC,UAAUV,4BACf7vC,KAAKwwC,WAAWX,4BAChB7vC,KAAKywC,YAAYZ,qEAEvB7vC,KAAK+uC,OAAOnC,MAAM5R,EAAAzD,GAAE/xB,4BACb,qCAGF,kNAGyB5C,sFAC5BA,EAAKjB,KAAKC,SAAS,wCACf5B,KAAK2a,GAAG7W,MAAR,UAAA5B,OAAwBU,EAAKjB,MAAQiB,gDAErC5C,KAAK2a,GAAG7W,MAAR,oBAAA5B,OAAkCU,EAAKjB,MAAQiB,2SAKhDzC,QAAQ+D,IACb,CACE,CAAC,cAAe,gBAChB,CAAC,kBAAmB,qBACpBC,IAHF,eAAAuM,EAAA2+B,GAAAv6B,mBAAAC,KAGM,SAAAsmB,EAAMqV,GAAN,IAAAC,EAAA9N,EAAA+N,EAAA7sC,EAAA,OAAA+Q,mBAAAI,KAAA,SAAAomB,GAAA,cAAAA,EAAAlmB,KAAAkmB,EAAAxvB,MAAA,cACE6kC,EAASD,EAAE,GACX7N,EAAU6N,EAAE,GAClBhwC,EAAKquC,OAAOp8B,KAAZ,oBAAAzQ,OAAqCyuC,EAArC,OAEMC,EAAS,IAAIhM,GALftJ,EAAAhE,GAMSsZ,EANTtV,EAAAxvB,KAAA,EAOIpL,EAAKia,GAAG8G,wBAAwBkvB,GAPpC,cAAArV,EAAA/D,GAAA+D,EAAA1lB,KAME7R,EANFu3B,EAAAhE,GAMgB5V,MANhB8V,KAAA8D,EAAAhE,GAAAgE,EAAA/D,IAAA+D,EAAAxvB,KAAA,GASEpL,EAAKia,GAAG7W,MAAM++B,EAASrhB,KAAKmjB,UAAU5gC,IATxC,QAWJrD,EAAKquC,OAAOp8B,KAAZ,qBAAAzQ,OAAsCyuC,EAAtC,OAXI,yBAAArV,EAAA7lB,SAAA4lB,MAHN,gBAAAwV,GAAA,OAAAngC,EAAAiF,MAAA3V,KAAAoG,YAAA,mLAmBoBypC,8HAChB7vC,KAAK2a,GAAG7Z,MAAM,0BAEd8vC,EAAS,IAAIhM,GAEbkM,EAAe,oBACrB9wC,KAAK+uC,OAAOp8B,KAAZ,oBAAAzQ,OAAqC4uC,EAArC,OACMC,EAAe/wC,KAAKgxC,wBAAwBnB,EAAUiB,QACvCF,WAAmBG,EAAaE,MAAM,2BAArDC,OAAsBxvB,sBACtB2jB,EAAmB,IAAIv9B,IAAIkF,OAAO7L,QAAQ+vC,EAAa5tB,YAC7DtjB,KAAK+uC,OAAOp8B,KAAZ,qBAAAzQ,OAAsC4uC,EAAtC,aAEc,CACZ,CAAC,WAAY,IACb,CAAC,WAAY,aACb,CAAC,UAAW,IACZ,CAAC,cAAe,IAChB,CAAC,cAAe,IAChB,CAAC,eAAgB,IACjB,CAAC,eAAgB,IACjB,CAAC,aAAc,IACf,CAAC,WAAY,IACb,CAAC,aAAc,IACf,CAAC,WAAY,IACb,CAAC,WAAY,IAEb,CAAC,WAAY,eACb,CAAC,eAAgB,yBACjB,CAAC,aAAc,IACf,CAAC,WAAY,iBACb,CAAC,WAAY,IACb,CAAC,YAAa,IACd,CAAC,aAAc,IACf,CAAC,YAAa,IACd,CAAC,YAAa,IACd,CAAC,YAAa,IACd,CAAC,cAAe,IAChB,CAAC,cAAe,wBAChB,CAAC,eAAgB,IACjB,CAAC,aAAc,IACf,CAAC,eAAgB,IACjB,CAAC,YAAa,IACd,CAAC,aAAc,IACf,CAAC,YAAa,IACd,CAAC,eAAgB,IACjB,CAAC,eAAgB,IACjB,CAAC,WAAY,IACb,CAAC,YAAa,IACd,CAAC,YAAa,IACd,CAAC,WAAY,IACb,CAAC,eAAgB,IACjB,CAAC,cAAe,IAChB,CAAC,aAAc,IACf,CAAC,eAAgB,IACjB,CAAC,YAAa,IACd,CAAC,eAAgB,IAEjB,CAAC,YAAa,IACd,CAAC,aAAc,IACf,CAAC,eAAgB,IACjB,CAAC,aAAc,IACf,CAAC,YAAa,IACd,CAAC,cAAe,IAChB,CAAC,eAAgB,gBACjB,CAAC,YAAa,qDAID,MADJJ,QACH,KACJA,EAAE,GAAKA,EAAE,IAELC,oBAAoBD,EAAE,IACtB7N,qBAAsB6N,EAAE,YAC9B1wC,KAAK+uC,OAAOp8B,KAAZ,oBAAAzQ,OAAqCyuC,EAArC,OAEMQ,EAAUnxC,KAAKgxC,wBAAwBnB,EAAUc,QAC1CC,YAAmBO,EAAQF,MAAM,wCAAS5L,EAAjDthC,OAAc2d,qCACd1hB,KAAK2a,GAAG7W,MAAM++B,EAASrhB,KAAKmjB,UAAU5gC,YAE5C/D,KAAK+uC,OAAOp8B,KAAZ,qBAAAzQ,OAAsCyuC,EAAtC,yNAIsBd,sGAClBe,EAAS,IAAIQ,uBAEZjxC,QAAQ+D,IACb,CAAC,CAAC,cAAe,eAAgB,CAAC,cAAe,oBAAoBC,IAArE,eAAAwM,EAAA0+B,GAAAv6B,mBAAAC,KACE,SAAA0mB,EAAMiV,GAAN,IAAAC,EAAA9N,EAAAwO,EAAAC,EAAA,OAAAx8B,mBAAAI,KAAA,SAAAwmB,GAAA,cAAAA,EAAAtmB,KAAAsmB,EAAA5vB,MAAA,cACQ6kC,EAASD,EAAE,GACX7N,EAAU6N,EAAE,GAElB7vC,EAAKkuC,OAAOp8B,KAAZ,oBAAAzQ,OAAqCyuC,EAArC,OAEMU,EAAUxwC,EAAKmwC,wBAAwBnB,EAAUc,GANzDjV,EAAA5vB,KAAA,EAO0BpJ,IAAO6uC,cAAcF,GAP/C,cAOQC,EAPR5V,EAAA9lB,KAAA8lB,EAAA5vB,KAAA,EAQQjL,EAAK8Z,GAAG7W,MAAM++B,EAAS+N,EAAOY,QAAQF,IAR9C,OAUEzwC,EAAKkuC,OAAOp8B,KAAZ,qBAAAzQ,OAAsCyuC,EAAtC,OAVF,yBAAAjV,EAAAjmB,SAAAgmB,MADF,gBAAAgW,GAAA,OAAA9gC,EAAAgF,MAAA3V,KAAAoG,YAAA,oLAiBoBypC,wGAChBe,EAAS,IAAIpP,SAEL,CACZ,CAAC,cAAe,WAChB,CAAC,eAAgB,YACjB,CAAC,cAAe,UAChB,CAAC,aAAc,OACf,CAAC,cAAe,WAChB,CAAC,aAAc,UACf,CAAC,eAAgB,YACjB,CAAC,WAAY,QACb,CAAC,aAAc,UACf,CAAC,YAAa,QACd,CAAC,cAAe,WAChB,CAAC,kBAAmB,iBACpB,CAAC,kBAAmB,iBAEpB,CAAC,gBAAiB,eAClB,CAAC,iBAAkB,gBACnB,CAAC,gBAAiB,gEAETkP,OACHC,EAASD,EAAE,GAAK,OAChB7N,EAAU6N,EAAE,GAElB1wC,KAAK+uC,OAAOp8B,KAAZ,oBAAAzQ,OAAqCyuC,EAArC,OACMe,EAAU1xC,KAAKgxC,wBAAwBnB,EAAUc,QAClCC,YACbluC,IAAO6uC,cAAcG,6CADDC,yCAAtB9P,SAGAC,EAAS8O,EAAOgB,mBAAmB/P,aACnC+O,EAAOiB,iBAAiB7xC,KAAK2a,GAAImnB,EAAjC,QAAA5/B,OAAiD2gC,YACvD7iC,KAAK+uC,OAAOp8B,KAAZ,qBAAAzQ,OAAsCyuC,EAAtC,8NAI4Bd,mGAC9B7vC,KAAK+uC,OAAOp8B,KAAK,iCACXm/B,EAAkB9xC,KAAKgxC,wBAAwBnB,EAAU,YACzDkC,EAAY,IAAIX,UACD/E,QACnB0F,WAAwBrvC,IAAO6uC,cAAcO,uCAAnCN,wBADN3a,2BAGA72B,KAAK2a,GAAG7W,MAAM,qBAAsB0d,KAAKmjB,UAAU9N,mBACzD72B,KAAK+uC,OAAOp8B,KAAK,oDAEVkkB,EAAa1C,KAAK,wLAGH0b,0HAChB7vC,KAAK2a,GAAG7Z,MAAM,iBAEd8vC,EAAS,IAAIpP,GACbwQ,EAAsB,IAAIpH,SAElB,CACZ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,yDAES5oB,OACH2uB,oBAAoB3uB,UAC1BhiB,KAAK+uC,OAAOp8B,KAAZ,oBAAAzQ,OAAqCyuC,EAArC,OAEMsB,EAAUjyC,KAAKgxC,wBAAwBnB,EAAUc,QAClCC,YACbluC,IAAO6uC,cAAcU,6CADDC,yCAAtBrQ,SAGAC,EAAS8O,EAAOgB,mBAAmB/P,aACnC+O,EAAOiB,iBAAiB7xC,KAAK2a,GAAImnB,EAAjC,UAAA5/B,OAAmD8f,6BACtCgwB,EAAoBG,iBAAiBrQ,EAAQ9f,kBAA1DC,mBAEAjiB,KAAK2a,GAAG7W,MAAR,UAAA5B,OAAwB8f,EAAxB,aAA6CC,WAEnDjiB,KAAK+uC,OAAOp8B,KAAZ,qBAAAzQ,OAAsCyuC,EAAtC,uNAIqBd,4HACjB7vC,KAAK2a,GAAG7Z,MAAM,oBAEfd,KAAKoyC,yBAAyBvC,EAAU,iCAC3C7vC,KAAK+uC,OAAOnpB,KAAK,0DAIbysB,EAAY,IAAItJ,YAGF/oC,KAAKsyC,eAAezC,EAAU,SAAU,eAAtD5S,wCACaA,4EAARK,UACH37B,EAAO27B,EAAKx7B,KAAK+a,OAAO,GAC9B7c,KAAK+uC,OAAOp8B,KAAZ,mBAAAzQ,OAAoCP,SACpB0wC,YAAuB/U,EAAK16B,KAAKquC,MAAM,yCAAjDhH,OAAoBrI,uBACpB2Q,EAAUF,EAAU9Q,OAAO0I,aAE3BjqC,KAAK2a,GAAG7W,MAAR,UAAA5B,OAAwBP,GAAQ4wC,WAWtCvyC,KAAK+uC,OAAOp8B,KAAZ,4BAAAzQ,OAA6CP,6dAIvBkuC,4HAClB7vC,KAAK2a,GAAG7Z,MAAM,qBAEfd,KAAKoyC,yBAAyBvC,EAAU,mCAC3C7vC,KAAK+uC,OAAOnpB,KAAK,0DAIb4sB,EAAY,IAAI1K,YAED9nC,KAAKsyC,eAAezC,EAAU,WAAY,eAAzD1sB,wCACcA,4EAATkD,UACH1kB,EAAO0kB,EAAMvkB,KAAK+a,OAAO,GAC/B7c,KAAK+uC,OAAOp8B,KAAZ,oBAAAzQ,OAAqCP,cAEb0kB,EAAMzjB,KAAKquC,MAAM,6BAAnCtU,mBACe6V,EAAU9wB,MAAMib,kBAA/B15B,mBAEAjD,KAAK2a,GAAG7W,MAAR,WAAA5B,OAAyBP,EAAKo4B,QAAQ,OAAQ,SAAW92B,WAC/DjD,KAAK+uC,OAAOp8B,KAAZ,6BAAAzQ,OAA8CP,6dAIxBkuC,sHACjB1vC,QAAQ+D,IACb,CACE,CAAC,UAAW,oBACZ,CAAC,OAAQ,kBACT,CAAC,UAAW,qBACZ,CAAC,OAAQ,kBACT,CAAC,UAAW,sBACZC,IAAI,SAAAusC,GACJ,OAAOzvC,EAAKwxC,kBAAkB5C,EAAUa,EAAE,GAAIA,EAAE,GAAI,0LAKlCb,kGAChB7vC,KAAKyyC,kBAAkB5C,EAAU,WAAY,SAAU,8LAGpCA,EAAiBI,kGACpCjwC,KAAKyyC,kBACT5C,EACA,SACA,qBACA,yCAEI7vC,KAAKyyC,kBACT5C,EACAI,EACA,mBACA,+MAKFL,EACA8C,EACAC,EACAC,+HACAC,qCAEAH,EAAM,GAAAxwC,OAAMwwC,EAAN,KACN1yC,KAAK+uC,OAAOp8B,KAAZ,YAAAzQ,OACc0wC,EADd,kBAAA1wC,OAC6CwwC,EAD7C,UAAAxwC,OAC4DywC,EAD5D,OAIMtuC,EAAQrE,KAAKsyC,eAAe1C,EAAK8C,EAAQE,YAEzC5yC,KAAK2a,GAAG7Z,MAAM6xC,wCAEMtuC,4EAAfyuC,UACHC,EAAeF,EACjBC,EAAYhxC,KAAKkxC,cACjBF,EAAYhxC,KACVc,EAAOkwC,EAAYlwC,KAEnBqwC,YAAgBN,cAAWI,GACjC/yC,KAAK+uC,OAAOp8B,KAAZ,YAAAzQ,OAA6B6wC,EAA7B,UAAA7wC,OAAkD+wC,EAAlD,YACMjzC,KAAK2a,QAASs4B,YAAkBrwC,EAAKquC,MAAM,kDAAnCntC,6cAIK8rC,EAAY8C,EAAgBE,GACjD,IAAMvuC,EAAoD,GAsB1D,OArBAurC,EAAI19B,QAAQ,SAAC6gC,EAAcnwC,GACzB,GAAImwC,EAAa/wC,WAAW0wC,GAAS,KAAAQ,GAAA,EAAAC,GAAA,EAAAC,OAAA/wC,EAAA,IACnC,QAAAgxC,EAAAC,EAA4BV,EAAevxC,MAAM,KAAjDixB,OAAAC,cAAA2gB,GAAAG,EAAAC,EAAAxnC,QAAA0mB,MAAA0gB,GAAA,EAAuD,KAA5CK,EAA4CF,EAAA9vB,MACrD,GACEwvB,EAAaC,cAAcpxC,SAAS2xC,EAAcP,eAClD,CAEAD,GADAA,EAAeA,EAAavvB,UAAUkvB,EAAOrsC,SACjBmd,UAC1B,EACAuvB,EAAa1sC,OAASktC,EAAcltC,QAEtC0sC,GAAgBQ,EAChBlvC,EAAMuX,KAAK,CACT9Z,KAAMixC,EACNnwC,KAAMA,IAER,QAf+B,MAAA6vB,GAAA0gB,GAAA,EAAAC,EAAA3gB,EAAA,YAAAygB,GAAA,MAAAI,EAAA5gB,QAAA4gB,EAAA5gB,SAAA,WAAAygB,EAAA,MAAAC,OAoBhC/uC,kDAGuBurC,EAAY9tC,GAC1C,IAAM0xC,EAA0B,IAAIC,OAAO7E,GAAmB9sC,GAAO,KAC/Dc,EAAOgtC,EAAIhtC,KAAK4wC,GAAyB,GAC/C,QAAanxC,IAATO,EACF,MAAM,IAAIX,MAAJ,uBAAAC,OAAiCJ,EAAjC,MAGR,OAAOc,mDAGwBgtC,EAAY9tC,GAC3C,IAAM4xC,EAA4B,IAAID,OAAO7E,GAAmB9sC,GAAO,KACvE,YAAoDO,IAA7CutC,EAAI+D,OAAOD,GAA2B,wWCvcjDE,GAAA9+B,mBAAAC,KAAC,SAAAC,IAAA,IAAAjQ,EAAAoW,EAAA04B,EAAAl5B,EAAAm5B,EAAA19B,EAAAC,EAAA09B,EAAAC,EAAA7nC,EAAA0O,EAAAnG,EAAAoe,EAAAlY,EAAAq5B,EAAA99B,EAAA+9B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAha,EAAA5C,EAAA3b,EAAAw4B,EAAAp3B,EAAApH,EAAAuI,EAAAk2B,EAAA7d,EAAAtD,EAAA5mB,EAAAgoC,EAAAC,EAAA,OAAA5/B,mBAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArJ,MAAA,cACCpC,eAEM3E,EAAQJ,SAASC,cAAc,UAC/B+vC,UAAN,mEAKMx5B,EAAOxW,SAASC,cAAc,QAC/BoD,GAAK,QACJ6rC,EAAUlvC,SAASC,cAAc,MAC/BgwC,UAAR,sBAAA1yC,OAA0C2yC,UAA1C,0MAIAlwC,SAASmwC,KAAK5vC,YAAYH,GAC1BJ,SAASM,KAAKC,YAAYiW,GAC1BxW,SAASM,KAAKC,YAAY2uC,GAEpBl5B,EAAK,IAAI7a,EACI,IArBpBqV,EAAArJ,KAAA,GAsBO6O,EAAGpa,KAAK,WAtBf,eAuBEgP,OAAeoL,GAAKA,EAEfm5B,EAAgB,IAAIjF,GAAcl0B,GAzBzCxF,EAAArJ,KAAA,GA0BOgoC,EAAcvzC,OA1BrB,eA2BCuzC,EAAcl/B,OAAOuG,GA3BtBhG,EAAArJ,KAAA,GA6BagoC,EAAciB,aA7B3B,WAAA5/B,EAAAS,KAAA,CAAAT,EAAArJ,KAAA,gBA8BGtC,QAAQoc,KAAK,qCA9BhBzQ,EAAAI,OAAA,yBAmCCy/B,WAASC,WAAaC,cAAYC,QAClCH,WAASI,gBAAkBC,eAAaC,IAGlCl/B,EAAM,IAAIm/B,cAAY,CAC1Bx+B,MAAOxH,OAAOimC,WACdx+B,OAAQzH,OAAOkmC,YAAc,IAC7BC,WAAW,EACXC,aAAa,IAEfx6B,EAAKy6B,sBAAsB,aAAcx/B,EAAIy/B,MAEvCx/B,EAAW,IAAIy/B,IAAS,CAC5BC,YAAa3/B,EAAIqmB,OAAO1lB,MACxBi/B,aAAc5/B,EAAIqmB,OAAOzlB,OACzBi/B,cAAc,IAEhB7/B,EAAI6M,MAAMjN,SAASK,GAEnBA,EACG6/B,KAAK,CAAEC,UAAW,MAAOC,OAAO,IAChCA,QACAC,WAAW,CAAEC,SAAU,GAAIjnC,MAAO,KAE/B0kC,EAAe,IAAI+B,IAAS,CAChCC,YAAa3/B,EAAIqmB,OAAO1lB,MACxBi/B,aAAc5/B,EAAIqmB,OAAOzlB,OACzBu/B,WAAY,KACZC,YAAa,MAEfpgC,EAAI6M,MAAMjN,SAAS+9B,GAjEpB5+B,EAAArJ,KAAA,GAmEOirB,GAAiBpc,GAnExB,eAqEOq5B,EAAa,IAAIpyB,GAAWjH,GArEnCxF,EAAArJ,KAAA,GAsEOkoC,EAAW34B,OAtElB,eAwEOlP,EAAe,IAAIkV,GAAa1G,GAxEvCxF,EAAArJ,KAAA,GAyEOK,EAAakP,OAzEpB,eA0EC7R,QAAQE,IAAR,4BAEMmR,EAAc,IAAIiiB,GAAYniB,GA5ErCxF,EAAArJ,KAAA,GA6EO+O,EAAYQ,OA7EnB,WA8EC7R,QAAQE,IAAR,2BAEMgL,EAAe,IAAI4qB,GAAa3kB,GAChCmY,EAAe,IAAIqL,GAAaxjB,EAAIxO,EAAamE,gBAEjDsK,EAAY,IAAIya,GAAUvC,GAC1BmhB,EAAoB,IAAI1tB,GAC5B5L,EACAxO,EACAuI,GAEIyB,EAAiB,IAAI1B,GAAe4B,EAAU49B,GAE9CC,EAAa,IAAIx5B,GACrBC,EACAC,EACAzE,EACAC,EACAC,EACAlK,EACA0O,GAGIs5B,EAAgBsC,YAAkB,QAClCrC,EAAMqC,YAAkB,OACxBpC,EAAgBoC,YAAkB,aAClCnC,EAAamC,YAAkB,UACf,OAAlBtC,EAzGL,CAAAh/B,EAAArJ,KAAA,gBAAAqJ,EAAArJ,KAAA,GA0GSooC,EAAWwC,WAAWvC,GA1G/B,QA2GGJ,EAAa98B,SAAU,EA3G1B9B,EAAArJ,KAAA,qBA4GoB,OAARsoC,EA5GZ,CAAAj/B,EAAArJ,KAAA,gBA6GGtC,QAAQmJ,KAAR,cAAAzQ,OAA2BkyC,EAA3B,cACM9Z,EAAc,IAAItX,GAAY+wB,EAAcr/B,GAC5CgjB,EAAgB,IAAI2C,GAAc1f,EAAI2f,EAAazf,GA/G5D1F,EAAArJ,KAAA,GAgHS4rB,EAAcM,aAAaoc,GAhHpC,QAAAj/B,EAAArJ,KAAA,qBAiH8B,OAAlBuoC,EAjHZ,CAAAl/B,EAAArJ,KAAA,gBAkHGtC,QAAQE,IAAR,wBAAAxH,OAAoCmyC,EAApC,OAlHHl/B,EAAAmiB,GAmHyB9V,KAnHzBrM,EAAArJ,KAAA,GAoHW6O,EAAG8G,wBAAwB,oBApHtC,eAAAtM,EAAAoiB,GAAApiB,EAAAS,KAmHSmG,EAnHT5G,EAAAmiB,GAmH8B5V,MAnH9B8V,KAAAriB,EAAAmiB,GAAAniB,EAAAoiB,IAsHSgd,EAAoB,IAAIz4B,GAC5BC,EACArH,GAxHLS,EAAArJ,KAAA,GA2H2ByoC,EAAkBh2B,aAAa81B,GA3H1D,QA2HSl3B,EA3HThI,EAAAS,KA6HmB,EACC,EAEXG,EAASoH,EAHC,GAGkBkB,QAFjB,GAGXC,EAASnB,EAJC,GAIkBmB,OAClCvI,EAAOmI,MAAO,EACM,YAAhBI,EAAOH,OACLq2B,EAAM,EACVz+B,EAAO4gC,OAAS,WACdnC,IACAhrC,QAAQE,IAAI8qC,EAAKl2B,EAAOb,UACpB+2B,IAAQl2B,EAAOb,WACjB1H,EAAOmI,MAAO,KAKpB7H,EAASL,SAASD,GAClBA,EAAO2I,OA/IVvJ,EAAArJ,KAAA,qBAgJ2B,OAAfwoC,EAhJZ,CAAAn/B,EAAArJ,KAAA,iBAiJGtC,QAAQmJ,KAAR,qBAAAzQ,OAAkCoyC,EAAlC,OAjJHn/B,EAAArJ,KAAA,GAkJ4BgnB,EAAa8jB,qBAAqBtC,GAlJ9D,QAqJG,IAHM3d,EAlJTxhB,EAAAS,KAoJSyd,EAAkB,IAChBsD,EAAWrD,OACjBD,EAAOzX,KAAK+W,GAAMY,WAAWoD,IAtJlC,OAwJGntB,QAAQC,MAAM4pB,GAER5mB,EAAS4d,GACbgJ,EAAO/wB,KAAK,SAAAmxB,GAAK,MAAI,CAAC,SAAU,SAAU,UAAUC,SAASD,EAAM/sB,QAChE3C,MAEL+uB,EAAae,gBAAgBpnB,EAAQ,CACnC4mB,EAAO/wB,KAAK,SAAAmxB,GAAK,MAAmB,cAAfA,EAAM/sB,SAE7B+F,EAAOa,SAAW,IAAID,QAAM,EAAG,GAC/BZ,EAAOU,aAAe,IAAIwY,YAAU,EAAG,EAAGlZ,EAAOvM,KAAK0M,EAAGH,EAAOvM,KAAK2M,GAErEknC,EAAa98B,SAAU,EApK1B9B,EAAArJ,KAAA,IAqKSqK,EAAevB,OAAO,CAACnI,IArKhC,SAAA0I,EAAArJ,KAAA,0BAwKSwuB,EAAc,IAAItX,GAAY+wB,EAAcr/B,IAC5CgjB,EAAgB,IAAI2C,GAAc1f,EAAI2f,EAAazf,IAC3CZ,GAAG,YAAjB,eAAAtJ,EAAAijC,GAAA9+B,mBAAAC,KAA8B,SAAAM,EAAOwkB,GAAP,OAAA/kB,mBAAAI,KAAA,SAAAI,GAAA,cAAAA,EAAAF,KAAAE,EAAAxJ,MAAA,cAAAwJ,EAAAxJ,KAAA,EACtBooC,EAAW74B,KAAKwe,GADM,OAE5Bka,EAAa98B,SAAU,EAFK,wBAAA3B,EAAAG,SAAAJ,MAA9B,gBAAAY,GAAA,OAAAtF,EAAAgF,MAAA3V,KAAAoG,YAAA,IA1KH+O,EAAArJ,KAAA,IA8KS4rB,EAAcM,aAAa,aA9KpC,0BAAA7iB,EAAAM,SAAAT,KAAD4+B,meC9BA,IAAIiD,aAEG,SAAe5O,aAAtB,OAAA6O,YAAAnhC,MAAA3V,KAAAoG,+FAAO,SAAAiP,IAAA,OAAAP,mBAAAI,KAAA,SAAAI,GAAA,cAAAA,EAAAF,KAAAE,EAAAxJ,MAAA,WACD+qC,aADC,CAAAvhC,EAAAxJ,KAAA,eAAAwJ,EAAAC,OAAA,SAEIshC,cAFJ,cAAAvhC,EAAAxJ,KAAA,EAKgBirC,eALhB,cAKLF,aALKvhC,EAAAM,KAAAN,EAAAxJ,KAAA,EAOC,IAAI3L,QAAQ,SAACC,EAASC,GAC1Bw2C,aAAa,CACXzwC,UAAW,CAAC,YACZ0iC,eAAgB1oC,MAVf,cAAAkV,EAAAC,OAAA,SAcEshC,cAdF,wBAAAvhC,EAAAG,SAAAJ,sCAiBQ0hC,kJAAf,SAAA/hC,WAAA,IAAA+yB,OAAA,OAAAjzB,mBAAAI,KAAA,SAAA8hC,UAAA7hC,WAAA,cAAAA,UAAAC,KAAAD,UAAArJ,MAAA,UACEtC,QAAQE,IAAI,kBAGU,oBAAX6F,OAJb,CAAA4F,UAAArJ,KAAA,eAAAqJ,UAAArJ,KAAA,EAKmBmrC,sBALnB,OAKIlP,OALJ5yB,UAAAS,KAAAT,UAAArJ,KAAA,eAUIi8B,OAASmP,KAAK,UAALA,CACPC,UAAY,8CAXlB,cAcE3tC,QAAQE,IAAI,2BAddyL,UAAAI,OAAA,SAeSwyB,QAfT,yBAAA5yB,UAAAM,SAAAT,0DAkBeiiC,8KAAf,SAAA9e,IAAA,OAAArjB,mBAAAI,KAAA,SAAAkjB,GAAA,cAAAA,EAAAhjB,KAAAgjB,EAAAtsB,MAAA,cAAAssB,EAAA7iB,OAAA,SACS,IAAIpV,QAAa,SAACC,EAASC,GAChC,IAAM+kB,EAAW,WACf,IAAMgyB,EAAcC,KAAaD,WAC7BA,EACFh3C,EAAQg3C,GAER/2C,EAAO,2BAILy0C,EAAOnwC,SAAS2yC,qBAAqB,QAAQ,GAC7CC,EAAS5yC,SAASC,cAAc,UACtC2yC,EAAO7wC,KAAO,kBACd6wC,EAAOnwB,IAAM,YACZmwB,EAAeC,mBAAqBpyB,EACrCmyB,EAAOx0C,OAASqiB,EAEhB0vB,EAAK5vC,YAAYqyC,MAlBrB,wBAAAnf,EAAA3iB,SAAA0iB,uqBCnCqBz1B,aAUnB,SAAAA,EAAmBqB,gGAAkBhE,CAAAC,KAAA0C,GAAA1C,KAH7BmZ,SAG6B,EAAAnZ,KAFpB+D,UAEoB,EACnC/D,KAAKmZ,IAAM,EACXnZ,KAAK+D,KAAOA,uGAXoB6rC,wGACbA,EAAIqB,MAAM,4BAAvBltC,2BAEC,IAAIrB,EAAOqB,wTAgBlB,OAAO/D,KAAKmZ,iCAGFA,GACVnZ,KAAKmZ,IAAMA,qCAGK9S,GAGhB,IAFA,IAAIpD,EAAS,GACTuvB,GAAO,EACJnsB,KAAU,CACf,IAAMoxC,EAAYz3C,KAAK6nB,QACnB2K,GAAsB,IAAdilB,EACVjlB,GAAO,EAGTvvB,GAAUuoC,OAAOC,aAAagM,GAGhC,OAAOx0C,iDAGqBoD,GAE5B,IADA,IAAIpD,EAAS,GACNoD,KACLpD,GAAUuoC,OAAOC,aAAazrC,KAAK6nB,SAGrC,OAAO5kB,+BAGGoD,GAAkC,IAAlBnG,EAAkBkG,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAH,EACzCC,GAAUnG,EAEV,IADA,IAAM+C,EAAS,GACRoD,EAAS,GACdpD,EAAO2Y,KAAK5b,KAAK03C,WAAWx3C,IAC5BmG,GAAUnG,EAEZ,OAAO+C,gCAGIoD,GACX,IAAMtC,EAAO/D,KAAK+D,KAAK4tB,MAAM3xB,KAAKmZ,IAAKnZ,KAAKmZ,IAAM9S,GAElD,OADArG,KAAKmZ,KAAO9S,EACLtC,mCAIP,OAAO/D,KAAK03C,WAAW,oCAIvB,OAAO13C,KAAK03C,WAAW,oCAIvB,OAAO13C,KAAK03C,WAAW,qCAIvB,OAAO13C,KAAK03C,WAAW,IAAM,mCAI7B,OAAO13C,KAAK03C,WAAW,mCAIvB,OAAO13C,KAAK+D,KAAK/D,KAAKmZ,qCAItB,OAAOnZ,KAAKmZ,MAAQnZ,KAAKqG,2CAIzB,OAAwB,IAAjBrG,KAAK6nB,2CAGKoH,GAEjB,IADA,IAAIhsB,EAAS,EACJge,EAAI,EAAGA,EAAIgO,EAAGhO,IACrBhe,GAAUjD,KAAK6nB,QAAL7X,KAAAiuB,IAAe,EAAU,EAAJhd,GAEjC,OAAOhe,iCAxFP,OAAOjD,KAAK+D,KAAKsC,sSCfA+qC,qIACXuG,SAAW,iEAEJ5zC,GAEb,IADA,IAAM6zC,EAAiB,IAAIC,EAAO9zC,EAAKsC,QAC9B4a,EAAI,EAAGA,EAAIld,EAAKsC,OAAQ4a,IAC/B22B,EAAe32B,GAAK,IAAMld,EAAK8jB,QAKjC,OAAOiwB,iBAAaF,EAAgB53C,KAAK23C,0CAG5B/zC,GAGb,IAFA,IAAMhB,EAAO,IAAIF,IAAOq1C,iBAAan0C,EAAS5D,KAAK23C,WAC7CK,EAAiB,IAAIH,EAAOj1C,EAAKyD,QAC9B4a,EAAI,EAAGA,EAAIre,EAAKyD,OAAQ4a,IAC/B+2B,EAAe/2B,GAAK,IAAMre,EAAKilB,QAGjC,OAAOmwB,iJCrBJ,SAASlzC,cAAcmK,KAK5B,IAJA,IAAMgpC,WAAa,MACf5Q,MAAQ,EACNhhC,OAAS4I,IAAI5I,OACfpD,OAAS,GACNokC,MAAQhhC,QAAQ,CACrB,IAAMsrB,MAAQ1iB,IAAIipC,SAAS7Q,MAAOr3B,KAAK+S,IAAIskB,MAAQ4Q,WAAY5xC,SAC/DpD,QAAUuoC,OAAOC,aAAa91B,MAAM,KAAMgc,OAC1C0V,OAAS4Q,WAIX,MAAyB,oBAAX1oC,OACV4oC,KAAKl1C,QACLi0C,KAAK,UAALA,CAAgB,OAAhBA,CAAwBj0C,QASvB,SAASwzC,kBAAkB90C,GAChC,IAAMy2C,EAAM7oC,OAAOo+B,SAASS,KAC5BzsC,EAAOA,EAAKo4B,QAAQ,UAAW,QAC/B,IACMse,EADQ,IAAI5E,OAAO,OAAS9xC,EAAO,qBACnB22C,KAAKF,GAC3B,OAAKC,EAGAA,EAAQ,GAGNE,mBAAmBF,EAAQ,GAAGte,QAAQ,MAAO,MAF3C,GAHA,KAQJ,SAAS+V,cAAcF,GAC5B,IAAM4I,EAAY5I,EAAItuC,OAAO,SAAAyxC,GAAY,OACtC,IAAMA,GAAcnxC,SAAS,WAEhC,GAAyB,IAArB42C,EAAUnyC,OACZ,OAAOupC,EAAI+D,OAAO6E,EAAU,GAAG72C,KAAKo4B,QAAQ,OAAQ,KAEtD,MAAM,IAAI93B,MAAM,uDAGX,SAASiW,YAAetL,EAAWC,GACxC,OAAO8S,MAAM/S,GACVyK,UAAKhV,GACL8B,IAAI,kBAAMwb,MAAM9S,GAAGwK,KAAK,QArD7BohC,oBAAAC,EAAAC,oBAAA,sBAAA7zC,gBAAA2zC,oBAAAC,EAAAC,oBAAA,sBAAAlC,oBAAAgC,oBAAAC,EAAAC,oBAAA,sBAAA7I,gBAAA2I,oBAAAC,EAAAC,oBAAA,sBAAAzgC","file":"app.51f4d94033ba936ebe3a.js","sourcesContent":["import Stream from \"./parsers/stream\";\nimport { uInt8ToBase64 } from \"./util/util\";\n\nconst Filer = require(\"filer.js\");\n\nexport default class FileSystem {\n  private filer: any;\n  constructor() {\n    this.filer = new Filer();\n  }\n\n  public async init(size: number) {\n    return new Promise((resolve, reject) =>\n      this.filer.init(\n        {\n          persistent: true,\n          size: size\n        },\n        resolve,\n        reject\n      )\n    );\n  }\n\n  public async create(filename: string | WebKitEntry) {\n    return new Promise((resolve, reject) =>\n      this.filer.create(filename, false, resolve, reject)\n    );\n  }\n\n  public async mkdir(foldername: string | WebKitEntry) {\n    return new Promise((resolve, reject) =>\n      this.filer.mkdir(foldername, false, resolve, reject)\n    );\n  }\n\n  public async ls(\n    directory: string | WebKitEntry,\n    filterByExtensions?: string\n  ): Promise<WebKitEntry[]> {\n    const entries = await (new Promise((resolve, reject) => {\n      this.filer.ls(directory, resolve, reject);\n    }) as Promise<WebKitEntry[]>);\n\n    if (!filterByExtensions) {\n      return entries;\n    }\n\n    const extensions = filterByExtensions.split(\"|\");\n    return entries.filter((entry: WebKitEntry) => {\n      return (\n        entry.isFile &&\n        extensions.some(extension => entry.name.endsWith(extension))\n      );\n    });\n  }\n\n  public async exists(entryOrPath: string | WebKitEntry) {\n    let path: string;\n    if ((entryOrPath as WebKitEntry).fullPath) {\n      path = (entryOrPath as WebKitEntry).fullPath;\n    } else {\n      path = entryOrPath as string;\n    }\n    if (!path.startsWith(\"/\")) {\n      throw new Error(\n        `exists() only works with absolute paths, \"${path}\" given.`\n      );\n    }\n    const parts = path.split(\"/\").filter(part => part !== \"\");\n    path = \"\";\n    for (const part of parts) {\n      path += \"/\";\n      const entries = await this.ls(path);\n      path += part;\n      if (entries.find(entry => entry.fullPath === path) === undefined) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  public async open(entryOrPath: string | WebKitEntry): Promise<File> {\n    return new Promise((resolve, reject) =>\n      this.filer.open(entryOrPath, resolve, reject)\n    ) as Promise<File>;\n  }\n\n  public async openAndGetContentAsText(entryOrPath: string | WebKitEntry) {\n    return this.getTextContentFromFile(await this.open(entryOrPath));\n  }\n\n  public async openAndGetContentAsStream(\n    entryOrPath: string | WebKitEntry\n  ): Promise<Stream> {\n    return new Stream(\n      await this.getUint8ContentFromFile(await this.open(entryOrPath))\n    );\n  }\n\n  public async openAndGetContentAsUint8Array(\n    entryOrPath: string | WebKitEntry\n  ): Promise<Uint8Array> {\n    return this.getUint8ContentFromFile(await this.open(entryOrPath));\n  }\n\n  public async getTextContentFromFile(file: File): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.onload = event => {\n        if (fileReader.result !== null) {\n          resolve(fileReader.result as string);\n        } else {\n          reject();\n        }\n      };\n      fileReader.onerror = event => {\n        reject();\n      };\n      fileReader.readAsText(file);\n    });\n  }\n\n  public async getUint8ContentFromFile(file: File): Promise<Uint8Array> {\n    return new Promise<Uint8Array>((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.onload = event => {\n        if (fileReader.result !== null) {\n          resolve(new Uint8Array(fileReader.result as ArrayBuffer));\n        } else {\n          reject();\n        }\n      };\n      fileReader.onerror = event => {\n        reject();\n      };\n      fileReader.readAsArrayBuffer(file);\n    });\n  }\n\n  public async df() {\n    return new Promise((resolve, reject) => {\n      this.filer.df(\n        (used: number, free: number, cap: number) =>\n          resolve({ used: used, free: free, cap: cap }),\n        reject\n      );\n    });\n  }\n\n  public async write(pathOrEntry: string | WebKitEntry, content: any) {\n    return new Promise((resolve, reject) =>\n      this.filer.write(pathOrEntry, { data: content }, resolve, reject)\n    );\n  }\n\n  public async rm(pathOrEntry: string | WebKitEntry) {\n    return new Promise((resolve, reject) =>\n      this.filer.rm(pathOrEntry, resolve, reject)\n    );\n  }\n\n  public async rmRoot() {\n    const entries = await this.ls(\"/\");\n    return Promise.all(entries.map(entry => this.rm(entry.fullPath)));\n  }\n\n  public async download(pathOrEntry: string | WebKitEntry) {\n    let files;\n    try {\n      files = await this.ls(pathOrEntry);\n    } catch (e) {\n      return this.downloadFile(pathOrEntry);\n    }\n    return this.downloadDirectory(files);\n  }\n\n  private async downloadFile(pathOrEntry: string | WebKitEntry) {\n    const fileName =\n      typeof pathOrEntry === \"string\" ? pathOrEntry : pathOrEntry.fullPath;\n\n    const content = await this.openAndGetContentAsUint8Array(pathOrEntry);\n    const element = document.createElement(\"a\");\n    element.setAttribute(\n      \"href\",\n      `data:application/json;base64,${uInt8ToBase64(content)}`\n    );\n    element.setAttribute(\"download\", fileName);\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n  private async downloadDirectory(files: WebKitEntry[]) {\n    for (const file of files) {\n      await this.download(file);\n    }\n  }\n}\n","/**\n * Based on the MIT-licensed browser-assert NPM package.\n * Copyright (c) 2015 Social Ally\n */\nexport default function assert(expr: any, message?: string) {\n  if (!Boolean(expr)) {\n    throw new Error(message || \"unknown assertion error\");\n  }\n}\n","import { Map } from \"immutable\";\nimport { defaultTimers, GameState } from \"../game\";\n\nexport const TICK = \"TICK\";\nexport const DONATE_MONEY = \"DONATE_MONEY\";\nexport const SET_SIMULATION_SPEED = \"SET_SIMULATION_SPEED\";\nexport const ADD_MONEY = \"ADD_MONEY\";\nexport const UPDATE_PRODUCER = \"UPDATE_PRODUCER\";\n\nfunction inc(\n  counter: number,\n  max: number,\n  interval: number = 10,\n  gameTime: number = 0\n) {\n  if (gameTime % interval !== 0) {\n    return counter;\n  }\n  counter++;\n  if (counter >= max) {\n    counter = 0;\n  }\n  return counter;\n}\n\nexport function timerReducer(\n  state: GameState[\"timers\"] = defaultTimers,\n  action: any\n): GameState[\"timers\"] {\n  switch (action.type) {\n    case TICK:\n      const newTimeGame = state.timeGame + 1;\n      return {\n        ...state,\n        timeGame: newTimeGame,\n        cntCity: inc(state.cntCity, 8, 100, newTimeGame),\n        cntIsland: inc(state.cntIsland, 8, 100, newTimeGame),\n        cntShipyard: inc(state.cntShipyard, 8, 10, newTimeGame),\n        cntMilitary: inc(state.cntMilitary, 8, 10, newTimeGame),\n        cntProduction: inc(state.cntProduction, 8, 10, newTimeGame)\n      };\n    case SET_SIMULATION_SPEED:\n      return { ...state, simulationSpeed: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport function playerReducer(\n  state: GameState[\"players\"] = {},\n  action: any\n): GameState[\"players\"] {\n  switch (action.type) {\n    case DONATE_MONEY:\n      const payload = action.payload;\n      return {\n        ...state,\n        [payload.fromPlayer]: {\n          ...state[payload.fromPlayer],\n          money: state[payload.fromPlayer].money - payload.amount\n        },\n        [payload.toPlayer]: {\n          ...state[payload.toPlayer],\n          money: state[payload.toPlayer].money + payload.amount\n        }\n      };\n    case ADD_MONEY:\n      const playerId = action.payload.playerId;\n      const money = action.payload.money;\n      return {\n        ...state,\n        [playerId]: {\n          ...state[playerId],\n          money: state[playerId].money + money\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nexport function producerReducer(\n  state: GameState[\"producers\"] = Map(),\n  action: any\n): GameState[\"producers\"] {\n  switch (action.type) {\n    case UPDATE_PRODUCER:\n      const { id, patch } = action.payload;\n      return state.mergeIn([id], patch);\n    default:\n      return state;\n  }\n}\n","import { Castle } from \"./castle\";\nimport { City } from \"./city\";\nimport { Island } from \"./island\";\nimport { Kontor } from \"./kontor\";\nimport { Player } from \"./player\";\nimport { Producer } from \"./producer\";\nimport { Ship } from \"./ship\";\nimport { Soldier } from \"./soldier\";\nimport { Task } from \"./task\";\nimport { Timers } from \"./timers\";\nimport { Trader } from \"./trader\";\n\nexport type Rotation4 = 0 | 1 | 2 | 3;\nexport type Rotation8 = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\nexport enum SimulationSpeed {\n  Paused = 0,\n  Default = 1,\n  Slow = Default,\n  Medium = 2,\n  Fast = 4,\n  SuperFast = 8\n}\n\nexport default class World {\n  constructor(\n    public readonly islands: Island[],\n    public readonly players: Player[],\n    public readonly tasks: Task[],\n    public readonly gameName: string,\n    public readonly soldiers: Soldier[],\n    public readonly ships: Ship[],\n    public readonly kontors: Kontor[],\n    public readonly castles: Castle[],\n    public readonly cities: City[],\n    public readonly trader: Trader | null,\n    public readonly timers: Timers,\n    public readonly producers: Producer[]\n  ) {\n    console.table(tasks);\n    console.log(gameName);\n    console.table(islands);\n    console.table(players);\n    console.table(soldiers);\n    console.table(ships);\n    console.table(kontors);\n    console.table(castles);\n    console.table(cities);\n    console.log(trader);\n    console.log(timers);\n    console.table(producers);\n  }\n}\n","import { Producer, producerFromSaveGame } from \"../world/producer\";\nimport { SimulationSpeed } from \"../world/world\";\nimport {\n  ADD_MONEY,\n  DONATE_MONEY,\n  SET_SIMULATION_SPEED,\n  TICK,\n  UPDATE_PRODUCER\n} from \"./reducers\";\n\nexport function createTick() {\n  return {\n    type: TICK\n  };\n}\n\nexport function createDonateMoney(\n  fromPlayer: number,\n  toPlayer: number,\n  amount: number\n) {\n  return {\n    type: DONATE_MONEY,\n    payload: {\n      fromPlayer,\n      toPlayer,\n      amount\n    }\n  };\n}\n\nexport function createSetSimulationSpeed(newSpeed: SimulationSpeed) {\n  return {\n    type: SET_SIMULATION_SPEED,\n    payload: newSpeed\n  };\n}\n\nexport function createAddMoney(playerId: number, money: number) {\n  return {\n    type: ADD_MONEY,\n    payload: {\n      playerId,\n      money\n    }\n  };\n}\n\nexport function createUpdateProducer(\n  producerId: number,\n  patch: Partial<Producer>\n) {\n  return {\n    type: UPDATE_PRODUCER,\n    payload: {\n      id: producerId,\n      patch: patch\n    }\n  };\n}\n","import { Map as ImmutableMap, Record } from \"immutable\";\nimport { Key, KeyboardManager } from \"pixi-keyboard\";\nimport { Point } from \"pixi.js\";\nimport { createStore, Store } from \"redux\";\nimport { batchActions, enableBatching } from \"redux-batched-actions\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { combineReducers } from \"redux-immutable\";\nimport { Observable } from \"rxjs/internal/Observable\";\nimport { distinctUntilChanged, filter, map } from \"rxjs/operators\";\nimport assert from \"../util/assert\";\nimport ConfigLoader from \"./config-loader\";\nimport GameRenderer from \"./game-renderer\";\nimport {\n  createAddMoney,\n  createSetSimulationSpeed,\n  createTick,\n  createUpdateProducer\n} from \"./logic/action-creators\";\nimport * as actionCreators from \"./logic/action-creators\";\nimport {\n  playerReducer,\n  producerReducer,\n  TICK,\n  timerReducer\n} from \"./logic/reducers\";\nimport { City } from \"./world/city\";\nimport { Island } from \"./world/island\";\nimport { Kontor } from \"./world/kontor\";\nimport { Player } from \"./world/player\";\nimport { Producer } from \"./world/producer\";\nimport { Task } from \"./world/task\";\nimport { Timers } from \"./world/timers\";\nimport World, { SimulationSpeed } from \"./world/world\";\n\ninterface MapById<T> {\n  [k: string]: T;\n}\n\nexport const defaultTimers = {\n  simulationSpeed: 0,\n  cntCity: 0,\n  cntIsland: 0,\n  cntShipyard: 0,\n  cntMilitary: 0,\n  cntProduction: 0,\n  cntSettlers: [],\n  cntGrowth: [],\n  timeCity: 0,\n  timeIsland: 0,\n  timeShipyard: 0,\n  timeMilitary: 0,\n  timeProduction: 0,\n  timeGoodToolsCnt: 0,\n  timeGoodToolsMax: 0,\n  timeGame: 0,\n  noErzOutFlg: 0,\n  tutorFlg: 0,\n  aiLevel: 0,\n  missionNumber: 0,\n  gameId: 0,\n  cityNameNumber: 0,\n  timeNextDrought: 0,\n  timePirateSec: 0,\n  missionSubNumber: 0,\n  shipMax: 0,\n  timeNextVulcano: 0,\n  cntVulcano: 0,\n  timeSettlers: [],\n  timeGrowth: [],\n  enableTrader: false,\n  bigIronRunsOut: false,\n  enableDroughts: false,\n  enablePirate: false,\n  enableVulcano: false\n};\n\nconst GameStateFactory = Record<{\n  players: MapById<Player>;\n  islands: MapById<Island>;\n  tasks: MapById<Task>;\n  cities: City[];\n  kontors: Kontor[];\n  producers: ImmutableMap<number, Producer>;\n  timers: Timers & { simulationSpeed: SimulationSpeed };\n}>({\n  players: {},\n  islands: {},\n  tasks: {},\n  cities: [],\n  kontors: [],\n  producers: ImmutableMap<number, Producer>(),\n  timers: defaultTimers\n});\n\nexport type GameState = ReturnType<typeof GameStateFactory>;\n\nfunction getState$<T>(store: Store<T>) {\n  return new Observable<T>(observer => {\n    observer.next(store.getState());\n    return store.subscribe(() => {\n      observer.next(store.getState());\n    });\n  });\n}\n\nexport default class Game {\n  private store: Store<GameState>;\n\n  private timerId: number | null;\n  private readonly myPlayerId: number = 0;\n  private readonly keyboardManager: KeyboardManager;\n\n  constructor(\n    private readonly gameRenderer: GameRenderer,\n    private readonly configLoader: ConfigLoader\n  ) {\n    this.keyboardManager = new KeyboardManager();\n    this.keyboardManager.enable();\n    this.setupHotKeys();\n  }\n\n  public async begin(world: World) {\n    const producers = ImmutableMap(\n      world.producers.map((producer, idx) => [idx, producer])\n    );\n\n    const initialState: GameState = GameStateFactory({\n      players: this.mapArrayById(world.players),\n      islands: this.mapArrayById(world.islands),\n      tasks: this.mapArrayById(world.tasks),\n      cities: world.cities,\n      kontors: world.kontors,\n      producers: producers,\n      timers: { ...world.timers, simulationSpeed: SimulationSpeed.Paused }\n    });\n\n    this.store = createStore(\n      enableBatching(\n        combineReducers({\n          players: playerReducer,\n          islands: (state: GameState[\"islands\"] = {}) => state,\n          timers: timerReducer,\n          tasks: (state: GameState[\"tasks\"] = {}) => state,\n          cities: (state: GameState[\"cities\"] = []) => state,\n          kontors: (state: GameState[\"kontors\"] = []) => state,\n          producers: producerReducer\n        })\n      ),\n      initialState,\n      devToolsEnhancer({ actionsBlacklist: [TICK], actionCreators })\n    );\n\n    this.watchSimulationSpeed();\n    this.watchTicksForUpkeep();\n    this.watchTicksForProducing();\n    getState$(this.store)\n      .pipe(\n        map(state => state.players[0].money),\n        distinctUntilChanged()\n      )\n      .subscribe(money => {\n        this.gameRenderer.setMoney(money);\n      });\n\n    this.store.dispatch(createSetSimulationSpeed(SimulationSpeed.Default));\n\n    this.keyboardManager.enable();\n\n    await this.gameRenderer.begin(this.myPlayerId);\n  }\n\n  public getFieldAtIsland = (island: Island, islandPos: Point) => {\n    return island.fields[islandPos.x][islandPos.y];\n  };\n\n  public getFieldAt = (globalPos: Point) => {\n    const island = Object.values(this.store.getState().islands).find(each =>\n      each.positionRect.contains(globalPos.x, globalPos.y)\n    );\n    if (!island) {\n      return null;\n    }\n    const islandPos = new Point(\n      globalPos.x - island.position.x,\n      globalPos.y - island.position.y\n    );\n\n    return this.getFieldAtIsland(island, islandPos);\n  };\n\n  private mapArrayById<T extends { id: number }>(arr: T[]) {\n    return arr.reduce((objectMap: { [k: string]: T }, obj: T) => {\n      objectMap[obj.id] = obj;\n      return objectMap;\n    }, {});\n  }\n\n  private watchSimulationSpeed() {\n    getState$(this.store)\n      .pipe(\n        map(state => state.timers.simulationSpeed),\n        distinctUntilChanged()\n      )\n      .subscribe(speed => {\n        if (this.timerId) {\n          clearInterval(this.timerId);\n        }\n        if (speed !== SimulationSpeed.Paused) {\n          this.timerId = window.setInterval(this.tick, 100 / speed);\n        }\n      });\n  }\n\n  private watchTicksForUpkeep() {\n    getState$(this.store)\n      .pipe(\n        map(state => state.timers.timeGame),\n        filter(time => time % 100 === 0),\n        distinctUntilChanged()\n      )\n      .subscribe(() => {\n        // console.profile(\"upkeep\");\n        console.log(\"upkeep calculation\");\n        const upkeeps = this.calculateUpkeeps();\n        for (const playerId of Object.keys(upkeeps)) {\n          // This is how Anno 1602 does it, see\n          // https://www.annozone.de/Charlie/Cod/numerik.html\n          const upkeep = Math.floor(upkeeps[playerId] / 6);\n          this.store.dispatch(createAddMoney(parseInt(playerId, 10), -upkeep));\n        }\n        // console.profileEnd(\"upkeep\");\n      });\n  }\n\n  private watchTicksForProducing() {\n    getState$(this.store)\n      .pipe(\n        filter(state => state.timers.timeGame % 10 === 0),\n        distinctUntilChanged((a, b) => a.timers.timeGame === b.timers.timeGame)\n      )\n      .subscribe(state => {\n        console.log(\"update producers\");\n        const fieldData = this.configLoader.getFieldData();\n        const actions = state.producers.entrySeq().flatMap(([id, producer]) => {\n          if (!producer.active) {\n            return [];\n          }\n          const island = state.islands[producer.islandId];\n          const buildingId = this.getFieldAtIsland(island, producer.position)!\n            .fieldId;\n          const fieldConfig = fieldData.get(buildingId)!;\n          assert(fieldConfig);\n\n          if (producer.producedGood === 128 && producer.timer === 1) {\n            // We have finished producing!\n            const canProduceEvenMore =\n              producer.firstGoodStock >= 2 * fieldConfig.production.amount1 &&\n              producer.secondGoodStock >= 2 * fieldConfig.production.amount2 &&\n              producer.stock < fieldConfig.production.maxStock - 1;\n            const newStock = producer.stock + 1;\n\n            this.gameRenderer.onProduced(island, producer.position, newStock);\n            return [\n              createUpdateProducer(id, {\n                stock: newStock,\n                timer: canProduceEvenMore\n                  ? fieldConfig.production.interval\n                  : 11,\n                firstGoodStock:\n                  producer.firstGoodStock - fieldConfig.production.amount1,\n                secondGoodStock:\n                  producer.secondGoodStock - fieldConfig.production.amount2,\n                producedGood: canProduceEvenMore ? 128 : 0\n              })\n            ];\n          } else if (\n            producer.producedGood === 0 &&\n            (producer.timer === 1 || state.timers.cntProduction === 0)\n          ) {\n            // We are not currently producing something but should now check\n            // whether we can start producing something new.\n            const canProduce =\n              producer.firstGoodStock >= fieldConfig.production.amount1 &&\n              producer.secondGoodStock >= fieldConfig.production.amount2 &&\n              producer.stock < fieldConfig.production.maxStock;\n            return [\n              createUpdateProducer(id, {\n                timer: canProduce\n                  ? fieldConfig.production.interval\n                  : producer.timer <= 1\n                  ? 11\n                  : producer.timer - 1,\n                producedGood: canProduce ? 128 : 0\n              })\n            ];\n          } else {\n            return [\n              createUpdateProducer(id, {\n                // The timer never reaches 0.\n                timer: producer.timer <= 1 ? 11 : producer.timer - 1\n              })\n            ];\n          }\n        });\n        this.store.dispatch(batchActions(actions.toArray()));\n      });\n  }\n\n  private calculateUpkeeps() {\n    const state = this.store.getState();\n    const upkeeps: { [k: string]: number } = Object.keys(state.players).reduce(\n      (obj: { [k: string]: number }, id: string) => {\n        obj[id] = 0;\n        return obj;\n      },\n      {}\n    );\n\n    const islands = state.islands;\n    state.producers.forEach(producer => {\n      const island = islands[producer.islandId];\n      const field = island.fields[producer.position.x][producer.position.y]!;\n      const buildingId = field.fieldId;\n      const playerId = field.playerId;\n      assert(buildingId !== 0xffff);\n      assert(playerId < 7);\n      const fieldConfig = this.configLoader.getFieldData().get(buildingId)!;\n      assert(fieldConfig);\n\n      upkeeps[playerId] +=\n        fieldConfig.production.upkeep[producer.active ? \"active\" : \"inactive\"];\n    }, this);\n\n    return upkeeps;\n  }\n\n  private setupHotKeys() {\n    const showTaskKey = Key.F1;\n    this.keyboardManager.onKeyPressedWithPreventDefault(showTaskKey, () => {\n      const state = this.store.getState();\n      const player = state.players[this.myPlayerId];\n      const assignedTask = state.tasks[player.assignedTaskId];\n      if (assignedTask !== undefined) {\n        console.info(assignedTask.text);\n      } else {\n        console.info(\"It appears like you have no task :/\");\n      }\n    });\n\n    const zoomKeys: Array<{ key: number; zoom: 1 | 2 | 3 }> = [\n      { key: Key.F2, zoom: 1 },\n      { key: Key.F3, zoom: 2 },\n      { key: Key.F4, zoom: 3 }\n    ];\n    for (const zoomKey of zoomKeys) {\n      this.keyboardManager.onKeyPressedWithPreventDefault(zoomKey.key, () =>\n        this.gameRenderer.zoom(zoomKey.zoom)\n      );\n    }\n\n    const speedKeys = [\n      { keys: [Key.PAUSE], speed: SimulationSpeed.Paused },\n      { keys: [Key.F5], speed: SimulationSpeed.Slow },\n      { keys: [Key.F6], speed: SimulationSpeed.Medium },\n      { keys: [Key.F7], speed: SimulationSpeed.Fast },\n      { keys: [Key.SHIFT, Key.F8], speed: SimulationSpeed.SuperFast }\n    ];\n    for (const speedKey of speedKeys) {\n      this.keyboardManager.onKeysPressedWithPreventDefault(speedKey.keys, () =>\n        this.store.dispatch(createSetSimulationSpeed(speedKey.speed))\n      );\n    }\n  }\n\n  private tick = () => {\n    this.store.dispatch(createTick());\n  };\n}\n","import { Container } from \"pixi.js\";\nimport IslandSpriteLoader from \"./island-sprite-loader\";\nimport { SpriteWithPosition } from \"./island-sprite-loader\";\nimport { Island } from \"./world/island\";\n\nexport const TILE_WIDTH = 64;\nexport const TILE_HEIGHT = 32;\nexport const LAND_OFFSET = -20;\n\nexport default class IslandRenderer {\n  constructor(\n    private world: Container,\n    private spriteLoader: IslandSpriteLoader\n  ) {}\n\n  public render = async (islands: Island[]) => {\n    await this.spriteLoader.init();\n    const islandSprites = await Promise.all(\n      islands.map(async island => this.spriteLoader.getIslandSprites(island))\n    );\n    console.log(\"Map sprites loaded.\");\n\n    islandSprites.forEach(spritesOfIsland =>\n      spritesOfIsland.forEach(row =>\n        row\n          .filter(sprite => sprite !== null)\n          .forEach(sprite => this.world.addChild(sprite!.sprite))\n      )\n    );\n    console.log(\"Map sprites drawn.\");\n\n    return islandSprites;\n  };\n}\n","import Viewport from \"pixi-viewport\";\nimport {\n  Application,\n  Container,\n  interaction,\n  Point,\n  Sprite,\n  Text,\n  Texture\n} from \"pixi.js\";\nimport { from, fromEvent, merge } from \"rxjs\";\nimport { auditTime } from \"rxjs/operators\";\nimport { make2DArray } from \"../util/util\";\nimport IslandRenderer, {\n  LAND_OFFSET,\n  TILE_HEIGHT,\n  TILE_WIDTH\n} from \"./island-renderer\";\nimport { SpriteWithPosition } from \"./island-sprite-loader\";\nimport { Island } from \"./world/island\";\nimport World from \"./world/world\";\n\nexport default class GameRenderer {\n  public static fieldPosToWorldPos(fieldPos: Point) {\n    const xx = fieldPos.x;\n    const yy = fieldPos.y;\n    const worldX = (xx - yy) * (TILE_WIDTH / 2);\n    const worldY = (xx + yy) * (TILE_HEIGHT / 2);\n    return new Point(worldX, worldY);\n  }\n\n  /**\n   * Converts PIXI world coordinates to isometric coordinates.\n   * Please note that these are *sea-level* coordinates. Use\n   * worldPosToFieldPosLand for *land-level* coordinates.\n   */\n  public static worldPosToFieldPos(worldPos: Point) {\n    const x =\n      (worldPos.x / (TILE_WIDTH / 2) + worldPos.y / (TILE_HEIGHT / 2)) / 2;\n    const y =\n      (worldPos.y / (TILE_HEIGHT / 2) - worldPos.x / (TILE_WIDTH / 2)) / 2;\n\n    return new Point(Math.round(x), Math.round(y) + 1);\n  }\n\n  public static worldPosToFieldPosLand(worldPos: Point) {\n    const adjustedWorldPos = new Point();\n    adjustedWorldPos.copyFrom(worldPos);\n    adjustedWorldPos.y -= LAND_OFFSET;\n\n    return this.worldPosToFieldPos(adjustedWorldPos);\n  }\n\n  private money: Text;\n  private readonly WIDTH = 500;\n  private readonly HEIGHT = 350;\n  private fields: Array<Array<Sprite | null>>;\n\n  constructor(\n    private readonly world: World,\n    private readonly islandRenderer: IslandRenderer,\n    private readonly app: Application,\n    private readonly viewport: Viewport\n  ) {\n    this.money = new Text(\"\", {\n      fontFamily: \"Arial\",\n      fontSize: 24,\n      fill: 0xff1010\n    });\n  }\n\n  public async begin(myPlayerId: number) {\n    this.debugControls();\n\n    this.viewport.removeChildren();\n\n    // Render islands\n    const spritesPerIsland = await this.islandRenderer.render(\n      this.world.islands\n    );\n\n    const fields = make2DArray<Sprite>(this.WIDTH, this.HEIGHT);\n    spritesPerIsland.forEach(spritesOfIsland =>\n      spritesOfIsland.forEach(row =>\n        row\n          .filter(sprite => sprite !== null)\n          .forEach(\n            sprite =>\n              (fields[sprite!.mapPosition.x][\n                sprite!.mapPosition.y\n              ] = sprite!.sprite)\n          )\n      )\n    );\n\n    // TODO: Hack to find the water texture.\n    let waterTexture: Texture | null = null;\n    for (let x = 0; x < this.WIDTH && !waterTexture; x++) {\n      for (let y = 0; y < this.HEIGHT; y++) {\n        if (fields[x][y]) {\n          waterTexture = fields[x][y]!.texture;\n          break;\n        }\n      }\n    }\n\n    // Fill in water between islands\n    fields.forEach((row, x) =>\n      row.forEach((field, y) => {\n        if (field === null) {\n          // TODO: This should be an animated sprite.\n          const sprite = new Sprite(waterTexture!);\n\n          const { x: worldX, y: worldY } = GameRenderer.fieldPosToWorldPos(\n            new Point(x, y)\n          );\n          // Set bottom left corner of sprite as origin.\n          sprite.anchor.set(0, 1);\n          sprite.x = worldX;\n          sprite.y = worldY;\n\n          fields[x][y] = sprite;\n          this.viewport.addChild(sprite);\n        }\n      })\n    );\n    this.fields = fields;\n\n    // Render ships\n    // ...\n\n    // Render soldiers\n    // ...\n\n    this.moveCameraToStartPosition(myPlayerId);\n\n    merge(\n      from([\"initial\"]),\n      fromEvent(this.viewport as any, \"zoomed\"),\n      fromEvent(this.viewport as any, \"moved\")\n    )\n      .pipe(auditTime(200))\n      .subscribe(this.cull);\n  }\n\n  public zoom(zoom: 1 | 2 | 3) {\n    const center = this.viewport.center;\n    this.viewport.scale.set(1.0 / zoom);\n    this.viewport.moveCenter(center.x, center.y);\n    this.cull();\n  }\n\n  // public onMove(listener: (viewport: Viewport) => void) {\n  //     new Observable<Viewport>((observer) => {\n  //         this.viewport.on(\"moved\", (viewport) => observer.next(viewport));\n  //     }).pipe(\n  //         debounceTime(1000),\n  //     ).subscribe(listener);\n  // }\n\n  public setMoney = (money: number) => {\n    this.money.text = `Money: ${money}`;\n  };\n\n  public onProduced(island: Island, position: Point, stock: number) {\n    console.log(\n      `Producer at island ${island.id} (${position.x}, ${\n        position.y\n      }) has now stock: ${stock}.`\n    );\n    const text = new Text(`Lager: ${stock}`, {\n      fontFamily: \"Arial\",\n      fontSize: 24,\n      fill: 0xff1010\n    });\n\n    const pos = GameRenderer.fieldPosToWorldPos(\n      new Point(island.position.x + position.x, island.position.y + position.y)\n    );\n    text.position.set(pos.x, pos.y);\n    this.viewport.addChild(text);\n  }\n\n  private cull = () => {\n    const viewportBounds = this.viewport.getVisibleBounds();\n\n    const topLeft = GameRenderer.worldPosToFieldPos(\n      new Point(viewportBounds.x - TILE_WIDTH, viewportBounds.y - TILE_HEIGHT)\n    );\n    const bottomRight = GameRenderer.worldPosToFieldPos(\n      new Point(\n        viewportBounds.x + viewportBounds.width + TILE_WIDTH,\n        // we need to add the height of the highest sprite in the game, so\n        // that it is still drawn even if it is below the viewport.\n        // TODO: Verify that 200 fits.\n        viewportBounds.y + viewportBounds.height + TILE_HEIGHT + 200\n      )\n    );\n\n    for (let x = 0; x < this.WIDTH; x++) {\n      for (let y = 0; y < this.HEIGHT; y++) {\n        const field = this.fields[x][y];\n        if (!field) {\n          continue;\n        }\n        field.visible =\n          x + y >= topLeft.x + topLeft.y &&\n          x - y >= topLeft.x - topLeft.y &&\n          x + y <= bottomRight.x + bottomRight.y &&\n          x - y <= bottomRight.x - bottomRight.y;\n      }\n    }\n  };\n\n  private debugControls() {\n    const debugContainer = new Container();\n\n    debugContainer.addChild(this.money);\n    const coordinates = new Text(\"\", {\n      fontFamily: \"Arial\",\n      fontSize: 24,\n      fill: 0xff1010\n    });\n    coordinates.y = 30;\n\n    const islandNumber = new Text(\"\", {\n      fontFamily: \"Arial\",\n      fontSize: 24,\n      fill: 0xff1010\n    });\n    islandNumber.y = 2 * 30;\n\n    const interactionManager: interaction.InteractionManager = this.app.renderer\n      .plugins.interaction;\n\n    const updatePosition = () => {\n      const pos = GameRenderer.worldPosToFieldPosLand(\n        this.viewport.toWorld(interactionManager.mouse.global)\n      );\n      coordinates.text = `x: ${pos.x}, y: ${pos.y}`;\n\n      const island = this.world.islands.find(each => {\n        return each.positionRect.contains(pos.x, pos.y);\n      });\n      if (island) {\n        islandNumber.text = `Island id: ${island.id}, x: ${pos.x -\n          island.position.x} y: ${pos.y - island.position.y}`;\n      } else {\n        islandNumber.text = `Island id: ?`;\n      }\n    };\n    updatePosition();\n    this.viewport.on(\"moved\", updatePosition);\n    this.viewport.on(\"wheel-scroll\", updatePosition);\n    interactionManager.on(\"pointermove\", updatePosition);\n\n    debugContainer.addChild(coordinates);\n    debugContainer.addChild(islandNumber);\n    this.viewport.parent.addChild(debugContainer);\n  }\n\n  private moveCameraToStartPosition(myPlayerId: number) {\n    const myKontor = this.world.kontors.find(\n      kontor => kontor.playerId === myPlayerId\n    );\n    if (myKontor !== undefined) {\n      const position = myKontor.position;\n      const kontorIsland = this.world.islands.find(\n        island => island.id === myKontor.islandId\n      )!;\n      this.moveTo(\n        new Point(\n          kontorIsland.position.x + position.x,\n          kontorIsland.position.y + position.y\n        )\n      );\n      return;\n    }\n    const myShip = this.world.ships.find(ship => ship.playerId === myPlayerId);\n    if (myShip !== undefined) {\n      this.moveTo(myShip.position);\n      return;\n    }\n    this.moveTo(new Point(500 / 2, 300 / 2));\n  }\n\n  private moveTo(point: Point) {\n    this.viewport.moveCenter(GameRenderer.fieldPosToWorldPos(point));\n  }\n}\n","import Viewport from \"pixi-viewport\";\nimport { Application } from \"pixi.js\";\nimport FileSystem from \"./filesystem\";\nimport ConfigLoader from \"./game/config-loader\";\nimport Game from \"./game/game\";\nimport GameRenderer from \"./game/game-renderer\";\nimport IslandRenderer from \"./game/island-renderer\";\nimport MusicPlayer from \"./game/music-player\";\nimport GAMParser from \"./parsers/GAM/gam-parser\";\n\nexport default class GameLoader {\n  constructor(\n    private readonly fs: FileSystem,\n    private readonly gamParser: GAMParser,\n    private readonly islandRenderer: IslandRenderer,\n    private readonly app: Application,\n    private readonly viewport: Viewport,\n    private readonly configLoader: ConfigLoader,\n    private readonly musicPlayer: MusicPlayer\n  ) {}\n\n  public async loadByName(gameName: string) {\n    const games = await this.loadSavesAndMissions();\n    const saveGame = games.find(\n      saveOrMission => saveOrMission.name === gameName\n    );\n    if (!saveGame) {\n      throw new Error(\n        `Could not find ${gameName}. The following files are available: ${games\n          .map(game => game.name)\n          .join(\", \")}`\n      );\n    }\n    await this.load(saveGame);\n  }\n\n  public async load(saveGame: WebKitEntry | string) {\n    const saveGameData = await this.fs.openAndGetContentAsStream(saveGame);\n    const world = await this.gamParser.getWorld(saveGameData);\n\n    const gameRenderer = new GameRenderer(\n      world,\n      this.islandRenderer,\n      this.app,\n      this.viewport\n    );\n\n    const gameLogic = new Game(gameRenderer, this.configLoader);\n    await gameLogic.begin(world);\n\n    this.musicPlayer.playAll();\n  }\n\n  private async loadSavesAndMissions() {\n    const saves = [];\n    try {\n      saves.push(...(await this.fs.ls(\"/saves\", \".gam\")));\n    } catch (e) {\n      // Ignore errors\n    }\n\n    const missions = [];\n    try {\n      missions.push(...(await this.fs.ls(\"/missions-original\", \".szs|.szm\")));\n      missions.push(...(await this.fs.ls(\"/missions-custom\", \".szs|.szm\")));\n    } catch (e) {\n      // Ignore errors\n    }\n    return saves.concat(missions);\n  }\n}\n","import * as Viewport from \"pixi-viewport\";\nimport { AnimatedSprite, Texture } from \"pixi.js\";\nimport SpriteLoader from \"../sprite-loader\";\nimport assert from \"../util/assert\";\n\ninterface AnimationConfig {\n  Kind: \"RANDOM\" | \"ENDLESS\" | \"JUMPTO\";\n  AnimOffs: number;\n  AnimAdd: number;\n  AnimAnz: number;\n  AnimSpeed: number;\n  AnimNr?: number | number[];\n  AnimRept?: number;\n  AnimSmp?: string | [string, number, number];\n  Rotate?: number;\n}\n\ninterface AnimationData {\n  nested_objects: {\n    ANIM: {\n      [k: string]: AnimationConfig;\n    };\n  };\n  Id: number;\n  Gfx: number;\n  Kind: string;\n  Stirbtime: number;\n  Speedtyp: number;\n  Nowalkani: number;\n  Rotate: number;\n  Worktime: number;\n  Posoffs: [number, number];\n  Fahnoffs: [number, number, number];\n  GfxCategory: string;\n  GfxCategoryMapped: string;\n  // + more\n}\n\nexport default class AnimationRenderer {\n  constructor(private animationData: any, private spriteLoader: SpriteLoader) {}\n\n  public async getAnimation(name: string) {\n    const animationData: AnimationData = this.animationData.objects.FIGUR.items[\n      name\n    ];\n    console.log(animationData);\n\n    if (Object.values(animationData.nested_objects).length === 0) {\n      throw new Error(\n        `Animation \"${name}\" does not include sufficient animation data.`\n      );\n    }\n    assert(animationData.nested_objects.ANIM);\n\n    const baseGfx = animationData.Gfx;\n    const baseFramesPerRotation = animationData.Rotate;\n    const rotations = baseFramesPerRotation === 0 ? 1 : 8;\n\n    assert(animationData.GfxCategoryMapped.startsWith(\"GFX\"));\n    const gfxFilename = animationData.GfxCategoryMapped.substr(\"GFX\".length);\n\n    const textures = await this.spriteLoader.getTextures(gfxFilename);\n\n    const animatedSprites: {\n      [k: string]: {\n        sprites: AnimatedSprite[];\n        config: AnimationConfig;\n      };\n    } = {};\n\n    for (const animIdx of Object.keys(animationData.nested_objects.ANIM)) {\n      const animatedSpritesForAnim: AnimatedSprite[] = [];\n\n      const animation = animationData.nested_objects.ANIM[animIdx];\n\n      const numSteps = animation.AnimAnz;\n      const speed = (1 / 60) * (1000.0 / animation.AnimSpeed);\n      const gfxPerStep = animation.AnimAdd;\n      const repeats = animation.AnimRept ? animation.AnimRept : 0;\n      const framesPerRotation = animation.Rotate\n        ? animation.Rotate\n        : baseFramesPerRotation;\n\n      for (let rotationIdx = 0; rotationIdx < rotations; rotationIdx++) {\n        let gfx =\n          baseGfx + animation.AnimOffs + rotationIdx * framesPerRotation;\n\n        const frames: Texture[] = [];\n\n        for (let step = 0; step < numSteps; step++) {\n          frames.push(textures.get(gfx)!);\n          gfx += gfxPerStep;\n        }\n\n        const animatedSprite = new AnimatedSprite(frames);\n        animatedSprite.loop = animation.Kind === \"ENDLESS\";\n        animatedSprite.animationSpeed = speed;\n\n        animatedSpritesForAnim.push(animatedSprite);\n      }\n\n      animatedSprites[animIdx] = {\n        sprites: animatedSpritesForAnim,\n        config: animation\n      };\n    }\n\n    return animatedSprites;\n  }\n\n  public async renderAnimation(name: string, game: Viewport) {\n    const animations = await this.getAnimation(name);\n\n    let y = 0;\n\n    for (const animIdx of Object.keys(animations)) {\n      const animatedSpritesForAnim = animations[animIdx].sprites;\n\n      let x = 0;\n      animatedSpritesForAnim.forEach(sprite => {\n        sprite.position.set(x, y);\n        x += sprite.width;\n        game.addChild(sprite);\n        sprite.play();\n      });\n      y += 50;\n    }\n  }\n}\n","import { AnimatedSprite, Point, Sprite, Texture } from \"pixi.js\";\nimport GameRenderer from \"./game-renderer\";\nimport { SpriteWithPosition } from \"./island-sprite-loader\";\nimport { Rotation4 } from \"./world/world\";\n\nexport type GroundFieldType =\n  | \"BODEN\"\n  | \"FLUSS\"\n  | \"FLUSSECK\"\n  | \"HANG\"\n  | \"HANGQUELL\"\n  | \"HANGECK\"\n  | \"STRAND\"\n  | \"STRANDMUND\"\n  | \"STRANDECKI\"\n  | \"STRANDECKA\"\n  | \"STRANDVARI\"\n  | \"BRANDUNG\"\n  | \"BRANDECK\"\n  | \"MEER\"\n  | \"FELS\"\n  | \"MUENDUNG\";\n\nexport type LandFieldType =\n  | GroundFieldType\n  | \"STRANDRUINE\"\n  | \"PIER\"\n  | \"WALD\"\n  | \"RUINE\"\n  | \"STRANDHAUS\"\n  | \"HAFEN\";\n\nexport type BuildingFieldType =\n  | \"GEBAEUDE\"\n  | \"HQ\" // Kontor\n  | \"STRASSE\"\n  | \"BRUECKE\"\n  | \"PLATZ\"\n  | \"WMUEHLE\"\n  | \"MINE\"\n  | \"MAUER\"\n  | \"MAUERSTRAND\"\n  | \"TOR\"\n  | \"TURM\"\n  | \"TURMSTRAND\";\n\nexport type FieldKind = LandFieldType | BuildingFieldType;\n\nexport default class FieldType {\n  public readonly id: number;\n  public readonly gfxId: number;\n  public readonly kind: FieldKind;\n  public readonly size: Point;\n  public readonly rotate: number;\n  public readonly animAdd: number;\n  public readonly yOffset: number;\n  public readonly animTime: number;\n  public readonly animAnz: number;\n  public readonly production: {\n    good: string;\n    upkeep: {\n      active: number;\n      inactive: number;\n    };\n    good1: string;\n    good2: string;\n    amount1: number;\n    amount2: number;\n    radius: number;\n    interval: number;\n    maxStock: number;\n  };\n\n  constructor(config: any) {\n    this.id = config.Id;\n    this.gfxId = config.Gfx;\n    this.kind = config.Kind;\n    this.size = new Point(config.Size.x, config.Size.y);\n    this.rotate = config.Rotate;\n    this.animAdd = config.AnimAdd;\n    this.animAnz = config.AnimAnz;\n    this.animTime = config.AnimTime === \"TIMENEVER\" ? -1 : config.AnimTime;\n    this.yOffset = -config.Posoffs;\n\n    const productionConfig = config.nested_objects.HAUS_PRODTYP[0];\n    const upkeep = {\n      active: 0,\n      inactive: 0\n    };\n    if (Array.isArray(productionConfig.Kosten)) {\n      upkeep.active = productionConfig.Kosten[0];\n      upkeep.inactive = productionConfig.Kosten[1];\n    } else {\n      upkeep.active = upkeep.inactive =\n        productionConfig.Kosten !== undefined ? productionConfig.Kosten : 0;\n    }\n    this.production = {\n      good: productionConfig.Ware,\n      upkeep,\n      good1: productionConfig.Rohstoff,\n      good2: productionConfig.Workstoff,\n      amount1: productionConfig.Rohmenge,\n      amount2:\n        productionConfig.Workmenge !== undefined\n          ? productionConfig.Workmenge\n          : 0,\n      radius: productionConfig.Radius,\n      interval: productionConfig.Interval,\n      maxStock: productionConfig.Maxlager\n    };\n  }\n\n  public getSprites(\n    islandPosition: Point,\n    fieldPos: Point,\n    rotation: Rotation4,\n    animationStep: number,\n    textures: Map<number, Texture>\n  ) {\n    const sprites: SpriteWithPosition[] = [];\n    const sx = rotation % 2 === 0 ? this.size.x : this.size.y;\n    const sy = rotation % 2 === 0 ? this.size.y : this.size.x;\n    for (let y = 0; y < sy; y++) {\n      for (let x = 0; x < sx; x++) {\n        const xx = fieldPos.x + x;\n        const yy = fieldPos.y + y;\n        const { x: worldX, y: worldY } = GameRenderer.fieldPosToWorldPos(\n          new Point(xx, yy)\n        );\n\n        let sprite: Sprite | AnimatedSprite;\n        if (this.animAdd === 0 || this.animTime === -1) {\n          const texture = this.getTexture(\n            x,\n            y,\n            rotation,\n            animationStep,\n            textures\n          );\n          sprite = new Sprite(texture);\n        } else {\n          const animatedTextures = [];\n          for (let i = 0; i < this.animAnz; i++) {\n            animatedTextures.push(this.getTexture(x, y, rotation, i, textures));\n          }\n          const animatedSprite = new AnimatedSprite(animatedTextures);\n          animatedSprite.animationSpeed =\n            (1.0 / 60.0) * (1000.0 / this.animTime);\n          animatedSprite.play();\n          sprite = animatedSprite;\n        }\n        // Set bottom left corner of sprite as origin.\n        sprite.anchor.set(0, 1);\n        sprite.x = worldX;\n        sprite.y = worldY + this.yOffset;\n        sprites.push({\n          sprite: sprite,\n          pixelPosition: new Point(sprite.x, sprite.y),\n          mapPosition: new Point(xx, yy),\n          mapPositionOnIsland: new Point(\n            xx - islandPosition.x,\n            yy - islandPosition.y\n          )\n        });\n      }\n    }\n\n    return sprites;\n  }\n\n  private getTexture(\n    x: number,\n    y: number,\n    rotation: Rotation4,\n    animationStep: number,\n    textures: Map<number, Texture>\n  ): Texture {\n    let tileId = this.gfxId;\n    if (this.rotate > 0) {\n      tileId += rotation * this.size.x * this.size.y;\n    }\n    tileId += animationStep * this.animAdd;\n\n    if (rotation === 0) {\n      tileId += y * this.size.x + x;\n    } else if (rotation === 1) {\n      tileId +=\n        this.size.x * this.size.y -\n        1 -\n        (x * this.size.x + (this.size.x - 1 - y));\n    } else if (rotation === 2) {\n      tileId += (this.size.y - 1 - y) * this.size.x + (this.size.x - 1 - x);\n    } else if (rotation === 3) {\n      tileId += x * this.size.x + (this.size.x - 1 - y);\n    } else {\n      throw new Error(`Invalid building rotation: ${rotation}.`);\n    }\n\n    const texture = textures.get(tileId);\n    if (texture === undefined) {\n      throw new Error(`Could not load texture ${tileId}.`);\n    }\n\n    return texture;\n  }\n}\n","import FileSystem from \"../filesystem\";\nimport FieldType from \"./field-type\";\n\nexport default class ConfigLoader {\n  private loaded = false;\n  private readonly fieldData: Map<number, FieldType> = new Map();\n\n  constructor(private readonly fs: FileSystem) {}\n\n  public async load() {\n    const fieldConfig = JSON.parse(\n      await this.fs.openAndGetContentAsText(\"/fields.json\")\n    ).objects.HAUS.items;\n    for (const key of Object.keys(fieldConfig)) {\n      const fieldId = parseInt(fieldConfig[key].Id, 10);\n      this.fieldData.set(fieldId, new FieldType(fieldConfig[key]));\n    }\n    this.loaded = true;\n  }\n\n  public getFieldData(): ReadonlyMap<number, FieldType> {\n    if (!this.loaded) {\n      throw new Error(\"Configuration is not loaded. Call .load() first!\");\n    }\n    return this.fieldData;\n  }\n}\n","import { Loader } from \"pixi.js\";\nimport FileSystem from \"../filesystem\";\nimport { uInt8ToBase64 } from \"../util/util\";\n\nexport default class FontLoader {\n  constructor(private readonly fs: FileSystem) {}\n\n  public async load() {\n    const fonts: { [name: string]: { size: number } } = {\n      ZEI20V: { size: 24 }\n    };\n    for (const fontName of Object.keys(fonts)) {\n      // const size = fonts[fontName].size;\n      console.log(`Loading font ${fontName}.`);\n      const font = await this.fs.openAndGetContentAsUint8Array(\n        `/fonts/${fontName}/font.xml`\n      );\n      await new Promise(resolve => {\n        Loader.shared\n          .add(fontName, `data:application/xml;base64,${uInt8ToBase64(font)}`)\n          .load(resolve);\n      });\n      console.log(`Finished loading font ${fontName}.`);\n    }\n  }\n}\n","import { interaction, Sprite } from \"pixi.js\";\n\ntype InteractionEvent = interaction.InteractionEvent;\n\nexport default class SliderSprite extends Sprite {\n  private dragging = false;\n  private topY: number;\n\n  public setSliderData(sizeY: number, offsetY: number, sliderSizeY: number) {\n    this.position.set(\n      this.position.x,\n      this.position.y + (sizeY - sliderSizeY) / 2\n    );\n    this.topY = this.position.y;\n    // sprite.position.set(sprite.position.x + sliderOffset[0], sprite.position.y + sliderOffset[1]);\n    this.on(\"mousedown\", (event: InteractionEvent) => {\n      this.dragging = true;\n    });\n    this.on(\"mouseup\", (event: InteractionEvent) => {\n      this.dragging = false;\n    });\n    this.on(\"mousemove\", (event: InteractionEvent) => {\n      if (this.dragging) {\n        const originalEvent = event.data.originalEvent as\n          | MouseEvent\n          | PointerEvent;\n        const eventY = originalEvent.offsetY - this.texture.height / 2;\n        this.position.y = this.clamp(\n          eventY,\n          this.topY,\n          this.topY + sliderSizeY - this.texture.height / 2\n        );\n      }\n    });\n  }\n\n  /*\n    public moveDown() {\n\n    }\n\n    public moveUp() {\n\n    }\n    */\n\n  private clamp(val: number, min: number, max: number) {\n    return Math.min(Math.max(min, val), max);\n  }\n}\n","import {\n  BitmapText,\n  Container,\n  Point,\n  Rectangle,\n  resources,\n  Sprite,\n  Texture\n} from \"pixi.js\";\nimport SpriteLoader from \"../sprite-loader\";\nimport assert from \"../util/assert\";\nimport { ScreenConfig } from \"./menu-structure\";\nimport SliderSprite from \"./ui/slider-sprite\";\n\ninterface RadioButtonData {\n  sprite: Sprite;\n  defaultTexture: Texture;\n  activeTexture: Texture;\n}\n\nexport default class GADRenderer {\n  private videos: Sprite[] = [];\n\n  constructor(\n    private readonly stage: Container,\n    private readonly spriteLoader: SpriteLoader\n  ) {}\n\n  public async render(data: any, config: ScreenConfig) {\n    this.destroyVideos();\n    this.stage.removeChildren();\n\n    const blockNumMapping: Map<number, string> = new Map();\n    for (const name of Object.keys(data.variables)) {\n      const value = data.variables[name];\n      if (name.startsWith(\"BLK_\")) {\n        blockNumMapping.set(value, name.substring(4));\n      }\n    }\n\n    const radioButtons: RadioButtonData[] = [];\n    let selectableCount = 0;\n    const gadgets = data.objects.GADGET.items;\n    for (const num of Object.keys(gadgets)) {\n      const gadget = gadgets[num];\n      const id = gadget.Id;\n      const blockNr = gadget.Blocknr;\n      const gfx = gadget.Gfxnr;\n      const kind: string = gadget.Kind;\n      if (kind === \"GAD_UNUSED\") {\n        continue;\n      }\n      const position = new Point(gadget.Pos[0], gadget.Pos[1]);\n      if (gadget.Posoffs) {\n        position.set(\n          position.x + gadget.Posoffs[0],\n          position.y + gadget.Posoffs[1]\n        );\n      }\n      const size =\n        gadget.Size !== undefined\n          ? new Point(gadget.Size.x, gadget.Size.y)\n          : null;\n      const selectable = gadget.Noselflg === undefined || gadget.Noselflg === 0;\n      const pressOff = gadget.Pressoff;\n      const isRadioButton = gadget.Reiheflg === 1;\n      if (isRadioButton) {\n        assert(selectable);\n      }\n      assert(blockNr !== undefined);\n\n      const isSlider = gadget.Slidverflg !== undefined;\n      const sliderOffset = gadget.Slidoffs;\n      const sliderSize = gadget.Slidsize;\n\n      switch (kind) {\n        case \"GAD_GFX\":\n          const textures = await this.spriteLoader.getTextures(\n            `TOOLS/${blockNumMapping.get(blockNr)}`\n          );\n\n          const defaultTexture = textures.get(gfx)!;\n          const activeTexture = textures.get(gfx + pressOff)!;\n\n          const sprite = !isSlider\n            ? new Sprite(defaultTexture)\n            : new SliderSprite(defaultTexture);\n          sprite.position.set(position.x, position.y);\n          sprite.name = `menu-${id}`;\n\n          if (isSlider) {\n            (sprite as SliderSprite).setSliderData(\n              size!.y,\n              sliderOffset[1],\n              sliderSize[1]\n            );\n          }\n\n          if (selectable) {\n            sprite.buttonMode = true;\n            sprite.interactive = true;\n            const callback = config.buttons[selectableCount];\n\n            if (isRadioButton) {\n              if (radioButtons.length === 0) {\n                // The first radio button is active at the start.\n                sprite.texture = activeTexture;\n              }\n              radioButtons.push({ sprite, activeTexture, defaultTexture });\n            }\n\n            sprite.on(\"mousedown\", () => {\n              sprite.texture = activeTexture;\n              if (isRadioButton) {\n                // If this IS a radio button, make all other radio buttons inactive.\n                for (const button of radioButtons) {\n                  if (button.sprite !== sprite) {\n                    button.sprite.texture = button.defaultTexture;\n                  }\n                }\n              }\n              callback(this.stage);\n            });\n\n            if (!isRadioButton) {\n              // If this is NOT a radio button, go back to normal state on mouse up.\n              sprite.on(\"mouseup\", () => (sprite.texture = defaultTexture));\n            }\n\n            selectableCount++;\n          }\n          this.stage.addChild(sprite);\n          break;\n        case \"GAD_TEXTL\":\n        case \"GAD_TEXTZ\":\n        case \"GAD_TEXTR\":\n          // case \"GAD_TEXTFL\":\n          const fontSize = 24;\n          const text = new BitmapText(\"Here goes text!\", {\n            font: { name: \"ZEI20V\", size: fontSize }\n          });\n          text.position.set(position.x, position.y);\n          text.pivot.set(0, fontSize);\n          text.name = `menu-${id}`;\n          text.hitArea = new Rectangle(0, 0, size!.x, size!.y);\n          if (kind.endsWith(\"Z\")) {\n            // Center text\n            text.pivot.set(text.x / 2, text.pivot.y);\n          } else if (kind.endsWith(\"R\")) {\n            // text.pivot.set(text.x, text.pivot.y);\n          }\n          this.stage.addChild(text);\n          break;\n        default:\n          console.warn(`Unsupported kind: ${kind}`);\n      }\n    }\n\n    await config.onLoad(this.stage);\n  }\n\n  public renderVideo(videoSprite: Sprite, onEnd: () => void) {\n    const videoTexture = videoSprite.texture.baseTexture\n      .resource as resources.VideoResource;\n    videoTexture.source.addEventListener(\n      \"ended\",\n      () => {\n        this.stage.removeChild(videoSprite);\n        onEnd();\n      },\n      { once: true }\n    );\n    this.stage.addChild(videoSprite);\n    this.videos.push(videoSprite);\n  }\n\n  public renderVideoFullscreen(videoSprite: Sprite, onEnd: () => void) {\n    this.destroyVideos();\n    this.stage.removeChildren();\n\n    const videoTexture = videoSprite.texture.baseTexture\n      .resource as resources.VideoResource;\n    videoTexture.source.addEventListener(\n      \"ended\",\n      () => {\n        this.stage.removeChild(videoSprite);\n        onEnd();\n      },\n      { once: true }\n    );\n\n    videoSprite.scale.set(2, 2);\n\n    // TODO: For some reason, this.stage.width/height are way to small.\n    const x =\n      /*this.stage.width*/ 1024 / 2 -\n      (videoSprite.texture.width * videoSprite.scale.x) / 2;\n    const y =\n      /*this.stage.height*/ 768 / 2 -\n      (videoSprite.texture.height * videoSprite.scale.y) / 2;\n    videoSprite.position.set(x, y);\n\n    this.stage.addChild(videoSprite);\n  }\n\n  private destroyVideos() {\n    this.videos.forEach(video =>\n      video.destroy({ texture: true, baseTexture: true })\n    );\n    this.videos = [];\n  }\n}\n","import { Point, Sprite, Texture } from \"pixi.js\";\nimport FileSystem from \"../filesystem\";\nimport SpriteLoader from \"../sprite-loader\";\nimport { make2DArray } from \"../util/util\";\nimport ConfigLoader from \"./config-loader\";\nimport { default as FieldX } from \"./field-type\";\nimport { Island } from \"./world/island\";\n\nexport interface SpriteWithPosition {\n  sprite: Sprite;\n  pixelPosition: Point;\n  mapPosition: Point;\n  mapPositionOnIsland: Point;\n}\n\nexport default class IslandSpriteLoader {\n  private inited = false;\n\n  private fields: ReadonlyMap<number, FieldX> = new Map();\n\n  private textures: Map<number, Texture> = new Map();\n\n  constructor(\n    private readonly fs: FileSystem,\n    private readonly configLoader: ConfigLoader,\n    private readonly spriteLoader: SpriteLoader\n  ) {}\n\n  public init = async () => {\n    if (!this.inited) {\n      this.textures = await this.spriteLoader.getTextures(\"STADTFLD\");\n      this.fields = this.configLoader.getFieldData();\n      this.inited = true;\n    }\n  };\n\n  public getIslandSprites = async (island: Island) => {\n    await this.init();\n\n    const sprites = make2DArray<SpriteWithPosition>(\n      island.size.x,\n      island.size.y\n    );\n\n    for (let x = 0; x < island.size.x; x++) {\n      for (let y = 0; y < island.size.y; y++) {\n        this.handleField(island, x, y, sprites);\n      }\n    }\n\n    return sprites;\n  };\n\n  private handleField = (\n    island: Island,\n    x: number,\n    y: number,\n    sprites: Array<Array<SpriteWithPosition | null>>\n  ) => {\n    const field = island.fields[x][y];\n    if (field === null) {\n      return;\n    }\n    const fieldConfig = this.fields.get(field.fieldId);\n    if (fieldConfig === undefined) {\n      throw new Error(`Could not load config for ${field.fieldId}.`);\n    }\n    const origin = new Point(island.position.x + x, island.position.y + y);\n\n    const newSprites = fieldConfig.getSprites(\n      island.position,\n      origin,\n      field.rotation,\n      field.ani,\n      this.textures\n    );\n    newSprites.forEach(newSprite => {\n      const { x: xx, y: yy } = newSprite.mapPositionOnIsland;\n      if (sprites[xx][yy] === null) {\n        sprites[xx][yy] = newSprite;\n      }\n    });\n  };\n}\n","import { Texture } from \"pixi.js\";\nimport { uInt8ToBase64 } from \"./util\";\n\nexport function textureFromUint8ArrayPNG(data: Uint8Array) {\n  return Texture.from(`data:image/png;base64,${uInt8ToBase64(data)}`);\n}\n\nexport async function textureFromUint8ArrayMP4(\n  data: Uint8Array\n): Promise<Texture> {\n  const tmpVideo = document.createElement(\"video\");\n  tmpVideo.src = `data:video/mp4;base64,${uInt8ToBase64(data)}`;\n  const texture = Texture.from(tmpVideo);\n  await new Promise((resolve, reject) => {\n    texture.baseTexture.addListener(\"loaded\", resolve);\n    texture.baseTexture.addListener(\"error\", reject);\n  });\n  return texture;\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\nexport enum OreLocationKind {\n  Iron = 2,\n  Gold = 3\n}\n\nexport enum OreLocationSize {\n  Small = 1,\n  Big = 0\n}\n\nexport class OreLocation {\n  public static fromSaveGame(data: Stream) {\n    const kind = data.read8();\n    const position = new Point(data.read8(), data.read8());\n    const discoveredBy = data.read8(); // unsure\n    const size = data.read8();\n    data.read8(); // mostly 0?\n    const amount = data.read16(); // unsure\n\n    return new OreLocation(kind, size, amount, position, discoveredBy);\n  }\n\n  constructor(\n    public kind: OreLocationKind,\n    public size: OreLocationSize,\n    public amount: number,\n    public position: Point,\n    public discoveredBy: number\n  ) {}\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport { SoldierType } from \"./soldier\";\n\nclass Unit {\n  public static fromSaveGame(data: Stream) {\n    const type: SoldierType = data.read8();\n    const flags = data.read8();\n    data.read16();\n    const hp = data.read16();\n    data.read16();\n\n    return new Unit(type, (flags & 0x10) !== 0, hp);\n  }\n\n  constructor(\n    public type: SoldierType,\n    public ready: boolean,\n    public hp: number\n  ) {}\n}\n\nexport type Castle = ReturnType<typeof castleFromSaveGame>;\n\nexport function castleFromSaveGame(data: Stream) {\n  const islandId = data.read8();\n  const position = new Point(data.read8(), data.read8());\n  data.read8();\n  data.read32();\n  const numSwords = data.read16();\n  const numMuscets = data.read16();\n  const numCanons = data.read16();\n  data.read16();\n  const units = parseUnits(data);\n  data.read(32);\n\n  return {\n    islandId,\n    position,\n    numSwords,\n    numMuscets,\n    numCanons,\n    units\n  };\n}\n\nfunction parseUnits(data: Stream) {\n  const units = [];\n  for (let i = 0; i < 8; i++) {\n    units.push(Unit.fromSaveGame(data));\n  }\n  return units;\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\n\nexport type City = ReturnType<typeof cityFromSaveGame>;\n\nexport function cityFromSaveGame(data: Stream) {\n  const islandId = data.read8();\n  const cityIslandNum = data.read8();\n  const playerId = data.read16();\n  const progressAllowed = !data.read8Bool();\n  const _1 = data.read(87);\n  const inhabitants = [];\n  for (let i = 0; i < 5; i++) {\n    inhabitants.push(data.read32());\n  }\n  const _2 = data.read(15);\n  const taxes = [];\n  for (let i = 0; i < 5; i++) {\n    taxes.push(data.read8());\n  }\n  const _3 = data.read(3);\n  const name = data.readString(33);\n\n  return {\n    islandId,\n    playerId,\n    cityIslandNum,\n    progressAllowed,\n    inhabitants,\n    taxes,\n    name\n  };\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point, Rectangle } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\nimport Field from \"./field\";\nimport { OreLocation } from \"./island-ore-location\";\n\nenum IslandFertilityFlags {\n  TOBACCO = 1,\n  SUGARCANE = 3,\n  WINE = 5,\n  COTTON = 4,\n  CACAO = 6,\n  SPICE = 2\n}\n\nexport interface IslandFertility {\n  tobacco: boolean;\n  sugarcane: boolean;\n  wine: boolean;\n  cotton: boolean;\n  cacao: boolean;\n  spice: boolean;\n}\n\nexport type Island = ReturnType<typeof islandFromSaveGame>;\n\nexport function islandFromIsland3File(\n  id: number,\n  position: Point,\n  isSouth: boolean,\n  numBaseIsland: number,\n  data: Stream\n): Island {\n  data.read8(); // Ignore id\n  const size = new Point(data.read8(), data.read8());\n\n  return {\n    id,\n    position,\n    size,\n    positionRect: new Rectangle(position.x, position.y, size.x, size.y),\n    numBaseIsland,\n    numOreLocations: 0,\n    oreLocations: [],\n    fertility: {\n      tobacco: false,\n      sugarcane: false,\n      wine: false,\n      cotton: false,\n      cacao: false,\n      spice: false\n    },\n    isSouth,\n    differsFromBaseIsland: false,\n    fertilityDiscovered: false,\n    fields: []\n  };\n}\n\nexport function islandFromIsland4File(\n  id: number,\n  position: Point,\n  isSouth: boolean,\n  numBaseIsland: number,\n  data: Stream\n): Island {\n  return islandFromIsland3File(id, position, isSouth, numBaseIsland, data);\n}\n\nexport function islandFromIsland5File(\n  id: number,\n  position: Point,\n  isSouth: boolean,\n  numBaseIsland: number,\n  data: Stream\n): Island {\n  return islandFromIsland3File(id, position, isSouth, numBaseIsland, data);\n}\n\nexport function islandFromSaveGame(data: Stream) {\n  const id = data.read8();\n  const width = data.read8();\n  const height = data.read8();\n  /*\n    uint8      strtduerrflg:1;\n    uint8      nofixflg:1;\n    uint8      vulkanflg:1;\n     */\n  const _1 = data.read8();\n  const x = data.read16();\n  const y = data.read16();\n\n  const hirschreviercnt = data.read16();\n  const speedcnt = data.read16();\n  // the order in which players built their cities on this island\n  // is 7, 7, 7, 7, 7, 7, 7, 7, by default\n  // fills up from the beginning with player ids once a player builds a kontor.\n  // natives are also listed; islands with natives start with 6, 7, 7, ...\n  const stadtplayernr = data.read(8);\n\n  assert(data.read(3).every(e => e === 0));\n\n  const vulcanoCount = data.read8();\n  const treasureFlag = data.read8Bool();\n  const rohstanz = data.read8();\n\n  const numOreLocations = data.read8();\n  const fertilityDiscovered = data.read8();\n  const oreLocations = [\n    OreLocation.fromSaveGame(data),\n    OreLocation.fromSaveGame(data)\n  ];\n  // These look like even more ore locations.\n  const _5 = data.read(48);\n\n  const fertility = parseFertility(data.read32());\n  const numBaseIsland = data.read16();\n\n  // unsure\n  const sizenr = data.read16();\n\n  const isSouth = data.read8Bool();\n  const differsFromBaseIsland = data.read8Bool();\n\n  // unsure\n  const duerrproz = data.read8();\n  // unsure\n  const rotier = data.read8();\n\n  const seeplayerflags = data.read32(); // 1 nach bloßem Vorbeifahren (= zeigt Eingebohrene), 0xFF nach Kontorbau\n\n  // unsure\n  const duerrcnt = data.read32();\n\n  data.read32(); // mostly 0?\n\n  const fields: Array<Array<Field | null>> = [];\n\n  return {\n    id,\n    position: new Point(x, y),\n    size: new Point(width, height),\n    positionRect: new Rectangle(x, y, width, height),\n    numBaseIsland,\n    numOreLocations,\n    oreLocations,\n    fertility,\n    isSouth,\n    differsFromBaseIsland,\n    fertilityDiscovered: fertilityDiscovered !== 0,\n    fields\n  };\n\n  // island.debug = {\n  //    _1,\n  //    _5,\n  //    hirschreviercnt,\n  //    speedcnt,\n  //    stadtplayernr,\n  //    vulcanoCount,\n  //    treasureFlag,\n  //    rohstanz,\n  //\n  //    sizenr,\n  //    duerrproz,\n  //    rotier,\n  //\n  //    seeplayerflags,\n  //    duerrcnt,\n  // };\n  // console.log(island.debug);\n}\n\nfunction parseFertility(fertility: number): IslandFertility {\n  return {\n    tobacco: (fertility & (1 << IslandFertilityFlags.TOBACCO)) > 0,\n    sugarcane: (fertility & (1 << IslandFertilityFlags.SUGARCANE)) > 0,\n    wine: (fertility & (1 << IslandFertilityFlags.WINE)) > 0,\n    cotton: (fertility & (1 << IslandFertilityFlags.COTTON)) > 0,\n    cacao: (fertility & (1 << IslandFertilityFlags.CACAO)) > 0,\n    spice: (fertility & (1 << IslandFertilityFlags.SPICE)) > 0\n  };\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\n\nexport enum GoodAction {\n  None = 0,\n  Sell = 1,\n  Buy = 2\n}\n\nexport default class Good {\n  public static fromSaveGame(data: Stream) {\n    const tmp = data.read32();\n    const sellingPrice = (tmp & 0b00000000000000000000001111111111) >> 0;\n    const buyingPrice = (tmp & 0b00000000000011111111110000000000) >> 10;\n    const action: GoodAction = (tmp & 0b11111111111100000000000000000000) >> 20;\n    const _1 = data.read32();\n    const wantedSellingAmount = data.read16() >> 5;\n    const wantedBuyingAmount = data.read16() >> 5;\n    const currentAmount = data.read16() >> 5;\n    const _2 = data.read16();\n\n    /*\n        100101100001 // iron ore\n        100101100101 // gold ore\n        010111100001 // wool\n        010111100111 // sugarcane\n        010111100011 // tobacco\n        010111101001 // cows\n        010111011111 // grain\n        000111110101 // flour\n        001000001001 // iron\n        001000000101 // swords\n        001000010001 // muskets\n        001000001111 // canons\n        010000110011 // food\n        001000001101 // tobacco\n        010111011101 // spice\n        010111100101 // cacao\n        001000000111 // wine\n        000111111011 // fabric\n        000111111001 // clothing\n        001000010101 // jewellery\n        001000000011 // tools\n        011111010001 // wood\n        001000000001 // stone\n         */\n    const goodId = data.read16();\n    const _3 = data.read16();\n\n    return new Good(\n      goodId,\n      sellingPrice,\n      buyingPrice,\n      wantedSellingAmount,\n      wantedBuyingAmount,\n      currentAmount,\n      action\n    );\n  }\n\n  constructor(\n    public goodId: number,\n    public sellingPrice: number,\n    public buyingPrice: number,\n    public wantedSellingAmount: number,\n    public wantedBuyingAmount: number,\n    public currentAmount: number,\n    public action: GoodAction\n  ) {}\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\n\nexport enum ContractState {\n  Inactive = 0,\n  OfferedByMe = 1,\n  OfferedByOther = 2,\n  Active = 3\n}\n\nexport default class Contract {\n  public static fromSaveGame(data: Stream) {\n    const state = data.read32();\n    const time = data.read32(); // unsure\n\n    return new Contract(state, time);\n  }\n\n  constructor(\n    public readonly state: ContractState,\n    public readonly time: number\n  ) {}\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport Good from \"./good\";\n\nexport type Kontor = ReturnType<typeof kontorFromSaveGame>;\n\nexport function kontorFromSaveGame(data: Stream) {\n  const islandId = data.read8();\n  const position = new Point(data.read8(), data.read8());\n  const playerId = data.read8();\n  const goods = parseGoods(data);\n\n  return {\n    islandId,\n    position,\n    playerId,\n    goods\n  };\n}\n\nfunction parseGoods(data: Stream) {\n  const goods = [];\n  for (let i = 0; i < 2; i++) {\n    Good.fromSaveGame(data);\n  }\n  for (let i = 2; i < 2 + 23; i++) {\n    goods.push(Good.fromSaveGame(data));\n  }\n  for (let i = 2 + 23; i < 50; i++) {\n    Good.fromSaveGame(data);\n  }\n  return goods;\n}\n","import Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\nenum PlayerEventKind {}\n// TODO\n\nexport default class PlayerEvent {\n  public static fromSaveGame(data: Stream) {\n    const kind = data.read8();\n    const otherPlayerId = data.read8();\n    assert(data.read16() === 0);\n    const time = data.read32(); // TODO: Which unit is time in?\n\n    return new PlayerEvent(kind, otherPlayerId, time);\n  }\n\n  constructor(\n    public readonly kind: PlayerEventKind,\n    public readonly otherPlayerId: number,\n    public readonly time: number\n  ) {}\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\nimport Contract from \"./contract\";\nimport PlayerEvent from \"./player-event\";\n\nexport enum PlayerKind {\n  HUMAN = 0,\n  AI = 9,\n  TRADER = 13,\n  PIRATE = 14,\n  NATIVE = 11\n}\n\nexport type Player = ReturnType<typeof playerFromSaveGame>;\n\nexport function playerFromSaveGame(data: Stream) {\n  const money = data.read32S();\n  const kind: PlayerKind = data.read8();\n  const id = data.read8();\n  const humanPlayerCount = data.read8(); // unsure\n  const color = data.read8();\n  const killedByPlayerId = data.read8(); // killedByPlayerId\n  assert(data.read8() === 0);\n  const _3_3 = data.read16(); // unsure, time since no ships and cities\n  const assignedTaskId = data.read8(); // Can be 0, 1, 2, 3 or 0xFF (no task assigned)\n  const _3_2 = data.read8(); // unsure, may not be played by human\n  const palaceBuilt = data.read8Bool();\n  const cathedralBuilt = data.read8Bool();\n\n  const enemiesDefeated = data.read16();\n  const triumphArchesBuilt = data.read16();\n  const soldiersKilled = data.read16();\n  const soldiersFallen = data.read16();\n  const shipsSunken = data.read16();\n  const shipsKilled = data.read16();\n  const _4 = data.read8();\n  const flags = data.read8();\n  const enablePositiveWillInfluence = (flags & (1 << 0)) > 0;\n  const enableNegativeWillInfluence = (flags & (1 << 1)) > 0;\n  const _5 = data.read(6);\n  const positiveWillInfluence = data.read8() / 32.0 + 1.0; // Between 1.0 and 5.0\n  const negativeWillInfluence = data.read8() / 32.0 + 1.0; // Between 1.0 and 5.0\n  assert(data.read(14).every(e => e === 0));\n  const accessibleBuildings = data.read32();\n  const statues = data.read16();\n  const statuesBuilt = data.read16();\n  const tmp = data.read32();\n  assert(tmp === 0xffffffff);\n\n  const _8 = data.read(264);\n  const tradeContracts = [];\n  for (let i = 0; i < 3; i++) {\n    tradeContracts.push(Contract.fromSaveGame(data));\n  }\n  const peaceContracts = [];\n  for (let i = 0; i < 3; i++) {\n    peaceContracts.push(Contract.fromSaveGame(data));\n  }\n\n  const _9 = data.read(72);\n\n  const playerEvents = [];\n  for (let i = 0; i < 64; i++) {\n    playerEvents.push(PlayerEvent.fromSaveGame(data));\n  }\n\n  const fullName = data.readString(64);\n  const shortName = data.readString(48); // Only used in multiplayer\n\n  console.log(`player ${id}:  `, killedByPlayerId, _3_3, _3_2, _4, _5); // , _8, _9);\n\n  return {\n    id,\n    kind,\n    color,\n    fullName,\n    shortName,\n    tradeContracts,\n    peaceContracts,\n    money,\n    enemiesDefeated,\n    triumphArchesBuilt,\n    soldiersKilled,\n    soldiersFallen,\n    shipsSunken,\n    shipsKilled,\n    accessibleBuildings,\n    statues,\n    statuesBuilt,\n    palaceBuilt,\n    cathedralBuilt,\n\n    enablePositiveWillInfluence,\n    enableNegativeWillInfluence,\n    positiveWillInfluence,\n    negativeWillInfluence,\n\n    assignedTaskId,\n\n    playerEvents\n  };\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\nexport enum CourseState {\n  Stopped = 0x00,\n  Sailing = 55,\n  Unknown = 53,\n  Unknown2 = 52,\n  Unknown3 = 54,\n  Unknown4 = 51\n}\n\nexport class ShipCourse {\n  public static fromSaveGame(data: Stream) {\n    const num = data.read32();\n    const byte1 = (num >> 0) & 0xff;\n    const byte2 = (num >> 8) & 0xff;\n    const byte3 = (num >> 16) & 0xff;\n    const byte4 = (num >> 24) & 0xff;\n\n    const state: CourseState = byte1;\n    assert(state in CourseState);\n\n    const position = new Point(\n      byte4 + ((byte2 & 0b00001111) << 8),\n      byte3 + ((byte2 & 0b11110000) << 4)\n    );\n\n    return new ShipCourse(position, state);\n  }\n\n  constructor(\n    public readonly position: Point,\n    public readonly state: CourseState\n  ) {}\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\nexport type Producer = Readonly<ReturnType<typeof producerFromSaveGame>>;\n\nexport function producerFromSaveGame(data: Stream) {\n  const islandId = data.read8();\n  const position = new Point(data.read8(), data.read8());\n  const speed = data.read8();\n  const speedCount = data.read8();\n  const stock = data.read16() / 32;\n\n  data.read8();\n\n  const timer = data.read16();\n\n  const secondGoodStock = data.read16() / 32;\n  const firstGoodStock = data.read16() / 32;\n\n  data.read8();\n\n  const producedGood = data.read8();\n\n  // The following two values are used to calculate the \"Auslastung\"\n\n  // Increased by 32 whenever \"stock\" is increased.\n  const prodCnt = data.read16() / 32;\n  const timeCnt = data.read16();\n\n  const flags1 = data.read8();\n  const active = (flags1 & (1 << 0)) > 0;\n  const connectedToMarket = (flags1 & (1 << 1)) > 0;\n\n  const animCnt = (flags1 >> 2) & 0b1111;\n  const allowGoodPickup = (flags1 & (1 << 6)) === 0;\n\n  const noGoodCnt = data.read8() & 0b1111;\n  assert(data.read16() === 0);\n\n  return {\n    // The island id.\n    islandId,\n    // The position relative to the island.\n    position,\n    /*\n      > BYTE speed; //  Welcher Speedzähler (MAXWACHSSPEEDKIND)\n      > immer 0\n\n      Always 0 in a big savegame.\n    */\n    speed,\n    /*\n      > UINT speedcnt:8; //  Wenn (Zeitzähler == Speedzähler) timer++ (MAXROHWACHSCNT)\n      > 0x07, 0x05, 0x04, 0x03, 0x00 (irgendetwas, blockweise konstant, unterscheidet sich pro Spielstand maximal um 1)\n\n      Always runs from 0 to 7 and repeats.\n      It appears to be synchronized across all buildings and was the same value for all buildings in a big savegame.\n      It is equal to the global \"timers.cntProduction\".\n    */\n    speedCount,\n\n    /**\n     * The amount of goods already produced and waiting for pickup.\n     */\n    stock,\n\n    /**\n     * The timer is decremented every second, regardless of whether or not\n     * the building has enough input goods to produce something. Once it would reach 0\n     * (i.e., the timer never actually reaches 0):\n     * If there are enough input goods to produce an output good (= producedGood is 128):\n     *   - the timer is set to \"HAUS_PRODTYP.Interval\"\n     *   - \"stock\" is incremented\n     *   - \"firstGoodStock\" is decremented by \"HAUS_PRODTYP.Rohmenge\"\n     *   - \"secondGoodStock\" ???\n     *   - \"noGoodCnt\" is set to 0\n     * If there are NOT enough goods (= producedGood is not 128):\n     *   - it is set to 11 (at least for \"Webstube\")\n     *   - \"noGoodCnt\" is increased (up to a maximum of 15)\n     *\n     * Whenever new input goods are delivered and there were previously not enough\n     * input goods to create output goods, the timer is immediately set to\n     * \"HAUS_PRODTYP.Interval\" ??\n     *\n     * I am unsure why the timer is running even when no goods are currently being\n     * produced.\n     */\n    timer,\n\n    // The amount of primary input goods waiting to be used.\n    // They are only \"taken\" when an output good is finished.\n    firstGoodStock,\n    // The amount of secondary input goods waiting to be used (normally wood).\n    // This is 0 for buildings which don't use secondary goods.\n    // They are only \"taken\" when an output good is finished.\n    secondGoodStock,\n\n    producedGood,\n    prodCnt,\n    timeCnt,\n    active,\n\n    /**\n     * Appears to always be false.\n     * In a big savegame, this was true only for a single building: One of the native HQs.\n     */\n    connectedToMarket,\n\n    // Always 0 for a \"Webstube\"\n    animCnt,\n    allowGoodPickup,\n\n    /**\n     * Increased up to a maximum of 15 whenever \"timer\" reaches 0 and no good could be produced,\n     * otherwise set to 0.\n     * Once it reaches (4?) the \"no input goods\" symbol is displayed above the building.\n     */\n    noGoodCnt\n  };\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport { Rotation8 } from \"./world\";\n\nexport enum SoldierType {\n  Swordsman = 0,\n  Cavalry = 1,\n  Musketeer = 2,\n  Gunner = 3,\n  Native = 8\n}\n\nexport type Soldier = ReturnType<typeof soldierFromSaveGame>;\n\nexport function soldierFromSaveGame(data: Stream) {\n  const position = new Point(data.read16() / 2, data.read16() / 2);\n  const hp = data.read16();\n  const type = data.read16();\n  const id = data.read16();\n  const course1 = data.read(4);\n  const _1 = data.read16();\n  const _2 = data.read16();\n  const _3 = data.read8();\n  const _4 = data.read8();\n  const _5 = data.read32();\n  const playerId = data.read8();\n  const _6 = data.read8();\n  const _7 = data.read8();\n  const rotation = data.read8() as Rotation8;\n  const _8 = data.read8();\n  const isPatrolling = data.read8Bool();\n  const course2 = data.read(4);\n  const course3 = data.read(4);\n  const empty = data.read(30);\n\n  return {\n    id,\n    playerId,\n    type,\n    position: position,\n    rotation,\n    isPatrolling,\n    hp\n  };\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport Stream from \"../../parsers/stream\";\nimport { ShipCourse } from \"./ship-course\";\nimport { Rotation8 } from \"./world\";\n\nexport interface ShipGood {\n  good_id: number;\n  amount: number;\n  action: number;\n}\n\nexport interface ShipTradeStop {\n  id: number;\n  kontor_id: number;\n  _1: number;\n  goods: ShipGood[];\n  _2: number[];\n}\n\nexport type Ship = ReturnType<typeof shipFromSaveGame>;\n\nexport function shipFromSaveGame(data: Stream) {\n  const name = data.readString(28);\n  const position = new Point(data.read16(), data.read16());\n  const _1 = data.read(3 * 4);\n\n  const courseFrom = ShipCourse.fromSaveGame(data);\n  const courseTo = ShipCourse.fromSaveGame(data);\n  const courseCurrent = ShipCourse.fromSaveGame(data);\n\n  const _2 = data.read32();\n  const hp = data.read16();\n  const _3 = data.read32();\n  const canons = data.read8();\n  const flags = data.read8();\n  const sellingPrice = data.read16();\n  const id = data.read16();\n  const type = data.read16();\n  const _4 = data.read8();\n  const playerId = data.read8();\n  const _5 = data.read32();\n  const rotation = data.read16() as Rotation8;\n  const tradeStops = parseShipTradeStops(data, 8);\n  const _6 = data.read16();\n  const cargo = parseShipGoods(data, 8);\n  // type_name = SHIP_TYPES[ship['type']],\n\n  return {\n    id,\n    playerId,\n    position,\n    rotation,\n    name,\n    hp,\n    tradeStops,\n    cargo\n  };\n}\n\nfunction parseShipTradeStops(data: Stream, n: number): ShipTradeStop[] {\n  const tradeStops = [];\n  for (let i = 0; i < n; i++) {\n    tradeStops.push({\n      id: data.read8(),\n      kontor_id: data.read8(),\n      _1: data.read16(),\n      goods: parseShipGoods(data, 2),\n      _2: data.read(16)\n    });\n  }\n  return tradeStops;\n}\n\nfunction parseShipGoods(data: Stream, n: number): ShipGood[] {\n  const cargo = [];\n  for (let i = 0; i < n; i++) {\n    cargo.push({\n      good_id: data.read16(),\n      amount: data.read16(),\n      action: data.read32() // 0 == 'load', 1 == 'unload'\n    });\n  }\n  return cargo;\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\ninterface ReachInhabitants {\n  count: number; // require n inhabitants\n  requiredLevel: number; // out of the n, a few need to reach level x\n  requiredLevelCount: number; // require y of n inhabitants with level x\n}\n\nexport type Task = ReturnType<typeof taskFromSaveGame>;\n\nexport function taskFromSaveGame(data: Stream) {\n  const id = data.read32();\n  const _1 = data.read(28);\n\n  const monopolyGoodId1 = data.read8();\n  assert(data.read8() === 0);\n  const monopolyGoodId2 = data.read8();\n  assert(data.read8() === 0);\n  const helpOtherToReachInhabitantsPlayerId = data.read8(); // Can be 0, 1, 2, 3 or 7 for any player.\n\n  assert(data.read(6).every(e => e === 0));\n\n  const playersToKill = [];\n  if (data.read8Bool()) {\n    // Any does not include trader, pirate and native.\n    playersToKill.push(\"any\");\n  }\n  if (data.read8Bool()) {\n    playersToKill.push(\"red\");\n  }\n  if (data.read8Bool()) {\n    playersToKill.push(\"blue\");\n  }\n  if (data.read8Bool()) {\n    playersToKill.push(\"yellow\");\n  }\n  if (data.read8Bool()) {\n    playersToKill.push(\"white\");\n  }\n  if (data.read8Bool()) {\n    // Should never be true\n    playersToKill.push(\"trader\");\n  }\n  if (data.read8Bool()) {\n    playersToKill.push(\"pirate\");\n  }\n  if (data.read8Bool()) {\n    // Should never be true\n    playersToKill.push(\"native\");\n  }\n\n  const _3 = data.read(25);\n\n  const requiredBalance = data.read32();\n  const successVideoId = data.read32();\n  const requiredTradeBalance = data.read32();\n  const _5 = data.read(16);\n\n  const text = data.readString(2048);\n\n  const _6 = data.read(8);\n\n  const ownCityReachInhabitants: ReachInhabitants[] = [];\n  for (let i = 0; i < 3; i++) {\n    ownCityReachInhabitants.push({\n      count: data.read32(),\n      requiredLevel: data.read32(),\n      requiredLevelCount: data.read32()\n    });\n  }\n\n  const _7 = data.read(36);\n\n  const helpOtherToReachInhabitants: ReachInhabitants = {\n    count: data.read32(),\n    requiredLevel: data.read32(),\n    requiredLevelCount: data.read32()\n  };\n\n  console.log(\"task\", id, _1, _3, _5, _6, _7);\n\n  return {\n    id,\n    text,\n    successVideoId,\n    playersToKill,\n    requiredBalance,\n    requiredTradeBalance,\n    ownCityReachInhabitants,\n    helpOtherToReachInhabitantsPlayerId,\n    helpOtherToReachInhabitants,\n    monopolyGoodId1,\n    monopolyGoodId2\n  };\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\nexport type Timers = ReturnType<typeof timersFromSaveGame>;\n\nexport function timersFromSaveGame(data: Stream) {\n  const cntCity = data.read8();\n  const cntIsland = data.read8();\n  const cntShipyard = data.read8();\n  const cntMilitary = data.read8();\n  const cntProduction = data.read8();\n  assert(data.read(31 + 32).every(e => e === 0));\n  const cntSettlers = data.read(32);\n  const cntGrowth = data.read(32);\n\n  const timeCity = data.read32();\n  const timeIsland = data.read32();\n  const timeShipyard = data.read32();\n  const timeMilitary = data.read32();\n  const timeProduction = data.read32();\n  const timeGoodToolsCnt = data.read32();\n  const timeGoodToolsMax = data.read32();\n  const timeGame = data.read32(); // Incremented every 100ms\n\n  const noErzOutFlg = data.read8();\n  const tutorFlg = data.read8();\n  const aiLevel = data.read8();\n  const missionNumber = data.read8();\n\n  const flags = data.read32();\n  const enableTrader = (flags & (1 << 6)) === 0;\n  const bigIronRunsOut = (flags & (1 << 3)) === 0;\n  const enableDroughts = (flags & (1 << 2)) === 0; // TODO: Does not appear to be working for endless games.\n  const enablePirate = (flags & (1 << 0)) === 0;\n  const enableVulcano = (flags & (1 << 8)) === 0;\n\n  const gameId = data.read32();\n  const cityNameNumber = data.read32();\n  const timeNextDrought = data.read32();\n  const timePirateSec = data.read32();\n  const missionSubNumber = data.read32();\n  const shipMax = data.read32();\n\n  // vulcano\n  data.read(4);\n  // vulcano 2\n  data.read(4);\n\n  const timeNextVulcano = data.read32();\n  const cntVulcano = data.read32();\n\n  data.read(17 + 32, 4);\n  // assert(data.read(17 + 32, 4).every((e) => e === 0));\n  const timeSettlers = data.read(32, 4);\n  const timeGrowth = data.read(32, 4);\n\n  const timers = {\n    /**\n     * Range: 0 to 7\n     * Update: Every 10 ticks (100 game time)\n     * Influence: ???\n     */\n    cntCity,\n    /**\n     * Range: 0 to 7\n     * Update: Every 30 ticks (300 game time)\n     * Influence: ???\n     */\n    cntIsland,\n    /**\n     * Range: 0 to 7\n     * Updaste: Every tick (10 game time)\n     * Influence: ???\n     */\n    cntShipyard,\n    /**\n     * Range: 0 to 7\n     * Updaste: Every tick (10 game time)\n     * Influence: ???\n     */\n    cntMilitary,\n    /**\n     * Range: 0 to 7\n     * Update: Every tick (10 game time)\n     * Influence: Whenever the timer reaches 0, all production buildings which are currently not producing\n     *            but active check if enough input goods have arrived in the meantime.\n     */\n    cntProduction,\n\n    cntSettlers,\n    cntGrowth,\n    timeCity,\n    timeIsland,\n    timeShipyard,\n    timeMilitary,\n    timeProduction,\n    timeGoodToolsCnt,\n    timeGoodToolsMax,\n    timeGame,\n    noErzOutFlg,\n    tutorFlg,\n    aiLevel,\n    missionNumber,\n    gameId,\n    cityNameNumber,\n    timeNextDrought,\n    timePirateSec,\n    missionSubNumber,\n    shipMax,\n    timeNextVulcano,\n    cntVulcano,\n    timeSettlers,\n    timeGrowth,\n    enableTrader,\n    bigIronRunsOut,\n    enableDroughts,\n    enablePirate,\n    enableVulcano\n  };\n  console.log(timers);\n\n  return timers;\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { Point } from \"pixi.js\";\nimport { IslandSizeId } from \"../../parsers/GAM/island-loader\";\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\n\nexport interface IslandTemplate {\n  num: number;\n  size: 0 | 1 | 2 | 3 | 4;\n  position: Point;\n  climate: \"NORTH\" | \"SOUTH\" | \"ANY\";\n}\n\nexport default class WorldGenerationSettings {\n  public static fromSaveGame(data: Stream) {\n    const _1 = data.slice(100);\n\n    const numNativesNorth = _1[64];\n    const numNativesSouth = _1[68];\n\n    const numIslands = data.read32();\n\n    const _2 = data.slice(268);\n\n    const numBigIronOre = _2[46]; // Erzberg:    ERZBERG_GROSS, 6\n    const numSmallIronOre = _2[54]; // Erzberg:    ERZBERG_KLEIN, 8\n    const numGoldOre = _2[62];\n\n    const numWine = _2[110]; // Ware:       WEINTRAUBEN, 4\n    const numSugarCane = _2[95]; // Ware:       ZUCKERROHR, 3\n    const numSpice = _2[86]; // Ware:       GEWUERZBAUM, 2\n    const numCacao = _2[118]; // Ware:       KAKAOBAUM, 2\n    const numTobacco = _2[78]; // Ware:       TABAKBAUM, 3\n    const numCotton = _2[102]; // Ware:       BAUMWOLLE, 3\n\n    const numTreasures = _2[174]; // Schatz:     10\n\n    const islandTemplates: IslandTemplate[] = [];\n    for (let i = 0; i < numIslands; i++) {\n      const flags = data.read8();\n      const forceNorth = flags === 0;\n      const forceSouth = flags === 1;\n      const islandSize = data.read8(); // 0...4, where 0 is small and 4 is large.\n      if (islandSize < 0 || islandSize > 4) {\n        throw new Error(`Invalid island size category: ${islandSize}.`);\n      }\n      assert(data.read8() === 0x0000);\n      const num = data.read8();\n      const fileNr = data.read32(); // Largely uninteresting, mostly 0x0000FFFF, sometimes 0x00000000\n      const position = new Point(data.read32(), data.read32());\n      islandTemplates.push({\n        num,\n        size: islandSize as IslandSizeId,\n        position: position,\n        climate: forceNorth ? \"NORTH\" : forceSouth ? \"SOUTH\" : \"ANY\"\n      });\n    }\n    for (const each of data.slice(data.length - data.position())) {\n      assert(each === 0);\n    }\n\n    // function dbg(arr: Uint8Array) {\n    //    let debug = \"\";\n    //    for (const each of arr) {\n    //        debug += `${each}\\n`;\n    //    }\n    //    console.log(debug);\n    // }\n    // dbg(_1);\n    // dbg(_2);\n\n    return new WorldGenerationSettings(\n      numNativesNorth,\n      numNativesSouth,\n      numBigIronOre,\n      numSmallIronOre,\n      numGoldOre,\n      numWine,\n      numSugarCane,\n      numSpice,\n      numCacao,\n      numTobacco,\n      numCotton,\n      numTreasures,\n      islandTemplates\n    );\n  }\n\n  public static empty() {\n    return new WorldGenerationSettings(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, []);\n  }\n\n  constructor(\n    public readonly numNativesNorth: number,\n    public readonly numNativesSouth: number,\n    public readonly numBigIronOre: number,\n    public readonly numSmallIronOre: number,\n    public readonly numGoldOre: number,\n    public readonly numWine: number,\n    public readonly numSugarCane: number,\n    public readonly numSpice: number,\n    public readonly numCacao: number,\n    public readonly numTobacco: number,\n    public readonly numCotton: number,\n    public readonly numTreasures: number,\n    public readonly islandTemplates: IslandTemplate[]\n  ) {}\n}\n","import Stream from \"../stream\";\n\nexport class Block {\n  public static empty(type: string) {\n    return new Block(type, 0, new Stream(new Uint8Array()));\n  }\n\n  public static fromStream(data: Stream) {\n    return new Block(data.readString(16), data.read32(), data);\n  }\n\n  public readonly data: Stream;\n\n  constructor(\n    public readonly type: string,\n    public readonly length: number,\n    data: Stream\n  ) {\n    this.data = new Stream(data.slice(length));\n  }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class IslandBlock extends Block {\n  public inselHausBlocks: Block[] = [];\n}\n","import {\n  islandFromIsland3File,\n  islandFromIsland4File,\n  islandFromIsland5File\n} from \"../../game/world/island\";\nimport World from \"../../game/world/world\";\nimport WorldGenerationSettings from \"../../game/world/world-generation-settings\";\nimport assert from \"../../util/assert\";\nimport { Block } from \"./block\";\nimport IslandLoader from \"./island-loader\";\n\nexport default class WorldGenerator {\n  constructor(private islandLoader: IslandLoader) {}\n\n  public async populateWorld(\n    world: World,\n    worldGenerationSettings: WorldGenerationSettings\n  ) {\n    let nextIslandId = Math.max(...world.islands.map(island => island.id)) + 1;\n\n    for (const islandTemplate of worldGenerationSettings.islandTemplates) {\n      const {\n        data,\n        isSouth,\n        id: numBaseIsland\n      } = await this.islandLoader.loadRandomIslandFile(\n        islandTemplate.size,\n        islandTemplate.climate\n      );\n\n      const blocks: Block[] = [];\n      while (!data.eof()) {\n        blocks.push(Block.fromStream(data));\n      }\n\n      const inselBlock = blocks.find(block =>\n        [\"INSEL5\", \"INSEL4\", \"INSEL3\"].includes(block.type)\n      );\n      assert(inselBlock !== undefined);\n      const inselHausBlock = blocks.find(block => block.type === \"INSELHAUS\");\n      assert(inselHausBlock !== undefined);\n\n      // TODO: Place random things:\n      // numNativesNorth,\n      // numNativesSouth,\n      // numBigIronOre,\n      // numSmallIronOre,\n      // numGoldOre,\n      // numWine,\n      // numSugarCane,\n      // numSpice,\n      // numCacao,\n      // numTobacco,\n      // numCotton,\n      // numTreasures,\n\n      let newIsland;\n      switch (inselBlock!.type) {\n        case \"INSEL5\":\n          newIsland = islandFromIsland5File(\n            nextIslandId++,\n            islandTemplate.position,\n            isSouth,\n            numBaseIsland,\n            inselBlock!.data\n          );\n          break;\n        case \"INSEL4\":\n          newIsland = islandFromIsland4File(\n            nextIslandId++,\n            islandTemplate.position,\n            isSouth,\n            numBaseIsland,\n            inselBlock!.data\n          );\n          break;\n        case \"INSEL3\":\n          newIsland = islandFromIsland3File(\n            nextIslandId++,\n            islandTemplate.position,\n            isSouth,\n            numBaseIsland,\n            inselBlock!.data\n          );\n          break;\n        default:\n          throw new Error(\"This code cannot be reached.\");\n      }\n\n      this.islandLoader.setIslandFields(newIsland, [inselHausBlock!]);\n\n      world.islands.push(newIsland);\n    }\n  }\n}\n","enum GAME {\n  // TODO Add more translations\n  \"menu.divider.orginal_missions\" = 85,\n  \"menu.divider.missions\" = 86,\n  \"menu.divider.new_missions\" = 87,\n  \"menu.divider.custom_missions\" = 88,\n  \"exit_game\" = 89,\n  \"exit_game_question\" = 90\n}\n\n// TODO: [LEISTE]\nenum LEISTE {}\n\nenum PLAYCOL {\n  \"player.color.red\",\n  \"player.color.blue\",\n  \"player.color.yellow\",\n  \"player.color.white\" = 3\n}\n\nenum VIDEOKIND {\n  \"videos.event\",\n  \"videos.battle\",\n  \"videos.diplomacy\"\n}\n\nenum SPEECHKIND {\n  \"speech.event\",\n  \"speech.island_status\",\n  \"speech.player\",\n  \"speech.trade\",\n  \"speech.battle\",\n  \"speech.order\",\n  \"speech.diplomacy\"\n}\n\n// Ignore [ERROR]\n\nenum PATH {\n  \"path.custom_missions\"\n}\n\nenum ENDLESSKIND {\n  \"endless.difficulty.easy\",\n  \"endless.difficulty.medium\",\n  \"endless.difficulty.difficult\",\n  \"endless.difficulty.hard\"\n}\n\nenum TUTORKIND {\n  \"tutorial.mission_0\",\n  \"tutorial.mission_1\",\n  \"tutorial.mission_2\",\n  \"tutorial.mission_3\",\n  \"tutorial.mission_4\"\n}\n\nenum KAMPAGNE {\n  \"campaign.0.mission_0\",\n  \"campaign.0.mission_1\",\n  \"campaign.0.mission_2\",\n  \"campaign.0.mission_3\",\n  \"campaign.0.mission_4\",\n\n  \"campaign.1.mission_0\",\n  \"campaign.1.mission_1\",\n  \"campaign.1.mission_2\",\n  \"campaign.1.mission_3\",\n  \"campaign.1.mission_4\",\n\n  \"campaign.2.mission_0\",\n  \"campaign.2.mission_1\",\n  \"campaign.2.mission_2\",\n  \"campaign.2.mission_3\",\n  \"campaign.2.mission_4\",\n\n  \"campaign.3.mission_0\",\n  \"campaign.3.mission_1\",\n  \"campaign.3.mission_2\",\n  \"campaign.3.mission_3\",\n  \"campaign.3.mission_4\",\n\n  \"campaign.4.mission_0\",\n  \"campaign.4.mission_1\",\n  \"campaign.4.mission_2\",\n  \"campaign.4.mission_3\",\n  \"campaign.4.mission_4\",\n\n  \"campaign.5.mission_0\",\n  \"campaign.5.mission_1\",\n  \"campaign.5.mission_2\",\n  \"campaign.5.mission_3\",\n  \"campaign.5.mission_4\"\n}\n\nenum FIGKIND {\n  \"figure.unused\",\n  \"figure.infantry\",\n  \"figure.cavalry\",\n  \"figure.musketeer\",\n  \"figure.artiellery\"\n}\n\nenum WARE {\n  \"good.empty\",\n  \"good.each\",\n  \"good.iron_ore\",\n  \"good.gold_ore\",\n  \"good.wool\",\n  \"good.sugarcane\",\n  \"good.tobacco\",\n  \"good.cattle\",\n  \"good.grain\",\n  \"good.flour\",\n  \"good.iron\",\n  \"good.swords\",\n  \"good.muskets\",\n  \"good.cannons\",\n  \"good.food\",\n  \"good.tobacco_products\",\n  \"good.spices\",\n  \"good.cocoa\",\n  \"good.liquor\",\n  \"good.cloth\",\n  \"good.clothes\",\n  \"good.jewlry\",\n  \"good.tools\",\n  \"good.wood\",\n  \"good.bricks\"\n}\n\n// Ignore WAREM\n\nenum ROHST {\n  \"rohst.grain\",\n  \"rohst.tobacco\",\n  \"rohst.spices\",\n  \"rohst.sugarcane\",\n  \"rohst.cotton\",\n  \"rohst.vines\",\n  \"rohst.cocoa\",\n  \"rohst.grazing_land\",\n  \"rohst.tree\",\n  \"rohst.stones\",\n  \"rohst.ores\",\n  \"rohst.wild_game\",\n  \"rohst.fish\"\n}\n\nenum ROHSTFELD {\n  \"rohst_field.grain\",\n  \"rohst_field.tobacco\",\n  \"rohst_field.spices\",\n  \"rohst_field.sugarcane\",\n  \"rohst_field.cotton\",\n  \"rohst_field.vines\",\n  \"rohst_field.cocoa\",\n  \"rohst_field.grazing_land\",\n  \"rohst_field.tree\",\n  \"rohst_field.stones\",\n  \"rohst_field.ores\",\n  \"rohst_field.wild_game\",\n  \"rohst_field.fish\"\n}\n\nenum MILITAR {\n  \"buildings.military.wooden.wall\",\n  \"buildings.military.wooden.gate\",\n  \"buildings.military.wooden.watchtower\",\n  \"buildings.military.stone.wall\",\n  \"buildings.military.stone.gate\",\n  \"buildings.military.stone.watchtower\",\n  \"buildings.military.stone.gate_big\",\n  \"buildings.military.castle.small\",\n  \"buildings.military.castle.medium\",\n  \"buildings.military.castle.large\"\n}\n\nenum WOHNHAUS {\n  \"buildings.house.house\"\n}\n\nenum STRASSE {\n  \"buildings.street.dirt.street\",\n  \"buildings.street.stone.street\",\n  \"buildings.street.dirt.bridge\",\n  \"buildings.street.stone.bridge\",\n  \"buildings.street.square.0\",\n  \"buildings.street.square.1\",\n  \"buildings.street.square.2\",\n  \"buildings.street.square.3\"\n}\n\nenum BERGWERK {\n  \"buildings.mine.quarry\",\n  \"buildings.mine.iron\",\n  \"buildings.mine.iron_deep\",\n  \"buildings.mine.gold\"\n}\n\nenum HANDWERK {\n  \"buildings.production.weaver\",\n  \"buildings.production.butcher\",\n  \"buildings.production.flour_mill\",\n  \"buildings.production.bakery\",\n  \"buildings.production.tobacco\",\n  \"buildings.production.distillery\",\n  \"buildings.production.tailor\",\n  \"buildings.production.weaving_mill\",\n  \"buildings.production.stonemason\",\n  \"buildings.production.water_mill\",\n  \"buildings.production.ore_smelter\",\n  \"buildings.production.tool_maker\",\n  \"buildings.production.gold_smith\",\n  \"buildings.production.armourer\",\n  \"buildings.production.musket_maker\",\n  \"buildings.production.canon_foundry\"\n}\n\nenum FARM {\n  \"buildings.farm.hunter\",\n  \"buildings.farm.forester\",\n  \"buildings.field.forest\",\n  \"buildings.farm.grain\",\n  \"buildings.field.grain\",\n  \"buildings.farm.sheep\",\n  \"buildings.farm.cattle\",\n  \"buildings.farm.tobacco\",\n  \"buildings.field.tobacco\",\n  \"buildings.farm.spice\",\n  \"buildings.field.spice\",\n  \"buildings.farm.wine\",\n  \"buildings.field.wine\",\n  \"buildings.farm.sugarcane\",\n  \"buildings.field.sugarcane\",\n  \"buildings.farm.cotton\",\n  \"buildings.field.cotton\",\n  \"buildings.farm.cocoa\",\n  \"buildings.field.cocoa\"\n}\n\nenum HAFEN {\n  \"buildings.docks.warehouse.0\",\n  \"buildings.docks.warehouse.1\",\n  \"buildings.docks.warehouse.2\",\n  \"buildings.docks.warehouse.3\",\n  \"buildings.docks.fisher\",\n  \"buildings.docks.dock\",\n  \"buildings.docks.shipyard.small\",\n  \"buildings.docks.shipyard.large\"\n}\n\nenum DIVERS {\n  \"buildings.public.house\",\n  \"buildings.public.marketplace\",\n  \"buildings.public.chapel\",\n  \"buildings.public.church\",\n  \"buildings.public.cathedral\",\n  \"buildings.public.tavern\",\n  \"buildings.public.doctor\",\n  \"buildings.public.school\",\n  \"buildings.public.college\",\n  \"buildings.public.bathhouse\",\n  \"buildings.public.theater\",\n  \"buildings.public.firefighters\",\n  \"buildings.public.palace\",\n  \"buildings.public.gallows\",\n  \"buildings.public.monument\",\n  \"buildings.public.triumphal_arch\"\n}\n\nenum ABRISS {\n  \"demolish\"\n}\n\nenum LANDSCHAFT {\n  \"natives.0.head_lodge\",\n  \"natives.0.hut.0\",\n  \"natives.0.hut.1\",\n  \"natives.0.hut.2\",\n  \"natives.0.hut.3\",\n  \"natives.1.head_lodge\",\n  \"natives.1.hut.0\",\n  \"natives.1.hut.1\",\n  \"natives.1.hut.2\",\n  \"natives.1.hut.3\",\n  \"natives.pyramid\",\n  \"pirates.warehouse\",\n  \"pirates.1\",\n  \"pirates.2\",\n  \"pirates.tower\",\n  \"forest.mixed\",\n  \"forest.palm\"\n}\n\n// Ignore [BUBBLES]\n\n// Ignore [TUTOR]\n\n// Ignore [MELDUNG]\n\n// Ignore [STAEDTE]\n\n// Ignore [SHIPS]\n\n// Ignore [DEMO]\n\nconst lookup = {\n  GAME,\n  LEISTE,\n  PATH,\n  ENDLESSKIND,\n  PLAYCOL,\n  VIDEOKIND,\n  SPEECHKIND,\n  TUTORKIND,\n  KAMPAGNE,\n  FIGKIND,\n  WARE,\n  ROHST,\n  ROHSTFELD,\n  MILITAR,\n  WOHNHAUS,\n  STRASSE,\n  BERGWERK,\n  HANDWERK,\n  FARM,\n  HAFEN,\n  DIVERS,\n  ABRISS,\n  LANDSCHAFT\n};\n\nexport default lookup;\n\ntype GetKeys<U> = U extends Record<infer K, any> ? K : never;\ntype UnionToIntersection<U extends object> = {\n  [K in GetKeys<U>]: U extends Record<K, infer T> ? T : never\n};\nexport type TranslationKeys = keyof UnionToIntersection<\n  (typeof lookup)[keyof typeof lookup]\n>;\n\nexport type TranslationDomain = keyof typeof lookup;\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport { castleFromSaveGame } from \"../../game/world/castle\";\nimport { cityFromSaveGame } from \"../../game/world/city\";\nimport { Island, islandFromSaveGame } from \"../../game/world/island\";\nimport { kontorFromSaveGame } from \"../../game/world/kontor\";\nimport { Player, playerFromSaveGame } from \"../../game/world/player\";\nimport { producerFromSaveGame } from \"../../game/world/producer\";\nimport { shipFromSaveGame } from \"../../game/world/ship\";\nimport { soldierFromSaveGame } from \"../../game/world/soldier\";\nimport { taskFromSaveGame } from \"../../game/world/task\";\nimport { timersFromSaveGame } from \"../../game/world/timers\";\nimport { traderFromSaveGame } from \"../../game/world/trader\";\nimport World from \"../../game/world/world\";\nimport WorldGenerationSettings from \"../../game/world/world-generation-settings\";\nimport assert from \"../../util/assert\";\nimport Stream from \"../stream\";\nimport { Block, IslandBlock } from \"./block\";\nimport IslandLoader from \"./island-loader\";\nimport WorldGenerator from \"./world-generator\";\n\nexport default class GAMParser {\n  private worldGenerator: WorldGenerator | null;\n\n  constructor(private islandLoader: IslandLoader | null) {\n    this.worldGenerator = islandLoader\n      ? new WorldGenerator(islandLoader)\n      : null;\n  }\n\n  public parse(data: Stream) {\n    const blocks: Map<string, Block[]> = new Map();\n    while (!data.eof()) {\n      const block = Block.fromStream(data);\n      if (block.type !== \"INSELHAUS\") {\n        if (!blocks.has(block.type)) {\n          blocks.set(block.type, []);\n        }\n        blocks.get(block.type)!.push(block);\n      } else {\n        const lastIslandBlock = blocks.get(\"INSEL5\")![\n          blocks.get(\"INSEL5\")!.length - 1\n        ] as IslandBlock;\n        if (lastIslandBlock.inselHausBlocks === undefined) {\n          lastIslandBlock.inselHausBlocks = [];\n        }\n        lastIslandBlock.inselHausBlocks.push(block);\n      }\n    }\n    return blocks;\n  }\n\n  public async getWorld(data: Stream) {\n    const blocks = this.parse(data);\n\n    const { world, worldGenerationSettings } = await this.doParse(blocks);\n\n    await this.worldGenerator!.populateWorld(world, worldGenerationSettings);\n\n    return world;\n  }\n\n  public async doParse(blocks: Map<string, Block[]>) {\n    // console.log([...blocks.keys()].map(key => [key, blocks.get(key).length]));\n    console.log(\n      [...blocks.keys()]\n        .filter(\n          key => blocks.get(key)!.find(block => block.length > 0) !== undefined\n        )\n        .map(key => [key, blocks.get(key)])\n    );\n\n    let gameName = \"\";\n    if (blocks.has(\"NAME\")) {\n      // Missions don't have a name.\n      const nameBlock = blocks.get(\"NAME\")![0];\n      gameName = nameBlock.data.readString(nameBlock.length);\n    }\n\n    const playerBlock = blocks.get(\"PLAYER4\")![0];\n    const players = this.parsePlayers(playerBlock);\n\n    const islandBlocks = blocks.has(\"INSEL5\")\n      ? (blocks.get(\"INSEL5\") as IslandBlock[])\n      : [];\n    const islands = await this.parseIslands(islandBlocks);\n\n    const tasks = this.handleBlock(blocks, \"AUFTRAG4\", taskFromSaveGame);\n    const ships = this.handleBlock(blocks, \"SHIP4\", shipFromSaveGame);\n    const soldiers = this.handleBlock(blocks, \"SOLDAT3\", soldierFromSaveGame);\n    const kontors = this.handleBlock(blocks, \"KONTOR2\", kontorFromSaveGame);\n    const castles = this.handleBlock(blocks, \"MILITAR\", castleFromSaveGame);\n    const cities = this.handleBlock(blocks, \"STADT4\", cityFromSaveGame);\n    const producers = this.handleBlock(\n      blocks,\n      \"PRODLIST2\",\n      producerFromSaveGame\n    );\n\n    // TODO: HIRSCH2, WERFT, SIEDLER, ROHWACHS2, MARKT2, TURM, WIFF\n    let trader = null;\n    if (blocks.has(\"HANDLER\") && blocks.get(\"HANDLER\")![0].length > 0) {\n      trader = traderFromSaveGame(blocks.get(\"HANDLER\")![0].data);\n    }\n\n    assert(blocks.has(\"TIMERS\"));\n    assert(blocks.get(\"TIMERS\")!.length === 1);\n    const timers = timersFromSaveGame(blocks.get(\"TIMERS\")![0].data);\n\n    let worldGenerationSettings = WorldGenerationSettings.empty();\n    if (blocks.has(\"SZENE\")) {\n      const data = blocks.get(\"SZENE\")![0].data;\n      worldGenerationSettings = WorldGenerationSettings.fromSaveGame(data);\n    }\n\n    const world = new World(\n      islands,\n      players,\n      tasks,\n      gameName,\n      soldiers,\n      ships,\n      kontors,\n      castles,\n      cities,\n      trader,\n      timers,\n      producers\n    );\n\n    return { world, worldGenerationSettings };\n  }\n\n  private handleBlock<T>(\n    blocks: Map<string, Block[]>,\n    name: string,\n    fromSaveGame: (data: Stream) => T\n  ): T[] {\n    if (!blocks.has(name)) {\n      return [];\n    }\n    const entities: T[] = [];\n    for (const block of blocks.get(name)!) {\n      while (!block.data.eof()) {\n        entities.push(fromSaveGame(block.data));\n      }\n    }\n    return entities;\n  }\n\n  private async parseIslands(islandBlocks: IslandBlock[]) {\n    const islands: Island[] = [];\n    if (!this.islandLoader) {\n      return islands;\n    }\n\n    for (const islandBlock of islandBlocks) {\n      const island = islandFromSaveGame(islandBlock.data);\n      const islandBuildingBlocks =\n        islandBlock.inselHausBlocks !== undefined\n          ? islandBlock.inselHausBlocks\n          : [];\n\n      let islandTopBlock = Block.empty(\"INSELHAUS\");\n      let islandBottomBlock;\n      if (!island.differsFromBaseIsland && islandBuildingBlocks.length <= 1) {\n        if (islandBuildingBlocks.length === 1) {\n          islandTopBlock = islandBuildingBlocks[0];\n        }\n\n        const islandFile = await this.islandLoader.loadIslandFile(island);\n\n        // The basis block contains the same information already present in\n        // the island block of the savegame. We can safely skip over it.\n        const islandBasisBlock = Block.fromStream(islandFile);\n        assert(islandBasisBlock.type === \"INSEL5\");\n\n        islandBottomBlock = Block.fromStream(islandFile);\n        assert(islandBottomBlock.type === \"INSELHAUS\");\n        // TODO: There are some more HIRSCH blocks we ignore.\n      } else {\n        assert(\n          islandBuildingBlocks.length >= 1 && islandBuildingBlocks.length <= 2\n        );\n        islandBottomBlock = islandBuildingBlocks[0];\n        if (islandBuildingBlocks.length === 2) {\n          islandTopBlock = islandBuildingBlocks[1];\n        }\n      }\n      this.islandLoader.setIslandFields(island, [\n        islandBottomBlock,\n        islandTopBlock\n      ]);\n\n      islands.push(island);\n    }\n    return islands;\n  }\n\n  private parsePlayers(block: Block) {\n    const players: Player[] = [];\n    while (!block.data.eof()) {\n      players.push(playerFromSaveGame(block.data));\n    }\n    return players;\n  }\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\n\nexport type Trader = ReturnType<typeof traderFromSaveGame>;\n\nexport function traderFromSaveGame(data: Stream) {\n  const _1 = data.read32();\n  const _2 = data.read(5 * 4);\n  const goods = parseGoods(data);\n  const _3 = data.read(292);\n\n  console.log(\"trader\", _1, _2, goods, _3);\n\n  return {\n    goods\n  };\n}\n\nfunction parseGoods(data: Stream) {\n  const goods = [];\n  for (let i = 0; i < 24; i++) {\n    goods.push({\n      goodId: data.read32(),\n      _1: data.read32(),\n      _2: data.read32()\n    });\n  }\n  return goods;\n}\n","import FileSystem from \"../filesystem\";\nimport lookup, { TranslationKeys } from \"./translations\";\n\nconst translations: Map<TranslationKeys, string> = new Map();\n\nexport default function t(key: TranslationKeys): string {\n  return translations.get(key) || \"?\";\n}\n\nexport async function loadTranslations(fs: FileSystem) {\n  const jsonData = JSON.parse(\n    await fs.openAndGetContentAsText(\"/translations.json\")\n  );\n  for (const domain of Object.keys(jsonData)) {\n    const keyToIdxMapping = (lookup as any)[domain];\n\n    for (const translationIdx in keyToIdxMapping) {\n      if (parseInt(translationIdx, 10) >= 0) {\n        const translationKey = keyToIdxMapping[translationIdx];\n        translations.set(translationKey, jsonData[domain][translationIdx]);\n      }\n    }\n  }\n}\n","import { BitmapText, Container, Sprite } from \"pixi.js\";\nimport FileSystem from \"../../filesystem\";\nimport GAMParser from \"../../parsers/GAM/gam-parser\";\nimport t from \"../../translation/translator\";\nimport assert from \"../../util/assert\";\nimport MenuStructure, { ScreenConfig } from \"../menu-structure\";\n\nexport default class Missions implements ScreenConfig {\n  public buttons = [\n    this.renderNewGame.bind(this),\n    this.renderLoadGame.bind(this),\n    async () => {\n      await this.menuStructure.renderScreen(\"menu_loading\");\n      this.menuStructure.emit(\"load-game\", \"/saves/lastgame.gam\");\n    },\n    async () => this.menuStructure.renderScreen(\"menu_main\"),\n    async (stage: Container) => {\n      this.currentPage = Math.max(0, this.currentPage - 1);\n      await this.renderNewGame(stage);\n    },\n    async (stage: Container) => {\n      this.currentPage = Math.min(\n        Math.ceil(this.newGameLines.length / this.ROWS) - 1,\n        this.currentPage + 1\n      );\n      await this.renderNewGame(stage);\n    }\n  ];\n\n  private readonly ROWS = 14;\n\n  private readonly SCROLL_UP = \"menu-31011\";\n  private readonly SCROLL_DOWN = \"menu-31012\";\n\n  private newGameLines: Array<{\n    name: string;\n    difficulty?: number;\n    file?: WebKitFileEntry;\n  }> = [];\n\n  private currentPage = 0;\n  private gamParser: GAMParser;\n\n  constructor(\n    private readonly fs: FileSystem,\n    private readonly menuStructure: MenuStructure\n  ) {\n    this.gamParser = new GAMParser(null);\n  }\n\n  public async onLoad(stage: Container) {\n    await this.getNewGameLines();\n\n    await this.renderNewGame(stage);\n    await this.menuStructure._playMainMenuMusic();\n  }\n\n  public async renderNewGame(stage: Container) {\n    const currentTopItem = this.currentPage * this.ROWS;\n\n    for (let i = 0; i < this.ROWS; i++) {\n      const bitmapText = stage.getChildByName(\n        `menu-${31021 + i}`\n      ) as BitmapText;\n\n      bitmapText.off(\"click\");\n      bitmapText.visible = false;\n      bitmapText.interactive = false;\n      bitmapText.buttonMode = false;\n\n      if (i + currentTopItem < this.newGameLines.length) {\n        const line = this.newGameLines[i + currentTopItem];\n        bitmapText.text = line.name;\n        bitmapText.visible = true;\n        if (line.file) {\n          bitmapText.interactive = true;\n          bitmapText.buttonMode = true;\n          bitmapText.once(\"click\", async () => {\n            await this.menuStructure.renderScreen(\"menu_loading\");\n            this.menuStructure.emit(\"load-game\", line.file!.fullPath);\n          });\n        }\n      }\n    }\n    for (let i = 0; i < this.ROWS; i++) {\n      const sprite = stage.getChildByName(`menu-${31041 + i}`) as Sprite;\n      sprite.visible =\n        i + currentTopItem < this.newGameLines.length &&\n        !!this.newGameLines[i + currentTopItem].file;\n    }\n    for (let i = 0; i < this.ROWS; i++) {\n      const sprite = stage.getChildByName(`menu-${31061 + i}`) as Sprite;\n      sprite.visible = false;\n    }\n\n    stage.getChildByName(this.SCROLL_UP).visible = true;\n    stage.getChildByName(this.SCROLL_DOWN).visible = true;\n  }\n\n  public async renderLoadGame(stage: Container) {\n    const saves = (await this.fs.ls(\"/saves\", \".gam\")).filter(\n      save => save.name !== \"lastgame.gam\"\n    );\n\n    const maxSaveGames = 12;\n    for (let i = 0; i < this.ROWS; i++) {\n      const bitmapText = stage.getChildByName(\n        `menu-${31021 + i}`\n      ) as BitmapText;\n      bitmapText.visible = i < maxSaveGames;\n      if (i < saves.length) {\n        // TODO: Read name from Game.dat\n        bitmapText.text = `Game${i.toString().padStart(2, \"0\")}`;\n        bitmapText.interactive = true;\n        bitmapText.buttonMode = true;\n        bitmapText.once(\"click\", async () => {\n          await this.menuStructure.renderScreen(\"menu_loading\");\n          this.menuStructure.emit(\"load-game\", saves[i].fullPath);\n        });\n      } else {\n        bitmapText.text = `Empty${i.toString().padStart(2, \"0\")}`;\n      }\n    }\n    for (let i = 0; i < this.ROWS; i++) {\n      const sprite = stage.getChildByName(`menu-${31041 + i}`) as Sprite;\n      sprite.visible = false;\n    }\n    for (let i = 0; i < this.ROWS; i++) {\n      // TODO: Read players (from Game.dat ?)\n      const sprite = stage.getChildByName(`menu-${31061 + i}`) as Sprite;\n      sprite.visible = i < maxSaveGames;\n    }\n\n    stage.getChildByName(this.SCROLL_UP).visible = false;\n    stage.getChildByName(this.SCROLL_DOWN).visible = false;\n  }\n\n  private async getNewGameLines() {\n    const missions = await this.loadMissions();\n\n    this.newGameLines.push({ name: t(\"menu.divider.orginal_missions\") });\n\n    missions\n      .filter(mission => mission.missionNum !== -1)\n      .forEach(mission => {\n        this.newGameLines.push({\n          name: mission.name,\n          file: mission.file as WebKitFileEntry\n        });\n      });\n\n    this.newGameLines.push({ name: t(\"menu.divider.missions\") });\n\n    this.newGameLines.push({ name: t(\"menu.divider.new_missions\") });\n\n    missions\n      .filter(mission => mission.missionNum === -1)\n      .forEach(mission => {\n        this.newGameLines.push({\n          name: mission.name,\n          file: mission.file as WebKitFileEntry\n        });\n      });\n\n    this.newGameLines.push({ name: t(\"menu.divider.custom_missions\") });\n    const customMissions = await this.fs.ls(\"/missions-custom\", \".szs\");\n    customMissions.forEach(mission => {\n      this.newGameLines.push({\n        name: mission.name.replace(\".szs\", \"\"),\n        file: mission as WebKitFileEntry\n      });\n    });\n  }\n\n  private async loadMissions() {\n    const missions = await Promise.all(\n      (await this.fs.ls(\"/missions-original\", \".szs\")).map(async mission => {\n        const data = await this.fs.openAndGetContentAsStream(mission);\n        const blocks = this.gamParser.parse(data);\n        let ranking = -1; // NOT the number of stars\n        if (blocks.has(\"SZENE_RANKING\")) {\n          assert(blocks.get(\"SZENE_RANKING\")!.length === 1);\n          ranking = blocks.get(\"SZENE_RANKING\")![0].data.read32();\n        }\n        let campaignNum = -1;\n        if (blocks.has(\"SZENE_KAMPAGNE\")) {\n          assert(blocks.get(\"SZENE_KAMPAGNE\")!.length === 1);\n          campaignNum = blocks.get(\"SZENE_KAMPAGNE\")![0].data.read32();\n        }\n        // The missionNum denotes which\n        let missionNum = -1;\n        if (blocks.has(\"SZENE_MISSNR\")) {\n          assert(blocks.get(\"SZENE_MISSNR\")!.length === 1);\n          missionNum = blocks.get(\"SZENE_MISSNR\")![0].data.read32();\n        }\n\n        return {\n          blocks,\n          ranking,\n          campaignNum,\n          missionNum,\n          name: mission.name,\n          file: mission\n        };\n      })\n    );\n    missions.sort((a, b) => {\n      if (a.missionNum !== -1 && b.missionNum === -1) {\n        return -1;\n      } else if (a.missionNum === -1 && b.missionNum !== -1) {\n        return 1;\n      } else if (a.missionNum !== -1 && b.missionNum !== -1) {\n        if (a.missionNum < b.missionNum) {\n          return -1;\n        } else if (a.missionNum > b.missionNum) {\n          return 1;\n        } else {\n          // TODO: Sort missions within mission\n          return 0;\n        }\n      } else {\n        // TODO: Sort otherwise\n        return 0;\n      }\n    });\n\n    console.table(missions);\n\n    return missions;\n  }\n}\n","import { BaseTexture, Container, Sprite, Texture } from \"pixi.js\";\nimport { utils } from \"pixi.js\";\nimport FileSystem from \"../filesystem\";\nimport { textureFromUint8ArrayMP4 } from \"../util/pixi\";\nimport GADRenderer from \"./gad-renderer\";\nimport Missions from \"./menu/missions\";\nimport MusicPlayer from \"./music-player\";\n\ntype Callback = (stage: Container) => void;\n\nexport interface ScreenConfig {\n  onLoad: Callback;\n  buttons: Callback[];\n}\n\nexport default class MenuStructure extends utils.EventEmitter {\n  private readonly structure: { [k: string]: ScreenConfig } = {\n    menu_main: {\n      onLoad: () => this._playMainMenuMusic(),\n      buttons: [\n        async () => this.renderScreen(\"menu_missions\"),\n        async () => console.log(\"Multiplayer\"),\n        async () => {\n          // Credits\n          this.musicPlayer.stop();\n          const videoSprite = await this.loadVideoSprite(10);\n          videoSprite.width = 453 - 14;\n          videoSprite.height = 367 - 14;\n          videoSprite.position.set(500 + 7, 359 + 7);\n          this.gadRenderer.renderVideo(\n            videoSprite,\n            () => this._playMainMenuMusic\n          );\n        },\n        async () => {\n          // Intro\n          const videoSprite = await this.loadVideoSprite(58);\n          this.musicPlayer.stop();\n          this.gadRenderer.renderVideoFullscreen(videoSprite, () =>\n            this.renderScreen(\"menu_main\")\n          );\n        },\n        async () => console.log(\"Exit\")\n      ]\n    },\n    menu_missions: new Missions(this.fs, this),\n    menu_loading: {\n      onLoad: () => {\n        // Nothing to do\n      },\n      buttons: []\n    },\n    menu_mission_details: {\n      onLoad: () => {\n        // Nothing to do\n      },\n      buttons: [\n        async () => console.log(\"Start Mission\"),\n        async () => this.renderScreen(\"menu_missions\"),\n        async () => console.log(\"Highscores up\"),\n        async () => console.log(\"Highscores down\"),\n        async () => console.log(\"Sub-Mission 0\"),\n        async () => console.log(\"Sub-Mission 1\"),\n        async () => console.log(\"Sub-Mission 2\"),\n        async () => console.log(\"Sub-Mission 3\"),\n        async () => console.log(\"Sub-Mission 4\"),\n        async () => console.log(\"Mission Description up\"),\n        async () => console.log(\"Mission Description down\"),\n        async () => console.log(\"Mission Description Slider\")\n      ]\n    }\n  };\n\n  constructor(\n    private readonly fs: FileSystem,\n    private readonly gadRenderer: GADRenderer,\n    private readonly musicPlayer: MusicPlayer\n  ) {\n    super();\n  }\n\n  public async renderScreen(screen: string) {\n    const data = JSON.parse(\n      await this.fs.openAndGetContentAsText(`/screens/${screen}.json`)\n    );\n    console.log(data);\n    const config = this.structure[screen] || {\n      onLoad: () => {\n        /* Nothing to do */\n      },\n      buttons: []\n    };\n    await this.gadRenderer.render(data, config);\n  }\n\n  public _playMainMenuMusic() {\n    this.musicPlayer.play(\"1st Beginning\", true);\n  }\n\n  private async loadVideoSprite(videoNumber: number) {\n    const videoData = await this.fs.openAndGetContentAsUint8Array(\n      `/videos/${videoNumber}.mp4`\n    );\n    return Sprite.from(await textureFromUint8ArrayMP4(videoData));\n  }\n}\n","import pixiSound from \"pixi-sound\";\nimport FileSystem from \"../filesystem\";\nconst Sound = pixiSound.Sound;\n\nexport default class MusicPlayer {\n  private playing = false;\n  private readonly songs: Array<{ name: string; sound: pixiSound.Sound }> = [];\n  private currentSongIdx: number;\n\n  constructor(private readonly fs: FileSystem) {}\n\n  public async load() {\n    const files = await this.fs.ls(\"/music\");\n    for (const file of files) {\n      console.log(`Loading music ${file.name}`);\n      const data = (await this.fs.openAndGetContentAsUint8Array(file))\n        .buffer as ArrayBuffer;\n      this.songs.push({ name: file.name, sound: await this.loadSound(data) });\n      console.log(`Finished loading music ${file.name}`);\n    }\n  }\n\n  public play(name: string, loop: boolean = false) {\n    const song = this.songs.find(each => each.name === name + \".wav\");\n    if (song === undefined) {\n      console.warn(`Song ${name} not found.`);\n      return;\n    }\n    if (!song.sound.isPlaying) {\n      song.sound.play({ loop: loop });\n    }\n  }\n\n  public playAll() {\n    if (this.songs.length === 0) {\n      console.warn(\"No music to play found :(\");\n      return;\n    }\n    if (this.playing) {\n      console.warn(\"Music is already playing!\");\n      return;\n    }\n    this.stop();\n\n    this.playing = true;\n    this.currentSongIdx = -1;\n    this.playNext();\n  }\n\n  public stop() {\n    this.songs.forEach(song => song.sound.stop());\n  }\n\n  private playNext() {\n    this.currentSongIdx++;\n    if (this.currentSongIdx === this.songs.length) {\n      this.currentSongIdx = 0;\n    }\n    this.songs[this.currentSongIdx].sound.play(this.playNext.bind(this));\n  }\n\n  private loadSound(data: ArrayBuffer, preload: boolean = false) {\n    return new Promise<pixiSound.Sound>((resolve, reject) => {\n      const sound = Sound.from({\n        source: data,\n        preload: preload,\n        singleInstance: true,\n        loaded: (err: Error, preloadedSound: pixiSound.Sound | undefined) => {\n          if (preload) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(preloadedSound!);\n            }\n          }\n        }\n      });\n      if (!preload) {\n        resolve(sound);\n      }\n    });\n  }\n}\n","/*\n * The savegame data structure was reverse-engineered by Benedikt Freisen\n * as part of the 'mdcii-engine' project and released under GPLv2+.\n * https://github.com/roybaer/mdcii-engine\n */\n\nimport Stream from \"../../parsers/stream\";\nimport assert from \"../../util/assert\";\nimport { Rotation4 } from \"./world\";\n\nexport default class Field {\n  public static saveGameDataLength = 8;\n\n  public static fromSaveGame(data: Stream) {\n    const buildingId = data.read16() + 20000;\n    const x = data.read8();\n    const y = data.read8();\n    const bits = data.read32();\n\n    const rotation = (bits >> 0) & (2 ** 2 - 1);\n    const animation = (bits >> 2) & (2 ** 4 - 1);\n    const islandId = (bits >> 6) & (2 ** 8 - 1);\n    const islandCityNum = (bits >> 14) & (2 ** 3 - 1);\n    const random = (bits >> 17) & (2 ** 5 - 1);\n    const playerId = (bits >> 22) & (2 ** 4 - 1);\n    const empty = (bits >> 26) & (2 ** 6 - 1);\n    if (empty !== 0) {\n      // empty is sometimes 51.\n      // console.warn(`Expected 0, got ${empty}.`);\n    }\n\n    return new Field(\n      buildingId,\n      x,\n      y,\n      islandId,\n      islandCityNum,\n      rotation as Rotation4,\n      animation,\n      random,\n      playerId\n    );\n  }\n\n  constructor(\n    public fieldId: number,\n    public x: number,\n    public y: number,\n    public islandId: number,\n    public islandCityNum: number,\n    public rotation: Rotation4,\n    public ani: number,\n    public random: number,\n    public playerId: number\n  ) {}\n}\n","import FileSystem from \"../../filesystem\";\nimport FieldType from \"../../game/field-type\";\nimport Field from \"../../game/world/field\";\nimport { Island } from \"../../game/world/island\";\nimport assert from \"../../util/assert\";\nimport { Block } from \"./block\";\n\nexport type IslandSizeId = 0 | 1 | 2 | 3 | 4;\nexport type IslandSizeName = \"lit\" | \"mit\" | \"med\" | \"big\" | \"lar\";\ninterface IslandSize {\n  id: IslandSizeId;\n  name: IslandSizeName;\n  maxSize: number;\n}\n\nexport default class IslandLoader {\n  private readonly islandSizes: IslandSize[] = [\n    {\n      id: 0,\n      name: \"lit\",\n      maxSize: 35\n    },\n    {\n      id: 1,\n      name: \"mit\",\n      maxSize: 45\n    },\n    {\n      id: 2,\n      name: \"med\",\n      maxSize: 55\n    },\n    {\n      id: 3,\n      name: \"big\",\n      maxSize: 85\n    },\n    {\n      id: 4,\n      name: \"lar\",\n      maxSize: 100\n    }\n  ];\n\n  constructor(\n    private fs: FileSystem,\n    private fieldData: ReadonlyMap<number, FieldType>\n  ) {}\n\n  public async loadIslandFile(island: Island) {\n    const climate = island.isSouth ? \"south\" : \"north\";\n    const islandNumber = island.numBaseIsland.toString().padStart(2, \"0\");\n    for (const islandSize of this.islandSizes) {\n      if (island.size.x <= islandSize.maxSize) {\n        return this.fs.openAndGetContentAsStream(\n          `/islands/${climate}/${islandSize.name}${islandNumber}.scp`\n        );\n      }\n    }\n\n    throw new Error(\"Could not load island\");\n  }\n\n  public async loadIslandFileByName(name: string) {\n    return this.fs.openAndGetContentAsStream(`/islands/${name}.scp`);\n  }\n\n  public async loadRandomIslandFile(\n    sizeId: 0 | 1 | 2 | 3 | 4,\n    climate: \"NORTH\" | \"SOUTH\" | \"ANY\"\n  ) {\n    const islandSize = this.islandSizes.find(size => size.id === sizeId);\n    if (islandSize === undefined) {\n      throw new Error(\"This should never happen.\");\n    }\n\n    const islandFiles = [];\n    if ([\"ANY\", \"NORTH\"].includes(climate)) {\n      islandFiles.push(\n        ...(await this.loadIslandsWithSizeAndClimate(islandSize.name, \"north\"))\n      );\n    }\n    if ([\"ANY\", \"SOUTH\"].includes(climate)) {\n      islandFiles.push(\n        ...(await this.loadIslandsWithSizeAndClimate(islandSize.name, \"south\"))\n      );\n    }\n\n    const randomIslandFile =\n      islandFiles[Math.floor(Math.random() * islandFiles.length)];\n\n    return {\n      data: await this.fs.openAndGetContentAsStream(\n        randomIslandFile.file.fullPath\n      ),\n      isSouth: randomIslandFile.climate === \"south\",\n      id: randomIslandFile.id\n    };\n  }\n\n  public setIslandFields(island: Island, blocks: Block[]) {\n    island.fields = [];\n    for (let x = 0; x < island.size.x; x++) {\n      island.fields.push(new Array(island.size.y).fill(null));\n    }\n    for (const block of blocks) {\n      const parsedFields = this.parseIslandFields(island, block);\n      for (let x = 0; x < island.size.x; x++) {\n        for (let y = 0; y < island.size.y; y++) {\n          const parsedField = parsedFields[x][y];\n          if (parsedField === null) {\n            continue;\n          }\n          island.fields[x][y] = parsedField;\n        }\n      }\n    }\n  }\n\n  private parseIslandFields(\n    island: Island,\n    block: Block\n  ): Array<Array<Field | null>> {\n    const data = block.data;\n    const dataLength = block.length;\n\n    const fields: Field[][] = [];\n    for (let x = 0; x < island.size.x; x++) {\n      fields.push(new Array(island.size.y).fill(null));\n    }\n\n    for (let i = 0; i < dataLength / Field.saveGameDataLength; i++) {\n      const field = Field.fromSaveGame(data);\n      assert(field.x < island.size.x);\n      assert(field.y < island.size.y);\n      fields[field.x][field.y] = field;\n    }\n\n    return fields;\n  }\n\n  private async loadIslandsWithSizeAndClimate(\n    sizeName: IslandSizeName,\n    climate: \"north\" | \"south\"\n  ) {\n    return (await this.fs.ls(`/islands/${climate}`))\n      .filter(islandFile => islandFile.name.startsWith(sizeName))\n      .filter(islandFile => islandFile.name.match(/\\d\\d\\.scp$/) !== null)\n      .map(file => {\n        return {\n          file: file,\n          climate: climate,\n          id: parseInt(file.name.substr(3, 2), 10)\n        };\n      });\n  }\n}\n","import { Spritesheet, Texture } from \"pixi.js\";\nimport FileSystem from \"./filesystem\";\nimport { textureFromUint8ArrayPNG } from \"./util/pixi\";\n\nexport default class SpriteLoader {\n  private textures: Map<string, Map<number, Texture>> = new Map();\n\n  constructor(private readonly fs: FileSystem) {}\n\n  public getTextures = async (directory: string) => {\n    directory = `/gfx/${directory}`;\n    if (!this.textures.has(directory)) {\n      await this.loadTextures(directory);\n    }\n    return this.textures.get(directory)!;\n  };\n\n  private loadTextures = async (directory: string) => {\n    const textureMap = new Map();\n\n    const files = await this.fs.ls(directory);\n    for (const file of files) {\n      const fileExtension = file.name.substr(file.name.lastIndexOf(\".\") + 1);\n      if (fileExtension === \"png\") {\n        const dataFileName =\n          file.fullPath.substring(0, file.fullPath.lastIndexOf(\".\")) + \".json\";\n        const spriteSheetData = JSON.parse(\n          await this.fs.openAndGetContentAsText(dataFileName)\n        );\n\n        const spriteSheetImageData = await this.fs.openAndGetContentAsUint8Array(\n          file\n        );\n        const tex = textureFromUint8ArrayPNG(spriteSheetImageData);\n        const spritesheet = new Spritesheet(tex.baseTexture, spriteSheetData);\n\n        const textures = await new Promise<{ [key: string]: Texture }>(\n          (resolve, reject) => {\n            spritesheet.parse((sheet: any, hmm: any) => {\n              // This appears to be a bug.\n              resolve(sheet as { [key: string]: Texture });\n            });\n          }\n        );\n\n        for (const gfxId of Object.keys(textures)) {\n          const texture = textures[gfxId];\n          textureMap.set(parseInt(gfxId, 10), texture);\n        }\n      }\n    }\n    this.textures.set(directory, textureMap);\n  };\n}\n","// prettier-ignore\nconst idxToColors = new Uint8Array([\n  0x00, 0x00, 0x00,\n  0x80, 0x00, 0x00,\n  0x00, 0x80, 0x00,\n  0x80, 0x80, 0x00,\n  0x00, 0x00, 0x80,\n  0x6d, 0x1f, 0x6c,\n  0x00, 0x80, 0x80,\n  0xc0, 0xc0, 0xc0,\n  0xff, 0x00, 0xff,\n  0xff, 0x00, 0xff,\n  0x00, 0x00, 0x00,\n  0x00, 0x04, 0x04,\n  0x00, 0x08, 0x08,\n  0x00, 0x10, 0x00,\n  0x0b, 0x06, 0x03,\n  0x15, 0x08, 0x00,\n  0x25, 0x04, 0x00,\n  0x00, 0x14, 0x04,\n  0x06, 0x16, 0x06,\n  0x00, 0x21, 0x00,\n  0x03, 0x26, 0x03,\n  0x0e, 0x1c, 0x05,\n  0x08, 0x31, 0x04,\n  0x20, 0x18, 0x00,\n  0x1b, 0x2c, 0x00,\n  0x0a, 0x0c, 0x12,\n  0x08, 0x1c, 0x14,\n  0x18, 0x16, 0x10,\n  0x23, 0x17, 0x0c,\n  0x01, 0x29, 0x15,\n  0x0c, 0x2c, 0x13,\n  0x18, 0x2b, 0x11,\n  0x23, 0x29, 0x0f,\n  0x0a, 0x16, 0x25,\n  0x0a, 0x2c, 0x25,\n  0x24, 0x1f, 0x1f,\n  0x22, 0x31, 0x1d,\n  0x12, 0x24, 0x2c,\n  0x26, 0x2e, 0x29,\n  0x13, 0x22, 0x40,\n  0x04, 0x3d, 0x06,\n  0x10, 0x3b, 0x06,\n  0x15, 0x3e, 0x08,\n  0x25, 0x3d, 0x04,\n  0x0e, 0x3c, 0x28,\n  0x21, 0x3b, 0x23,\n  0x29, 0x3d, 0x20,\n  0x0e, 0x37, 0x40,\n  0x18, 0x3d, 0x3d,\n  0x21, 0x31, 0x3d,\n  0x25, 0x3d, 0x39,\n  0x11, 0x3a, 0x48,\n  0x29, 0x3d, 0x42,\n  0x11, 0x3c, 0x4e,\n  0x11, 0x3a, 0x5e,\n  0x0d, 0x4d, 0x00,\n  0x25, 0x4e, 0x00,\n  0x12, 0x4d, 0x08,\n  0x17, 0x4d, 0x25,\n  0x1c, 0x4d, 0x48,\n  0x19, 0x4d, 0x58,\n  0x16, 0x49, 0x6e,\n  0x11, 0x5f, 0x03,\n  0x25, 0x62, 0x00,\n  0x16, 0x5d, 0x3d,\n  0x16, 0x70, 0x2d,\n  0x15, 0x96, 0x24,\n  0x19, 0x7c, 0x6b,\n  0x1c, 0x94, 0x71,\n  0x00, 0x52, 0x8c,\n  0x08, 0x4a, 0x90,\n  0xf8, 0xc2, 0x30,\n  0x08, 0x52, 0x94,\n  0x08, 0x56, 0x94,\n  0x0c, 0x4e, 0x8c,\n  0x17, 0x52, 0x88,\n  0x00, 0x63, 0x8c,\n  0x18, 0x5e, 0x8c,\n  0x08, 0x5a, 0x9c,\n  0x0c, 0x5a, 0xa0,\n  0x12, 0x63, 0x94,\n  0x12, 0x65, 0x94,\n  0x0a, 0x75, 0x96,\n  0x08, 0x5a, 0xad,\n  0x08, 0x63, 0xa9,\n  0x0c, 0x67, 0xa5,\n  0x15, 0x68, 0xa5,\n  0x06, 0x79, 0xad,\n  0x13, 0x73, 0xab,\n  0x21, 0x73, 0xa5,\n  0x0a, 0x76, 0xb5,\n  0x18, 0x77, 0xb1,\n  0x21, 0x73, 0xad,\n  0x21, 0x7b, 0xb1,\n  0x18, 0x75, 0xbb,\n  0x08, 0x88, 0xbd,\n  0x0b, 0x88, 0xc4,\n  0x11, 0x88, 0xdc,\n  0x21, 0x9c, 0x84,\n  0x00, 0x9c, 0x94,\n  0x18, 0x9c, 0xb1,\n  0x00, 0x9c, 0xd6,\n  0x0c, 0x94, 0xce,\n  0xc4, 0x78, 0x5e,\n  0x0b, 0xad, 0xd8,\n  0x08, 0x94, 0xe7,\n  0x08, 0x94, 0xef,\n  0x0c, 0xa0, 0xe6,\n  0x1c, 0x98, 0xe2,\n  0x15, 0xb2, 0xe1,\n  0x10, 0xb1, 0xef,\n  0x18, 0xbd, 0xe7,\n  0x21, 0xbd, 0xde,\n  0x00, 0x94, 0xf7,\n  0x50, 0x96, 0xe2,\n  0x00, 0x9c, 0xff,\n  0xe0, 0x8a, 0x6c,\n  0xf2, 0x99, 0x7a,\n  0xe9, 0x71, 0x02,\n  0xff, 0x7d, 0x02,\n  0x08, 0xa5, 0xf7,\n  0xfb, 0xd8, 0x34,\n  0xf4, 0xaf, 0x2d,\n  0x10, 0x9c, 0xf7,\n  0x18, 0x94, 0xef,\n  0x14, 0x98, 0xfb,\n  0xff, 0xfc, 0x9d,\n  0x21, 0xa5, 0xf7,\n  0x36, 0x11, 0x04,\n  0x4a, 0x11, 0x04,\n  0x35, 0x2d, 0x0c,\n  0x46, 0x2c, 0x0b,\n  0x3c, 0x4a, 0x0b,\n  0x29, 0x63, 0x00,\n  0x3b, 0x5a, 0x13,\n  0x2d, 0x67, 0x00,\n  0x2e, 0x70, 0x00,\n  0x2d, 0x63, 0x08,\n  0x2c, 0x6a, 0x11,\n  0x37, 0x6d, 0x02,\n  0x37, 0x6a, 0x11,\n  0x42, 0x6a, 0x03,\n  0x44, 0x6c, 0x10,\n  0x3b, 0x2f, 0x26,\n  0x3e, 0x44, 0x29,\n  0x3b, 0x3d, 0x40,\n  0x3d, 0x4a, 0x3f,\n  0x3c, 0x61, 0x2d,\n  0x41, 0x5b, 0x44,\n  0x3f, 0x4d, 0x4b,\n  0x3c, 0x63, 0x4b,\n  0x31, 0x4c, 0x5a,\n  0x3f, 0x4b, 0x55,\n  0x2e, 0x62, 0x5a,\n  0x41, 0x65, 0x56,\n  0x3a, 0x5f, 0x68,\n  0x37, 0x62, 0x75,\n  0x37, 0x66, 0x8c,\n  0x5e, 0x16, 0x05,\n  0x59, 0x2a, 0x14,\n  0x5a, 0x40, 0x1a,\n  0x59, 0x60, 0x0b,\n  0x5a, 0x5e, 0x2d,\n  0x58, 0x50, 0x46,\n  0x57, 0x66, 0x44,\n  0x59, 0x4f, 0x50,\n  0x55, 0x67, 0x50,\n  0x5d, 0x6b, 0x4d,\n  0x5a, 0x58, 0x59,\n  0x56, 0x6f, 0x5a,\n  0x57, 0x63, 0x62,\n  0x58, 0x66, 0x75,\n  0x73, 0x21, 0x0a,\n  0x71, 0x41, 0x14,\n  0x6f, 0x5f, 0x11,\n  0x6f, 0x52, 0x39,\n  0x6c, 0x6f, 0x41,\n  0x6f, 0x6b, 0x5a,\n  0x6b, 0x68, 0x6b,\n  0x8f, 0x1d, 0x04,\n  0x89, 0x56, 0x0d,\n  0x8c, 0x58, 0x1f,\n  0x89, 0x63, 0x40,\n  0xac, 0x27, 0x05,\n  0xa6, 0x5d, 0x25,\n  0xc5, 0x31, 0x08,\n  0xcd, 0x54, 0x1e,\n  0x29, 0x7e, 0x02,\n  0x31, 0x7b, 0x00,\n  0x35, 0x7f, 0x00,\n  0x42, 0x7b, 0x00,\n  0x34, 0x7b, 0x0b,\n  0x36, 0x7b, 0x14,\n  0x36, 0x7a, 0x49,\n  0x31, 0x84, 0x04,\n  0x42, 0x84, 0x00,\n  0x31, 0x84, 0x14,\n  0x40, 0x84, 0x16,\n  0x35, 0x8c, 0x00,\n  0x35, 0x86, 0x37,\n  0x31, 0x8d, 0x32,\n  0x31, 0xa7, 0x1d,\n  0x53, 0x82, 0x09,\n  0x5b, 0x7e, 0x3e,\n  0x57, 0x79, 0x6b,\n  0x6c, 0x7b, 0x67,\n  0x52, 0xab, 0x06,\n  0x55, 0x91, 0x2f,\n  0x59, 0xb6, 0x29,\n  0x77, 0x7e, 0x3c,\n  0x77, 0x77, 0x69,\n  0x74, 0xb4, 0x30,\n  0xaa, 0x80, 0x2a,\n  0x91, 0x7d, 0x67,\n  0x85, 0xbb, 0x3a,\n  0xca, 0xac, 0x34,\n  0x2b, 0x85, 0x74,\n  0x53, 0x7f, 0x73,\n  0x7f, 0x7c, 0x73,\n  0x7d, 0x8e, 0x73,\n  0x4a, 0x7e, 0x7e,\n  0x49, 0x80, 0xa4,\n  0x76, 0x84, 0x7b,\n  0x76, 0x87, 0x8f,\n  0x2b, 0xa0, 0x7c,\n  0x5f, 0x9c, 0x84,\n  0x2d, 0xb5, 0x88,\n  0x3f, 0xc1, 0x8a,\n  0x5c, 0xa9, 0xbd,\n  0x3f, 0xde, 0xa7,\n  0x56, 0xed, 0xc8,\n  0x90, 0x89, 0x7b,\n  0x8d, 0x99, 0x85,\n  0x98, 0x95, 0x7f,\n  0xaf, 0x9a, 0x7c,\n  0x98, 0xa5, 0x8c,\n  0x98, 0xb2, 0x8d,\n  0xa9, 0xb0, 0x8c,\n  0xcc, 0xc2, 0x85,\n  0x9a, 0xb0, 0xad,\n  0xb9, 0xb6, 0xa0,\n  0xb3, 0xc8, 0xa7,\n  0xac, 0xd1, 0xcf,\n  0xdd, 0xda, 0xb5,\n  0xe1, 0xef, 0xe2,\n  0xfe, 0xfa, 0xe6,\n  0x00, 0x94, 0xff,\n  0xa0, 0xa0, 0xa4,\n  0x80, 0x80, 0x80,\n  0xff, 0x00, 0x00,\n  0x00, 0xff, 0x00,\n  0xff, 0xff, 0x00,\n  0x00, 0x00, 0xff,\n  0xff, 0x00, 0xff,\n  0x00, 0xff, 0xff,\n  0xff, 0xff, 0xff,\n]);\n\nexport default idxToColors;\n\nconst colorsToIdxInner: Record<string, number> = {};\n\nfor (let i = 0; i < idxToColors.length / 3; i++) {\n  const color =\n    (idxToColors[i * 3 + 0] << 24) +\n    (idxToColors[i * 3 + 1] << 16) +\n    (idxToColors[i * 3 + 2] << 8) +\n    0xff;\n  colorsToIdxInner[color.toString()] = i;\n}\n\nexport const colorsToIdx = colorsToIdxInner;\n","/**\n * This code is based on the bin-packing library by Jake Gordon licensed under MIT license.\n *\n * https://github.com/jakesgordon/bin-packing/blob/master/js/packer.js\n */\n\n/******************************************************************************\n This is a very simple binary tree based bin packing algorithm that is initialized\n with a fixed width and height and will fit each block into the first node where\n it fits and then split that node into 2 parts (down and right) to track the\n remaining whitespace.\n Best results occur when the input blocks are sorted by height, or even better\n when sorted by max(width,height).\n Inputs:\n ------\n w:       width of target rectangle\n h:      height of target rectangle\n blocks: array of any objects that have .w and .h attributes\n Outputs:\n -------\n marks each block that fits with a .fit attribute pointing to a\n node with .x and .y coordinates\n Example:\n -------\n var blocks = [\n { w: 100, h: 100 },\n { w: 100, h: 100 },\n { w:  80, h:  80 },\n { w:  80, h:  80 },\n etc\n etc\n ];\n var packer = new Packer(500, 500);\n packer.fit(blocks);\n for(var n = 0 ; n < blocks.length ; n++) {\n    var block = blocks[n];\n    if (block.fit) {\n      Draw(block.fit.x, block.fit.y, block.w, block.h);\n    }\n  }\n ******************************************************************************/\n\ninterface Rect {\n  w: number;\n  h: number;\n  fit?: Node;\n}\n\ninterface Node {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  used?: boolean;\n  down?: Node;\n  right?: Node;\n}\n\nexport default class BinPacker {\n  private readonly root: Node;\n\n  constructor(w: number, h: number) {\n    this.root = { x: 0, y: 0, w: w, h: h };\n  }\n\n  public addBlock(block: Rect) {\n    const node = this.findNode(this.root, block.w, block.h);\n    if (node) {\n      return this.splitNode(node, block.w, block.h);\n    } else {\n      return false;\n    }\n  }\n\n  private findNode(root: Node, w: number, h: number): Node | null {\n    if (root.used) {\n      return (\n        this.findNode(root.right!, w, h) || this.findNode(root.down!, w, h)\n      );\n    } else if (w <= root.w && h <= root.h) {\n      return root;\n    } else {\n      return null;\n    }\n  }\n\n  private splitNode(node: Node, w: number, h: number) {\n    node.used = true;\n    node.down = { x: node.x, y: node.y + h, w: node.w, h: node.h - h };\n    node.right = { x: node.x + w, y: node.y, w: node.w - w, h: h };\n    return node;\n  }\n}\n","const UPNG = require(\"upng-js/UPNG.js\");\n\nexport default class BSHImage {\n  public width: number;\n  public height: number;\n  public pixels: Uint8Array;\n\n  constructor(width: number, height: number, pixels: Uint8Array) {\n    this.width = width;\n    this.height = height;\n    this.pixels = pixels;\n  }\n\n  public toPNG(): ArrayBuffer {\n    return UPNG.encode([this.pixels.buffer], this.width, this.height);\n  }\n}\n","import * as log from \"loglevel\";\nimport { SmartBuffer, SmartBufferOptions } from \"smart-buffer\";\nimport FileSystem from \"../../filesystem\";\nimport assert from \"../../util/assert\";\nimport Stream from \"../stream\";\nimport BinPacker from \"./bin-packer\";\nimport colorPalette, { colorsToIdx } from \"./bsh-color-palette\";\nimport BSHImage from \"./bsh-image\";\n\nconst UPNG = require(\"upng-js/UPNG.js\");\n\ninterface AtlasData {\n  meta: {};\n  frames: {\n    [key: string]: {\n      frame: {\n        x: number;\n        y: number;\n        w: number;\n        h: number;\n      };\n      rotated: boolean;\n      trimmed: boolean;\n      spriteSourceSize: {\n        x: number;\n        y: number;\n        w: number;\n        h: number;\n      };\n      sourceSize: {\n        w: number;\n        h: number;\n      };\n    };\n  };\n}\n\nexport interface SpriteSheetConfig {\n  png: ArrayBuffer;\n  config: AtlasData;\n}\n\nexport default class BSHParser {\n  private readonly SPRITESHEET_SIZE = 2048;\n\n  private readonly HEADER_SIZE = 20;\n\n  private log: log.Logger;\n\n  constructor() {\n    this.log = log.getLogger(\"bsh-parser\");\n  }\n\n  public async decodeBSH(data: Stream) {\n    return this.decode(data, \"BSH\");\n  }\n\n  public async decodeZEI(data: Stream) {\n    return this.decode(data, \"ZEI\");\n  }\n\n  public createSpriteSheets(images: BSHImage[]): SpriteSheetConfig[] {\n    const sheets: SpriteSheetConfig[] = [];\n\n    let binPacker = new BinPacker(this.SPRITESHEET_SIZE, this.SPRITESHEET_SIZE);\n    let pixels = new Uint8Array(\n      this.SPRITESHEET_SIZE * this.SPRITESHEET_SIZE * 4\n    );\n    let atlasData: AtlasData = { meta: {}, frames: {} };\n\n    for (let i = 0; i < images.length; i++) {\n      const image = images[i];\n      let result = binPacker.addBlock({ w: image.width, h: image.height });\n      if (result === false) {\n        sheets.push({\n          png: UPNG.encode(\n            [pixels.buffer],\n            this.SPRITESHEET_SIZE,\n            this.SPRITESHEET_SIZE\n          ),\n          config: atlasData\n        });\n        binPacker = new BinPacker(this.SPRITESHEET_SIZE, this.SPRITESHEET_SIZE);\n        pixels = new Uint8Array(\n          this.SPRITESHEET_SIZE * this.SPRITESHEET_SIZE * 4\n        );\n        atlasData = { meta: {}, frames: {} };\n\n        result = binPacker.addBlock({ w: image.width, h: image.height });\n      }\n      if (!result) {\n        throw new Error(\"Could not add image to empty spritesheet!\");\n      }\n\n      const startX = result.x;\n      const startY = result.y;\n\n      let j = 0;\n      for (let y = 0; y < image.height; y++) {\n        for (let x = 0; x < image.width; x++) {\n          const idx =\n            (startX +\n              x +\n              this.SPRITESHEET_SIZE * y +\n              this.SPRITESHEET_SIZE * startY) *\n            4;\n          pixels[idx + 0] = image.pixels[j * 4 + 0];\n          pixels[idx + 1] = image.pixels[j * 4 + 1];\n          pixels[idx + 2] = image.pixels[j * 4 + 2];\n          pixels[idx + 3] = image.pixels[j * 4 + 3];\n          j++;\n        }\n      }\n\n      atlasData.frames[i.toString(10)] = {\n        frame: {\n          x: startX,\n          y: startY,\n          w: image.width,\n          h: image.height\n        },\n        rotated: false,\n        trimmed: false,\n        spriteSourceSize: {\n          x: 0,\n          y: 0,\n          w: image.width,\n          h: image.height\n        },\n        sourceSize: {\n          w: image.width,\n          h: image.height\n        }\n      };\n    }\n\n    sheets.push({\n      png: UPNG.encode(\n        [pixels.buffer],\n        this.SPRITESHEET_SIZE,\n        this.SPRITESHEET_SIZE\n      ),\n      config: atlasData\n    });\n\n    return sheets;\n  }\n\n  public async saveSpriteSheets(\n    fs: FileSystem,\n    sheets: SpriteSheetConfig[],\n    outName: string\n  ) {\n    await fs.mkdir(outName);\n    for (let i = 0; i < sheets.length; i++) {\n      await this.saveSpriteSheet(fs, sheets[i], i, outName);\n    }\n  }\n\n  public encodeBSH(images: BSHImage[]): Buffer {\n    const data = new SmartBuffer();\n    data.writeString(\"BSH\".padEnd(16, \"\\0\"), \"ascii\");\n    data.writeUInt32LE(42);\n\n    images.forEach(() => data.writeUInt32LE(42));\n\n    images.forEach((image, i) => {\n      const imageBuffer = this.encodeImage(image).toBuffer();\n      data.writeUInt32LE(data.writeOffset - this.HEADER_SIZE, 20 + i * 4);\n      data.writeBuffer(imageBuffer);\n    });\n\n    data.writeUInt32LE(data.length - this.HEADER_SIZE, 16);\n\n    return data.toBuffer();\n  }\n\n  /**\n   * The parsing algorithm is based on code from the 'mdcii-engine'\n   * project by Benedikt Freisen released under GPLv2+.\n   * https://github.com/roybaer/mdcii-engine\n   */\n  private async decode(data: Stream, extension: string) {\n    const fileType = data.readString(16);\n    assert(fileType === extension);\n\n    const fileLength = data.read32();\n    assert(this.HEADER_SIZE + fileLength === data.length);\n\n    const imageOffsets: number[] = [];\n    imageOffsets.push(data.read32());\n    const numImages = imageOffsets[0] / 4;\n\n    for (let i = 1; i < numImages; i++) {\n      imageOffsets.push(data.read32());\n    }\n    const images: BSHImage[] = [];\n\n    for (let i = 0; i < numImages; i++) {\n      data.seek(imageOffsets[i] + this.HEADER_SIZE);\n      const bshImage = this.decodeImage(data);\n      if (bshImage !== null) {\n        images.push(bshImage);\n      }\n    }\n\n    return images;\n  }\n\n  private decodeImage(data: Stream): BSHImage | null {\n    const width = data.read32();\n    const height = data.read32();\n    const type = data.read32();\n    const length = data.read32();\n\n    assert(width > 0);\n    assert(height > 0);\n\n    const BYTES_PER_PIXEL = 4;\n    const pixels = new Uint8Array(width * height * BYTES_PER_PIXEL);\n\n    // The image's current row we write to.\n    let rowIdx = 0;\n\n    let targetIdx = 0;\n\n    while (true) {\n      const ch = data.read8();\n      if (ch === 0xff) {\n        break;\n      }\n      if (ch === 0xfe) {\n        // Go to next row. All remaining pixels in this row are empty\n        rowIdx++;\n        targetIdx = rowIdx * width * BYTES_PER_PIXEL;\n      } else {\n        // New row. First check how many pixels are empty and increase targetIdx by that amount\n        const emptyPixels = ch;\n        targetIdx += emptyPixels * BYTES_PER_PIXEL;\n\n        // How many pixels are colored\n        const coloredPixels = data.read8();\n        for (let i = 0; i < coloredPixels; i++) {\n          const idx = data.read8() * 3;\n\n          pixels[targetIdx++] = colorPalette[idx];\n          pixels[targetIdx++] = colorPalette[idx + 1];\n          pixels[targetIdx++] = colorPalette[idx + 2];\n          pixels[targetIdx++] = 0xff;\n        }\n      }\n    }\n    return new BSHImage(width, height, pixels);\n  }\n\n  private encodeImage(image: BSHImage) {\n    const data = new SmartBuffer();\n    data\n      .writeUInt32LE(image.width)\n      .writeUInt32LE(image.height)\n      .writeUInt32LE(1)\n      .writeUInt32LE(42); // This is overwritten later on\n\n    let FEs = 0;\n    for (let y = 0; y < image.height; y++) {\n      let skipPixelsEmpty = 0;\n      let coloredPixels: number[] = [];\n      let state: \"empty\" | \"colored\" = \"empty\";\n      for (let x = 0; x < image.width; x++) {\n        const color =\n          (image.pixels[(y * image.width + x) * 4 + 0] << 24) +\n          (image.pixels[(y * image.width + x) * 4 + 1] << 16) +\n          (image.pixels[(y * image.width + x) * 4 + 2] << 8) +\n          (image.pixels[(y * image.width + x) * 4 + 3] << 0);\n\n        if (color === 0x00000000) {\n          // Transparent pixel\n          if (state === \"empty\") {\n            skipPixelsEmpty++;\n          } else if (state === \"colored\") {\n            while (FEs > 0) {\n              data.writeUInt8(0xfe);\n              FEs--;\n            }\n\n            while (skipPixelsEmpty > 0xfd) {\n              data.writeUInt8(0xfd);\n              data.writeUInt8(0);\n              skipPixelsEmpty -= 0xfd;\n            }\n            data.writeUInt8(skipPixelsEmpty);\n\n            for (let i = 0; i < coloredPixels.length; i += 0xff) {\n              const coloredPixelsSlice = coloredPixels.slice(i, i + 0xff);\n              if (i > 0) {\n                data.writeUInt8(0x00);\n              }\n              data.writeUInt8(coloredPixelsSlice.length);\n              coloredPixelsSlice.forEach(pixel => {\n                const colorIdx = colorsToIdx[pixel];\n                data.writeUInt8(colorIdx);\n              });\n            }\n            skipPixelsEmpty = 1;\n            coloredPixels = [];\n          }\n          state = \"empty\";\n        } else {\n          // Non-transparent pixel\n          state = \"colored\";\n          coloredPixels.push(color);\n        }\n      }\n\n      if (state === \"colored\") {\n        while (FEs > 0) {\n          data.writeUInt8(0xfe);\n          FEs--;\n        }\n\n        while (skipPixelsEmpty > 0xfd) {\n          data.writeUInt8(0xfd);\n          data.writeUInt8(0);\n          skipPixelsEmpty -= 0xfd;\n        }\n        data.writeUInt8(skipPixelsEmpty);\n        for (let i = 0; i < coloredPixels.length; i += 0xff) {\n          const coloredPixelsSlice = coloredPixels.slice(i, i + 0xff);\n          if (i > 0) {\n            data.writeUInt8(0x00);\n          }\n          data.writeUInt8(coloredPixelsSlice.length);\n          coloredPixelsSlice.forEach(pixel => {\n            data.writeUInt8(colorsToIdx[pixel.toString()]);\n          });\n        }\n      }\n      FEs++;\n    }\n    data.writeUInt8(0xff);\n\n    const padding = (4 - (data.length % 4)) % 4; // How many bytes left to make it dividable by 4?\n    for (let i = 0; i < padding; i++) {\n      data.writeUInt8(0x00);\n    }\n    data.writeUInt32LE(data.length, 12);\n\n    return data;\n  }\n\n  private async saveSpriteSheet(\n    fs: FileSystem,\n    sheet: SpriteSheetConfig,\n    spritesheetIndex: number,\n    outName: string\n  ) {\n    await fs.write(\n      `${outName}/sprite-sheet-${spritesheetIndex}.png`,\n      sheet.png\n    );\n    await fs.write(\n      `${outName}/sprite-sheet-${spritesheetIndex}.json`,\n      JSON.stringify(sheet.config)\n    );\n  }\n}\n","import * as log from \"loglevel\";\nimport assert from \"../../util/assert\";\n\nexport default class DATParser {\n  private log: log.Logger;\n\n  private variables: Map<string, any>;\n  private objects: any;\n  private template: object | null;\n  private gfxMap: Map<string, string>;\n\n  private lastGfxName: string | null;\n  private currentObject: string | null;\n  private currentNestedObject: string | null;\n  private currentItem: string | null;\n  private currentNestedItem: number | null;\n\n  constructor() {\n    this.log = log.getLogger(\"dat-parser\");\n  }\n\n  public parse(\n    content: string,\n    initialVariables: Map<string, any> = new Map()\n  ) {\n    this.variables = initialVariables;\n    this.objects = {};\n    this.template = null;\n    this.gfxMap = new Map();\n    this.lastGfxName = null;\n    this.currentObject = null;\n    this.currentNestedObject = null;\n    this.currentItem = null;\n    this.currentNestedItem = 0;\n\n    for (let line of content.split(\"\\n\")) {\n      line = line.split(\";\")[0].trim();\n      if (line.length === 0) {\n        continue;\n      }\n\n      if (\n        line.startsWith(\"Nahrung:\") ||\n        line.startsWith(\"Soldat:\") ||\n        line.startsWith(\"Turm:\")\n      ) {\n        // TODO: Skipped for now.\n        continue;\n      }\n\n      if (line === 'Include: \"TOOLS.INC\"') {\n        assert(initialVariables.size > 0);\n        continue;\n      }\n\n      let result;\n\n      if ((result = line.match(/^(@?)(\\w+)\\s*=\\s*((?:\\d+|\\+|\\w+)+)$/))) {\n        this.handleConstantAssignment(result);\n        continue;\n      }\n\n      if ((result = line.match(/^ObjFill:\\s*([\\w,]+)$/))) {\n        this.handleObjFill(result);\n        continue;\n      }\n\n      if ((result = line.match(/^Objekt:\\s*(\\w+)$/))) {\n        this.handleNestedObjectBegin(result);\n        continue;\n      }\n\n      if (line === \"EndObj\") {\n        this.handleNestedObjectEnd();\n        continue;\n      }\n\n      if ((result = line.match(/^(@?)(\\w+):\\s*(.*?)\\s*$/))) {\n        this.handleProperty(result);\n        continue;\n      }\n\n      throw new Error(\"Could not parse: \" + line);\n    }\n\n    return {\n      variables: this.mapToObject(this.variables),\n      objects: this.objects,\n      gfx_category_map: this.mapToObject(this.gfxMap)\n    };\n  }\n\n  private handleObjFill(result: RegExpMatchArray) {\n    assert(this.currentObject != null);\n    assert(this.currentItem != null);\n\n    const fill = result[1];\n    const item = this.objects[this.currentObject!].items[this.currentItem!];\n    if (fill.startsWith(\"0,MAX\")) {\n      assert(this.template === null);\n      this.template = item;\n    } else {\n      assert(item.hasOwnProperty(\"nested_objects\"));\n\n      const baseItemNum = this.getValue(null, fill, false);\n      const baseItem = this.objects[this.currentObject!].items[baseItemNum];\n      this.objects[this.currentObject!].items[\n        this.currentItem!\n      ] = this.deepCopy(baseItem);\n\n      if (this.lastGfxName != null) {\n        item.GfxCategory = this.lastGfxName;\n      }\n    }\n  }\n\n  private handleConstantAssignment(result: RegExpMatchArray) {\n    const isMath = result[1].length > 0;\n    const constant = result[2];\n    const value = result[3];\n\n    if (constant.startsWith(\"GFX\")) {\n      if (value === \"0\") {\n        this.gfxMap.set(constant, constant);\n      } else if (value.startsWith(\"GFX\")) {\n        const currentGfx = value.split(\"+\")[0];\n        if (this.gfxMap.has(currentGfx)) {\n          this.gfxMap.set(constant, this.gfxMap.get(currentGfx)!);\n        }\n      }\n    }\n\n    this.variables.set(constant, this.getValue(constant, value, isMath));\n  }\n\n  private handleNestedObjectBegin(result: RegExpMatchArray) {\n    const objectName = result[1];\n    if (this.currentObject === null) {\n      this.currentObject = objectName;\n      this.objects[objectName] = {\n        items: {}\n      };\n    } else if (this.currentNestedObject === null) {\n      assert(this.currentItem !== null);\n      this.currentNestedObject = objectName;\n      this.currentNestedItem = 0;\n      const item = this.objects[this.currentObject].items[this.currentItem!];\n      if (\n        item.nested_objects[this.currentNestedObject] === undefined ||\n        item.nested_objects[this.currentNestedObject][\n          this.currentNestedItem\n        ] === undefined\n      ) {\n        item.nested_objects[this.currentNestedObject] = {\n          [this.currentNestedItem]: {}\n        };\n      }\n    } else {\n      throw new Error(\n        \"It appears like there is more than one nesting level. \" +\n          \"This is not supported by this parser.\"\n      );\n    }\n  }\n\n  private handleNestedObjectEnd() {\n    if (this.currentNestedObject !== null) {\n      this.currentNestedObject = null;\n      this.currentNestedItem = null;\n    } else if (this.currentObject !== null) {\n      this.currentObject = null;\n      this.currentItem = null;\n    } else {\n      throw new Error(\"Received EndObj without current object!\");\n    }\n  }\n\n  private handleProperty(result: RegExpMatchArray) {\n    const isMath = result[1].length > 0;\n    const key = result[2];\n    const valueAsString = result[3];\n\n    const value = this.deepCopy(this.getValue(key, valueAsString, isMath));\n    this.variables.set(key, value);\n\n    if (key === \"Nummer\") {\n      if (this.currentNestedObject === null) {\n        this.currentItem = value;\n\n        this.objects[this.currentObject!].items[this.currentItem!] = {\n          nested_objects: {}\n        };\n        if (this.template !== null) {\n          const tmp = this.deepCopy(this.template);\n          this.objects[this.currentObject!].items[\n            this.currentItem!\n          ] = this.deepMerge(\n            tmp,\n            this.objects[this.currentObject!].items[this.currentItem!]\n          );\n        }\n      } else {\n        this.currentNestedItem = value;\n        this.objects[this.currentObject!].items[\n          this.currentItem!\n        ].nested_objects[this.currentNestedObject][\n          this.currentNestedItem!\n        ] = {};\n      }\n\n      return;\n    }\n    const item = this.objects[this.currentObject!].items[this.currentItem!];\n\n    if (key === \"Gfx\" && valueAsString.startsWith(\"GFX\")) {\n      this.lastGfxName = valueAsString.split(\"+\")[0];\n    }\n\n    if (this.currentNestedObject == null) {\n      item[key] = value;\n      if (this.lastGfxName != null) {\n        item.GfxCategory = this.lastGfxName;\n        item.GfxCategoryMapped = this.gfxMap.get(this.lastGfxName);\n      }\n    } else {\n      const nestedItem =\n        item.nested_objects[this.currentNestedObject][this.currentNestedItem!];\n      if (\n        Object.keys(nestedItem).includes(key) &&\n        this.isObject(nestedItem[key])\n      ) {\n        nestedItem[key] = this.deepMerge(nestedItem[key], value);\n      } else {\n        nestedItem[key] = value;\n      }\n    }\n  }\n\n  private getValue(\n    key: string | null,\n    value: string,\n    isMath: boolean,\n    arrayElement: number = -1\n  ): any {\n    let result;\n    if (isMath) {\n      if ((result = value.match(/^([+\\-])(\\d+)$/))) {\n        let oldVal = this.variables.has(key!)\n          ? this.deepCopy(this.variables.get(key!))\n          : null;\n        if (oldVal.toString() === \"RUINE_KONTOR_1\") {\n          // TODO\n          oldVal = 424242;\n        }\n\n        if (arrayElement > -1) {\n          if (key === \"Size\") {\n            oldVal = oldVal[arrayElement === 0 ? \"x\" : \"y\"];\n          } else {\n            oldVal = oldVal[arrayElement];\n          }\n        }\n\n        if (result[1] === \"+\") {\n          return oldVal + parseInt(result[2], 10);\n        }\n        if (result[1] === \"-\") {\n          return oldVal - parseInt(result[2], 10);\n        }\n\n        throw new Error(\"This code should not be reached.\");\n      }\n    }\n\n    if (value.match(/^[\\-+]?\\d+$/)) {\n      return parseInt(value, 10);\n    }\n    if (value.match(/^[\\-+]?\\d+\\.\\d+$/)) {\n      return parseFloat(value);\n    }\n    if ((result = value.match(/^([A-Za-z0-9_]+)(?:\\[(\\d+)])?$/))) {\n      const name = result[1];\n      const arrayIdx = result[2];\n      // TODO: When is value not in variables\n      const res = this.variables.has(name)\n        ? this.deepCopy(this.variables.get(name))\n        : name;\n      if (arrayIdx !== undefined) {\n        return res[arrayIdx];\n      }\n      return res;\n    }\n    if (value.indexOf(\",\") !== -1) {\n      const values = value\n        .split(\",\")\n        .map((v, index) => this.getValue(key, v.trim(), isMath, index));\n\n      if (key === \"Size\") {\n        return {\n          x: values[0],\n          y: values[1]\n        };\n      } else if (key === \"Ware\") {\n        const obj: any = {};\n        obj[values[0]] = values[1];\n        return obj;\n      } else {\n        return values;\n      }\n    }\n    if (\n      (result = value.match(\n        /^([A-z]+(?:\\[\\d+])?|\\d+)([+\\-])([A-z]+(?:\\[\\d+])?|\\d+)$/\n      ))\n    ) {\n      const op = result[2];\n      const val1 = this.getValue(key, result[1], false);\n      const val2 = this.getValue(key, result[3], false);\n      return op === \"+\" ? val1 + val2 : val1 - val2;\n    }\n\n    throw new Error(\"This code should not be reached.\");\n  }\n\n  private deepCopy(data: any): any {\n    return JSON.parse(JSON.stringify(data));\n  }\n\n  private isObject(item: any) {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n  }\n\n  /**\n   * Deep-Merge two objects.\n   *\n   * Based on code written by CplLL, which was based on code by Salakar.\n   *\n   * https://stackoverflow.com/a/37164538\n   */\n  private deepMerge(target: any, patch: any) {\n    const output = { ...target };\n    if (this.isObject(target) && this.isObject(patch)) {\n      Object.keys(patch).forEach(key => {\n        if (this.isObject(patch[key])) {\n          if (!(key in target)) {\n            Object.assign(output, { [key]: patch[key] });\n          } else {\n            output[key] = this.deepMerge(target[key], patch[key]);\n          }\n        } else {\n          Object.assign(output, { [key]: patch[key] });\n        }\n      });\n    }\n    return output;\n  }\n\n  private mapToObject<K, V>(map: Map<K, V>): object {\n    const obj: any = {};\n    map.forEach((value: V, key: K) => (obj[key] = value));\n    return obj;\n  }\n}\n","import { loadFFmpeg } from \"../../util/ffmpeg\";\n\ninterface FileInfo {\n  data: Uint8Array;\n  name: string;\n}\n\nexport default class SMKParser {\n  private ffmpeg: any;\n  private memory = 100_000_000;\n\n  public async parse(data: Uint8Array): Promise<Uint8Array> {\n    this.ffmpeg = await loadFFmpeg();\n\n    const inputFiles = [{ data, name: \"input.smk\" }];\n    try {\n      const args = this.prepareArguments(true);\n      return await this.convert(args, inputFiles);\n    } catch (e) {\n      if (e.message === \"only-one-audio-stream\") {\n        try {\n          const args = this.prepareArguments(false);\n          return await this.convert(args, inputFiles);\n        } catch (e) {\n          throw e;\n        }\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private prepareArguments(mergeAudio: boolean) {\n    const args = [\"-i\", \"input.smk\"];\n    if (mergeAudio) {\n      args.push(\n        ...[\n          \"-filter_complex\",\n          \"[0:a]amerge[c]\", // merge all audio streams into [c]\n          \"-map\",\n          \"[c]\", // use merged audio stream\n          \"-map\",\n          \"0:v:0\" // pass through first video stream\n        ]\n      );\n    }\n    args.push(\n      ...[\n        \"-ac\",\n        \"2\", // use stereo audio\n\n        // H.264 options\n        // https://trac.ffmpeg.org/wiki/Encode/H.264\n        \"-c:v\",\n        \"libx264\",\n        \"-pix_fmt\",\n        \"yuv420p\", // older pix_fmt required for Firefox\n        \"-preset\",\n        \"ultrafast\", // faster encoding, but bigger filesize\n        \"-movflags\",\n        \"+faststart\", // faster loading\n        \"output.mp4\"\n        // \"output.ogg\", // I wish I could use the free ogg format instead of mp4.\n      ]\n    );\n\n    return args;\n  }\n\n  private async convert(args: string[], inputFiles: FileInfo[]) {\n    console.log(`Converting video with arguments ${args.join(\" \")}`);\n\n    return new Promise<Uint8Array>((resolve, reject) => {\n      let output = \"\";\n      const handleOutput = (str: string) => {\n        output += str + \"\\n\";\n        console.log(str);\n      };\n      this.ffmpeg({\n        // apt update && apt -y install binutils pkg-config && cd /src/build && ./build_lgpl.sh\n        arguments: args,\n        files: inputFiles,\n        print: handleOutput,\n        printErr: handleOutput,\n        stdin: () => {\n          // Do nothing. This prevents the browser from \"prompt\"ing the user for input.\n        },\n        TOTAL_MEMORY: this.memory,\n        noExitRuntime: false,\n        returnCallback: (files: FileInfo[]) => {\n          if (\n            output.includes(\n              \"Cannot find a matching stream for unlabeled input pad 1\"\n            )\n          ) {\n            reject(new Error(\"only-one-audio-stream\"));\n          } else if (files.length !== 1) {\n            reject(new Error(\"unknown-error\"));\n          } else {\n            resolve(new Uint8Array(files[0].data));\n          }\n        }\n      });\n    });\n  }\n}\n","import WaveFile from \"wavefile\";\n\ninterface ADPCMChannelStatus {\n  predictor: number;\n  step_index: number;\n}\n\nexport interface RawSamples {\n  left: Int16Array;\n  right: Int16Array;\n  sampleRate: number;\n}\n\n/**\n * This code is based on FFmpeg:\n * https://github.com/FFmpeg/FFmpeg/blob/a8ce6fb425e07e60eb06d3f44992fdb91f23aafb/libavcodec/adpcm.c#L180-L204\n *\n * FFmpeg is licensed under the terms of the GNU Lesser General Public License 2.1 and later.\n */\nexport default class WAVParser {\n  // prettier-ignore\n  private readonly adpcmIndexTable = [\n    -1, -1, -1, -1, 2, 4, 6, 8,\n    -1, -1, -1, -1, 2, 4, 6, 8,\n  ];\n\n  // prettier-ignore\n  private readonly adpcmStepTable = [\n    7,     8,     9,    10,    11,    12,    13,    14,    16,    17,\n    19,    21,    23,    25,    28,    31,    34,    37,    41,    45,\n    50,    55,    60,    66,    73,    80,    88,    97,   107,   118,\n    130,   143,   157,   173,   190,   209,   230,   253,   279,   307,\n    337,   371,   408,   449,   494,   544,   598,   658,   724,   796,\n    876,   963,  1060,  1166,  1282,  1411,  1552,  1707,  1878,  2066,\n    2272,  2499,  2749,  3024,  3327,  3660,  4026,  4428,  4871,  5358,\n    5894,  6484,  7132,  7845,  8630,  9493, 10442, 11487, 12635, 13899,\n    15289, 16818, 18500, 20350, 22385, 24623, 27086, 29794, 32767,\n  ];\n\n  public decode(data: Uint8Array): RawSamples {\n    const wav = new WaveFile(data);\n\n    const bitsPerSample: number = (wav.fmt as any).bitsPerSample;\n    const sampleRate: number = (wav.fmt as any).sampleRate;\n    const channels: number = (wav.fmt as any).numChannels;\n\n    if (bitsPerSample !== 4) {\n      throw new Error(\"Can only convert .wav files with 4 bits per sample.\");\n    }\n    if (channels !== 2) {\n      throw new Error(\"Can only convert .wav files with stereo sound.\");\n    }\n\n    const c1: ADPCMChannelStatus = {\n      step_index: 0,\n      predictor: 0\n    };\n    const c2: ADPCMChannelStatus = {\n      step_index: 0,\n      predictor: 0\n    };\n\n    const samples: Buffer = (wav.data as any).samples;\n    const left = new Int16Array(samples.length);\n    const right = new Int16Array(samples.length);\n    for (let i = 0; i < samples.length; i++) {\n      left[i] = this.decodeADPCM_IMA(c1, samples[i] >>> 4);\n      right[i] = this.decodeADPCM_IMA(c2, samples[i] & 0x0f);\n    }\n\n    return {\n      left,\n      right,\n      sampleRate\n    };\n  }\n\n  public encode(rawData: RawSamples) {\n    const numSamples = rawData.left.length;\n    const samples = new Int16Array(numSamples * 2);\n    for (let i = 0; i < numSamples; i++) {\n      samples[i * 2 + 0] = rawData.left[i];\n      samples[i * 2 + 1] = rawData.right[i];\n    }\n\n    const wav = new WaveFile();\n    wav.fromScratch(2, rawData.sampleRate, \"16\", samples as any);\n    return wav.toBuffer();\n  }\n\n  private av_clip(n: number, min: number, max: number) {\n    return Math.min(Math.max(min, n), max);\n  }\n\n  private av_clip_int16(a: number) {\n    if ((a + 0x8000) & ~0xffff) {\n      return (a >> 31) ^ 0x7fff;\n    } else {\n      return a;\n    }\n  }\n\n  private decodeADPCM_IMA(c: ADPCMChannelStatus, nibble: number) {\n    const step = this.adpcmStepTable[c.step_index];\n    const stepIndex = this.av_clip(\n      c.step_index + this.adpcmIndexTable[nibble],\n      0,\n      88\n    );\n\n    const sign = nibble & 8;\n    const delta = nibble & 7;\n    const diff = ((2 * delta + 1) * step) >>> 3;\n    let predictor = c.predictor;\n    if (sign) {\n      predictor -= diff;\n    } else {\n      predictor += diff;\n    }\n\n    c.predictor = this.av_clip_int16(predictor);\n    c.step_index = stepIndex;\n\n    return c.predictor;\n  }\n}\n","import { uInt8ToBase64 } from \"../../util/util\";\nimport { SpriteSheetConfig } from \"../BSH/bsh-parser\";\nconst xml = require(\"xml\");\n\nexport default class BitmapFontGenerator {\n  public async createBitmapFont(sheets: SpriteSheetConfig[], fontName: string) {\n    const pages = [];\n    const chars = [];\n\n    for (let pageId = 0; pageId < sheets.length; pageId++) {\n      const sheet = sheets[pageId];\n\n      pages.push({\n        page: [\n          {\n            _attr: {\n              id: pageId,\n              file: `data:image/png;base64,${uInt8ToBase64(\n                new Uint8Array(sheet.png)\n              )}`\n              // file: `${pageId}.png`,\n            }\n          }\n        ]\n      });\n\n      for (const idx of Object.keys(sheet.config.frames)) {\n        const config = sheet.config.frames[idx];\n\n        const char = parseInt(idx, 10) + 32;\n        chars.push({\n          char: [\n            {\n              _attr: {\n                id: char,\n                x: config.frame.x,\n                y: config.frame.y,\n                width: config.frame.w,\n                height: config.frame.h,\n                xoffset: 0,\n                yoffset: 0,\n                xadvance: config.frame.w,\n                page: pageId,\n                chnl: 15,\n                letter: String.fromCharCode(char)\n              }\n            }\n          ]\n        });\n      }\n    }\n\n    const fontSize = sheets[0].config.frames[0].sourceSize.h;\n\n    // http://www.angelcode.com/products/bmfont/doc/file_format.html\n    // https://raw.githubusercontent.com/pixijs/examples/gh-pages/required/assets/desyrel.xml\n    const font: any = {\n      font: [\n        {\n          info: [\n            {\n              _attr: {\n                face: fontName,\n                size: fontSize,\n                padding: \"0,0,0,0\",\n                spacing: \"0,0\",\n                italic: \"0\",\n                bold: \"0\",\n                stretchH: \"100\",\n                smooth: \"1\", // unsure\n                aa: \"1\" // unsure\n                // charset\n                // unicode\n              }\n            }\n          ]\n        },\n        {\n          common: [\n            {\n              _attr: {\n                pages: sheets.length,\n                lineHeight: fontSize,\n                // base\n                // scaleW\n                // scaleH\n                packed: 0\n                // alphaChnl\n                // redChnl\n                // greenChnl\n                // blueChnl\n              }\n            }\n          ]\n        },\n        { pages },\n        { chars }\n      ]\n    };\n\n    return xml(font, { indent: \"  \" });\n  }\n}\n","import { TranslationDomain } from \"./translations\";\n\nexport default function parseTranslations(\n  data: string\n): Record<TranslationDomain, string[]> {\n  const translations: any = {};\n  let currentDomain: string | null = null;\n\n  for (const line of data.split(\"\\r\\n\")) {\n    if (currentDomain) {\n      if (line === \"[END]\") {\n        currentDomain = null;\n      } else {\n        translations[currentDomain].push(line);\n      }\n    } else {\n      if (line.startsWith(\"[\")) {\n        currentDomain = line.split(/[[\\]]/)[1];\n        translations[currentDomain] = [];\n      }\n    }\n  }\n\n  return translations as Record<TranslationDomain, string[]>;\n}\n","import * as React from \"react\";\nimport { ChangeEvent } from \"react\";\nimport { UploadLogger } from \"./upload\";\n\ninterface Props {\n  onUploaded: (file: File) => Promise<boolean>;\n  onReset: () => Promise<void>;\n  onSaveOrMissionUploaded: (\n    evt: ChangeEvent<HTMLInputElement>\n  ) => Promise<void>;\n  setLogger: (logger: UploadLogger) => void;\n}\n\ninterface State {\n  isUploading: boolean;\n  messages: Array<{ msg: string; type: \"info\" | \"warn\" | \"error\" }>;\n}\n\nexport default class UploadInfo extends React.Component<Props, State>\n  implements UploadLogger {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      isUploading: false,\n      messages: []\n    };\n\n    this.props.setLogger(this);\n  }\n\n  public render() {\n    return (\n      <div\n        style={{\n          marginLeft: \"1em\",\n          marginRight: \"1em\",\n          fontFamily: \"Arial\",\n          maxWidth: \"800px\",\n          lineHeight: 1.4\n        }}\n      >\n        <h1>Anno 2018</h1>\n        <p>\n          Welcome to Anno 2018, an effort to port twenty-year-old Anno 1602 to\n          the browser. This is in early development, however, you can already\n          load your savegames and start new games. Much of the actual simulation\n          is still missing though. For copyright reasons, we can't include the\n          original Anno 1602 files and graphics.{\" \"}\n          <strong>\n            You need own your own copy of Anno 1602 for Anno 2018 work.\n          </strong>\n        </p>\n        <p>\n          The following versions have been tested by us and confirmed to work:\n        </p>\n        <ul>\n          <li>German \"Anno 1602 Köngisedition\"</li>\n          <li>English \"Anno 1602 A.D.\" from GOG</li>\n        </ul>\n        <p>\n          Anno 2018 is tested in the latest versions of{\" \"}\n          <strong>Chrome (preferred, faster) and Firefox</strong> only. Other\n          browsers <em>might</em> work, but aren't supported.\n        </p>\n        <p>\n          To get started, follow these steps. You will need to \"upload\" your\n          Anno files on this website. Don't worry though, the files{\" \"}\n          <em>never</em> leave your PC and are only uploaded into your browser.\n          Once uploaded, the files remain in your browser and will be there when\n          you re-open this website.\n        </p>\n        <ol>\n          <li>\n            Find your Anno 1602 files and zip them. If you are using a version\n            of Anno 1602 which came with a physical CD, copy the videosmk and\n            music8 folders into your Anno 1602 root folder before creating the\n            zip file.\n          </li>\n          <li>\n            Use the upload button below to upload the zip file. The file should\n            be around 50MB if it doesn't contain music and videos, and around\n            500MB if it does.\n          </li>\n          <li>\n            <p>\n              Grab a coffee. The upload takes some time. Progress is being\n              logged below. Should anything go wrong, take a look at the error\n              message. It might tell you what to do. If it doesn't, make sure\n              you're using a recent version of Chrome or Firefox. If it is still\n              not working,{\" \"}\n              <a href=\"https://reddit.com/u/cmfcmf\">drop me a note at reddit</a>\n              , <a href=\"https://twitter.com/christianmflach\">twitter</a>, or{\" \"}\n              <a href=\"https://github.com/cmfcmf/Anno2018\">\n                create an issue at GitHub\n              </a>\n              . Make sure to include the upload progress output.\n            </p>\n            Upload:{\" \"}\n            <input\n              type={\"file\"}\n              multiple={false}\n              accept={\".zip\"}\n              onChange={this.zipUploaded}\n              disabled={this.state.isUploading}\n            />\n          </li>\n        </ol>\n\n        <h2>\n          Upload Progress <small>(newest at the top)</small>\n        </h2>\n        {this.state.messages.length === 0 && <p>Nothing yet...</p>}\n        <div style={{ fontSize: \"10px\" }}>\n          {this.state.messages.map((message, i) => (\n            <div key={i}>\n              <span\n                style={{\n                  color:\n                    message.type === \"info\"\n                      ? \"blue\"\n                      : message.type === \"warn\"\n                      ? \"orange\"\n                      : \"red\"\n                }}\n              >\n                {message.type.toUpperCase()}\n              </span>\n              : {message.msg}\n            </div>\n          ))}\n        </div>\n\n        <h2>Uploading custom missions and additional savegames</h2>\n        <p>\n          Use this button to upload additional missions or savegames after you\n          uploaded the main game:{\" \"}\n          <input\n            type={\"file\"}\n            multiple={true}\n            accept={\".szm,.szs,.gam\"}\n            onChange={this.props.onSaveOrMissionUploaded}\n          />\n        </p>\n\n        <h2>Resetting files</h2>\n        <p>\n          You can use the \"Reset all files\" button to delete all uploaded files\n          if needed: <button onClick={this.resetFiles}>Reset all files</button>\n        </p>\n      </div>\n    );\n  }\n\n  public readonly info = (msg: string) => {\n    this.log(msg, \"info\");\n  };\n\n  public readonly warn = (msg: string) => {\n    this.log(msg, \"warn\");\n  };\n\n  public readonly error = (msg: string) => {\n    this.log(msg, \"error\");\n  };\n\n  private readonly log = (msg: string, type: \"info\" | \"warn\" | \"error\") => {\n    this.setState((prevState: State) => {\n      return {\n        ...prevState,\n        messages: [\n          { msg, type },\n          ...prevState.messages.filter(\n            (message, i) => message.type !== \"info\" || i < 50\n          )\n        ]\n      };\n    });\n  };\n\n  private zipUploaded = async (evt: ChangeEvent<HTMLInputElement>) => {\n    const files = evt.target.files;\n    if (files === null || files.length !== 1) {\n      alert(\"Please select the zipped Anno1602 folder to upload.\");\n      return;\n    }\n    const file = files[0];\n    if (!file.name.endsWith(\".zip\")) {\n      alert(\"You need to upload a .zip file!\");\n      return;\n    }\n\n    this.setState({ isUploading: true });\n    const worked = await this.props.onUploaded(file);\n    this.setState({ isUploading: false });\n\n    if (worked) {\n      this.info(\"Upload finished. Please reload the page.\");\n      alert(\"Upload finished. Please reload the page.\");\n    } else {\n      this.error(\"The upload failed.\");\n      alert(\"The upload failed.\");\n    }\n  };\n\n  private resetFiles = async () => {\n    await this.props.onReset();\n    alert(\"All files deleted. The page will now refresh.\");\n    window.location.reload(true);\n  };\n}\n","import JSZip from \"jszip\";\nimport { JSZipObject } from \"jszip\";\nimport * as log from \"loglevel\";\nimport * as React from \"react\";\nimport { ChangeEvent } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport FileSystem from \"./filesystem\";\nimport BSHParser from \"./parsers/BSH/bsh-parser\";\nimport CODParser from \"./parsers/COD/cod-parser\";\nimport DATParser from \"./parsers/DAT/dat-parser\";\nimport SMKParser from \"./parsers/SMK/smk-parser\";\nimport Stream from \"./parsers/stream\";\n// import MP3Encoder from \"./parsers/WAV/mp3-encoder\";\nimport WAVParser from \"./parsers/WAV/wav-parser\";\nimport BitmapFontGenerator from \"./parsers/ZEI/bitmap-font-generator\";\nimport parseTranslations from \"./translation/translation-parser\";\nimport UploadInfo from \"./uploadInfo\";\nimport { findRootInZip } from \"./util/util\";\n\nconst escapeStringRegexp = require(\"escape-string-regexp\");\n\nexport interface UploadLogger {\n  readonly info: (msg: string) => void;\n  readonly warn: (msg: string) => void;\n  readonly error: (msg: string) => void;\n}\n\nexport default class UploadHandler {\n  private logger: UploadLogger;\n\n  constructor(private readonly fs: FileSystem) {\n    this.logger = log;\n  }\n\n  public async init() {\n    console.table(await this.fs.ls(\"/\"));\n  }\n\n  public render(game: HTMLElement) {\n    const notes = document.createElement(\"div\");\n    ReactDOM.render(\n      React.createElement(UploadInfo, {\n        onUploaded: this.uploadAndParse.bind(this),\n        onReset: this.reset.bind(this),\n        onSaveOrMissionUploaded: async (evt: ChangeEvent<HTMLInputElement>) => {\n          const files = evt.target.files;\n          if (files === null || files.length === 0) {\n            return;\n          }\n          await Promise.all(\n            Array.from(files).map(file => this.uploadSaveOrMission(file))\n          );\n          alert(\"Upload finished. The page will now refresh.\");\n          window.location.reload(true);\n        },\n        setLogger: this.setLogger.bind(this)\n      }),\n      game\n    );\n\n    game.appendChild(notes);\n  }\n\n  public async isUploaded() {\n    return this.fs.exists(\"/fields.dat\");\n  }\n\n  public setLogger(logger: UploadLogger) {\n    this.logger = logger;\n  }\n\n  private async reset() {\n    await this.fs.rmRoot();\n  }\n\n  private async uploadAndParse(file: File): Promise<boolean> {\n    let zip;\n    try {\n      await this.fs.write(\"/original.zip\", file);\n      const zipFileEntry = await this.fs.open(\"/original.zip\");\n      zip = await JSZip.loadAsync(zipFileEntry);\n    } catch (e) {\n      this.logger.error(`Could not upload the ZIP file: ${e.message}`);\n      return false;\n    }\n\n    try {\n      const annoRoot = findRootInZip(zip);\n      await this.fs.rmRoot();\n\n      await this.copyIslands(annoRoot);\n      await this.copySaves(annoRoot);\n      const customMissionPath = await this.parseTranslations(annoRoot);\n      await this.copyMissions(annoRoot, customMissionPath);\n      await this.decryptCODs(annoRoot);\n      await this.parseDATs();\n      await this.parseGADs(annoRoot);\n      await this.parseBSHs(annoRoot);\n      await this.parseZEIs(annoRoot);\n      await this.parseMusic(annoRoot);\n      await this.parseVideos(annoRoot);\n    } catch (e) {\n      this.logger.error(e.message);\n      return false;\n    }\n\n    return true;\n  }\n\n  private async uploadSaveOrMission(file: File) {\n    if (file.name.endsWith(\".gam\")) {\n      await this.fs.write(`/saves/${file.name}`, file);\n    } else {\n      await this.fs.write(`/missions-custom/${file.name}`, file);\n    }\n  }\n\n  private async parseDATs() {\n    return Promise.all(\n      [\n        [\"/fields.dat\", \"/fields.json\"],\n        [\"/animations.dat\", \"/animations.json\"]\n      ].map(async r => {\n        const inName = r[0];\n        const outName = r[1];\n        this.logger.info(`Started parsing \"${inName}\".`);\n\n        const parser = new DATParser();\n        const data = parser.parse(\n          await this.fs.openAndGetContentAsText(inName)\n        );\n        await this.fs.write(outName, JSON.stringify(data));\n\n        this.logger.info(`Finished parsing \"${inName}\".`);\n      })\n    );\n  }\n\n  private async parseGADs(annoRoot: JSZip) {\n    await this.fs.mkdir(\"/screens\");\n\n    const parser = new DATParser();\n\n    const toolsIncPath = \"GADDATA/TOOLS.INC\";\n    this.logger.info(`Started parsing \"${toolsIncPath}\".`);\n    const toolsIncFile = this.findFileCaseInsensitive(annoRoot, toolsIncPath);\n    const toolsIncData = parser.parse(await toolsIncFile.async(\"text\"));\n    const initialVariables = new Map(Object.entries(toolsIncData.variables));\n    this.logger.info(`Finished parsing \"${toolsIncPath}\".`);\n\n    const files = [\n      [\"Anno.gad\", \"\"],\n      [\"BASE.GAD\", \"menu_main\"],\n      [\"BAU.GAD\", \"\"],\n      [\"BAUKONT.GAD\", \"\"],\n      [\"BAUSHIP.GAD\", \"\"],\n      [\"BERGWERK.GAD\", \"\"],\n      [\"BUBBLE01.GAD\", \"\"],\n      [\"BUBBLE.GAD\", \"\"],\n      [\"CHAT.GAD\", \"\"],\n      [\"CLIENT.GAD\", \"\"],\n      [\"CTRL.GAD\", \"\"],\n      [\"DISK.GAD\", \"\"],\n      // [\"ENDE_DEM.GAD\", \"\"],\n      [\"ENDE.GAD\", \"menu_points\"],\n      [\"FARBWAHL.GAD\", \"menu_player_selection\"],\n      [\"HANDEL.GAD\", \"\"],\n      [\"HOST.GAD\", \"menu_missions\"],\n      [\"INFO.GAD\", \"\"],\n      [\"INFRA.GAD\", \"\"],\n      [\"KONTOR.GAD\", \"\"],\n      [\"LAGER.GAD\", \"\"],\n      [\"LEIST.GAD\", \"\"],\n      [\"MARKT.GAD\", \"\"],\n      [\"MILITAR.GAD\", \"\"],\n      [\"MISSION.GAD\", \"menu_mission_details\"],\n      [\"MISSZIEL.GAD\", \"\"],\n      [\"MKSHIP.GAD\", \"\"],\n      [\"MKSOLDAT.GAD\", \"\"],\n      [\"MUSIK.GAD\", \"\"],\n      [\"OPTION.GAD\", \"\"],\n      [\"PIRAT.GAD\", \"\"],\n      [\"PIRATORD.GAD\", \"\"],\n      [\"PLANTAGE.GAD\", \"\"],\n      [\"PROD.GAD\", \"\"],\n      [\"ROUTE.GAD\", \"\"],\n      [\"SCAPE.GAD\", \"\"],\n      [\"SHIP.GAD\", \"\"],\n      [\"SHIPLIST.GAD\", \"\"],\n      [\"SIEDLER.GAD\", \"\"],\n      [\"SKSHIP.GAD\", \"\"],\n      [\"SKSOLDAT.GAD\", \"\"],\n      [\"STADT.GAD\", \"\"],\n      [\"STADTLST.GAD\", \"\"],\n      // [\"TOOLS.INC\", \"\"],\n      [\"TRADE.GAD\", \"\"],\n      [\"TRADER.GAD\", \"\"],\n      [\"TRANSFER.GAD\", \"\"],\n      [\"TRIBUT.GAD\", \"\"],\n      [\"TUTOR.GAD\", \"\"],\n      [\"VERTRAG.GAD\", \"\"],\n      [\"WAITLOAD.GAD\", \"menu_loading\"],\n      [\"WERFT.GAD\", \"\"]\n    ];\n\n    for (const r of files) {\n      if (r[1] === \"\") {\n        r[1] = r[0];\n      }\n      const inName = `GADDATA/${r[0]}`;\n      const outName = `/screens/${r[1]}.json`;\n      this.logger.info(`Started parsing \"${inName}\".`);\n\n      const gadFile = this.findFileCaseInsensitive(annoRoot, inName);\n      const data = parser.parse(await gadFile.async(\"text\"), initialVariables);\n      await this.fs.write(outName, JSON.stringify(data));\n\n      this.logger.info(`Finished parsing \"${inName}\".`);\n    }\n  }\n\n  private async decryptCODs(annoRoot: JSZip) {\n    const parser = new CODParser();\n\n    return Promise.all(\n      [[\"haeuser.cod\", \"/fields.dat\"], [\"figuren.cod\", \"/animations.dat\"]].map(\n        async r => {\n          const inName = r[0];\n          const outName = r[1];\n\n          this.logger.info(`Started parsing \"${inName}\".`);\n\n          const codFile = this.findFileCaseInsensitive(annoRoot, inName);\n          const codStream = await Stream.fromZipObject(codFile);\n          await this.fs.write(outName, parser.decrypt(codStream));\n\n          this.logger.info(`Finished parsing \"${inName}\".`);\n        }\n      )\n    );\n  }\n\n  private async parseBSHs(annoRoot: JSZip) {\n    const parser = new BSHParser();\n\n    const files = [\n      [\"GFX/NUMBERS\", \"NUMBERS\"],\n      [\"GFX/STADTFLD\", \"STADTFLD\"],\n      [\"GFX/EFFEKTE\", \"EFFEKT\"],\n      [\"GFX/FISCHE\", \"WAL\"],\n      [\"GFX/GAUKLER\", \"GAUKLER\"],\n      [\"GFX/MAEHER\", \"MAEHER\"],\n      [\"GFX/SCHATTEN\", \"SCHATTEN\"],\n      [\"GFX/SHIP\", \"SHIP\"],\n      [\"GFX/SOLDAT\", \"SOLDAT\"],\n      [\"GFX/TIERE\", \"RIND\"],\n      [\"GFX/TRAEGER\", \"TRAEGER\"],\n      [\"ToolGfx/BAUHAUS\", \"TOOLS/BAUHAUS\"],\n      [\"ToolGfx/BAUSHIP\", \"TOOLS/BAUSHIP\"],\n      // [\"ToolGfx/EDITOR\",  \"TOOLS/EDITOR\"],\n      [\"ToolGfx/START\", \"TOOLS/START\"],\n      [\"ToolGfx/SYMBOL\", \"TOOLS/SYMBOL\"],\n      [\"ToolGfx/TOOLS\", \"TOOLS/TOOLS\"]\n    ];\n    for (const r of files) {\n      const inName = r[0] + \".BSH\";\n      const outName = r[1];\n\n      this.logger.info(`Started parsing \"${inName}\".`);\n      const bshFile = this.findFileCaseInsensitive(annoRoot, inName);\n      const images = await parser.decodeBSH(\n        await Stream.fromZipObject(bshFile)\n      );\n      const sheets = parser.createSpriteSheets(images);\n      await parser.saveSpriteSheets(this.fs, sheets, `/gfx/${outName}`);\n      this.logger.info(`Finished parsing \"${inName}\".`);\n    }\n  }\n\n  private async parseTranslations(annoRoot: JSZip) {\n    this.logger.info(\"Started parsing translations.\");\n    const translationFile = this.findFileCaseInsensitive(annoRoot, \"text.cod\");\n    const codParser = new CODParser();\n    const translations = parseTranslations(\n      codParser.decrypt(await Stream.fromZipObject(translationFile))\n    );\n    await this.fs.write(\"/translations.json\", JSON.stringify(translations));\n    this.logger.info(\"Finished parsing translations.\");\n\n    return translations.PATH[0];\n  }\n\n  private async parseZEIs(annoRoot: JSZip) {\n    await this.fs.mkdir(\"/fonts\");\n\n    const parser = new BSHParser();\n    const bitmapFontGenerator = new BitmapFontGenerator();\n\n    const files = [\n      \"ZEI11A\",\n      \"ZEI14A\",\n      \"ZEI14V\",\n      \"ZEI16G\",\n      \"ZEI16H\",\n      \"ZEI16V\",\n      \"ZEI20H\",\n      \"ZEI20V\",\n      \"ZEI24V\",\n      \"ZEI28V\",\n      \"ZEI2\",\n      \"ZEI9A\"\n    ];\n    for (const fontName of files) {\n      const inName = `TOOLGFX/${fontName}.ZEI`;\n      this.logger.info(`Started parsing \"${inName}\".`);\n\n      const zeiFile = this.findFileCaseInsensitive(annoRoot, inName);\n      const images = await parser.decodeZEI(\n        await Stream.fromZipObject(zeiFile)\n      );\n      const sheets = parser.createSpriteSheets(images);\n      await parser.saveSpriteSheets(this.fs, sheets, `/fonts/${fontName}`);\n      const font = await bitmapFontGenerator.createBitmapFont(sheets, fontName);\n\n      await this.fs.write(`/fonts/${fontName}/font.xml`, font);\n\n      this.logger.info(`Finished parsing \"${inName}\".`);\n    }\n  }\n\n  private async parseMusic(annoRoot: JSZip) {\n    await this.fs.mkdir(\"/music\");\n\n    if (!this.hasFolderCaseInsensitive(annoRoot, \"MUSIC8\")) {\n      this.logger.warn(\"No music files found.\");\n      return;\n    }\n\n    const wavParser = new WAVParser();\n    // const mp3Encoder = new MP3Encoder();\n\n    const songs = await this.findFilesInZip(annoRoot, \"MUSIC8\", \".wav\");\n    for (const song of songs) {\n      const name = song.path.substr(1);\n      this.logger.info(`Converting song ${name}`);\n      const rawData = wavParser.decode(await song.file.async(\"uint8array\"));\n      const wavData = wavParser.encode(rawData);\n\n      await this.fs.write(`/music/${name}`, wavData);\n\n      // Alternatively, we could convert the .wav files into .mp3 format.\n      // This takes about 10 seconds per .wav file.\n      //\n      // const mp3Data = mp3Encoder.encode(rawData);\n      // await this.fs.write(\n      //     `/music/${name.replace(\".wav\", \".mp3\")}`,\n      //     mp3Data,\n      // );\n\n      this.logger.info(`Finished converting song ${name}`);\n    }\n  }\n\n  private async parseVideos(annoRoot: JSZip) {\n    await this.fs.mkdir(\"/videos\");\n\n    if (!this.hasFolderCaseInsensitive(annoRoot, \"VIDEOSMK\")) {\n      this.logger.warn(\"No video files found.\");\n      return;\n    }\n\n    const smkParser = new SMKParser();\n\n    const videos = await this.findFilesInZip(annoRoot, \"VIDEOSMK\", \".smk\");\n    for (const video of videos) {\n      const name = video.path.substr(1);\n      this.logger.info(`Converting video ${name}`);\n\n      const videoData = await video.file.async(\"uint8array\");\n      const result = await smkParser.parse(videoData);\n\n      await this.fs.write(`/videos/${name.replace(\".smk\", \".mp4\")}`, result);\n      this.logger.info(`Finished converting video ${name}`);\n    }\n  }\n\n  private async copyIslands(annoRoot: JSZip) {\n    return Promise.all(\n      [\n        [\"NOKLIMA\", \"/islands/noklima\"],\n        [\"NORD\", \"/islands/north\"],\n        [\"NORDNAT\", \"/islands/northnat\"],\n        [\"SUED\", \"/islands/south\"],\n        [\"SUEDNAT\", \"/islands/southnat\"]\n      ].map(r => {\n        return this.copyFolderFromZip(annoRoot, r[0], r[1], \".scp\");\n      })\n    );\n  }\n\n  private async copySaves(annoRoot: JSZip) {\n    await this.copyFolderFromZip(annoRoot, \"SAVEGAME\", \"/saves\", \".gam\");\n  }\n\n  private async copyMissions(annoRoot: JSZip, customMissionPath: string) {\n    await this.copyFolderFromZip(\n      annoRoot,\n      \"Szenes\",\n      \"/missions-original\",\n      \".szm|.szs|.hss\"\n    );\n    await this.copyFolderFromZip(\n      annoRoot,\n      customMissionPath,\n      \"/missions-custom\",\n      \".szm|.szs|.hss\"\n    );\n  }\n\n  private async copyFolderFromZip(\n    zip: JSZip,\n    inPath: string,\n    outPath: string,\n    fileExtensions: string,\n    makeLowerCase: boolean = true\n  ) {\n    inPath = `${inPath}/`;\n    this.logger.info(\n      `Copying '${fileExtensions}' files from '${inPath}' to '${outPath}'.`\n    );\n\n    const files = this.findFilesInZip(zip, inPath, fileExtensions);\n\n    await this.fs.mkdir(outPath);\n\n    for (const fileAndPath of files) {\n      const relativePath = makeLowerCase\n        ? fileAndPath.path.toLowerCase()\n        : fileAndPath.path;\n      const file = fileAndPath.file;\n\n      const targetPath = `${outPath}/${relativePath}`;\n      this.logger.info(`Copying '${relativePath}' to '${targetPath}'.`);\n      await this.fs.write(targetPath, await file.async(\"blob\"));\n    }\n  }\n\n  private findFilesInZip(zip: JSZip, inPath: string, fileExtensions: string) {\n    const files: Array<{ path: string; file: JSZipObject }> = [];\n    zip.forEach((relativePath, file) => {\n      if (relativePath.startsWith(inPath)) {\n        for (const fileExtension of fileExtensions.split(\"|\")) {\n          if (\n            relativePath.toLowerCase().endsWith(fileExtension.toLowerCase())\n          ) {\n            relativePath = relativePath.substring(inPath.length);\n            relativePath = relativePath.substring(\n              0,\n              relativePath.length - fileExtension.length\n            );\n            relativePath += fileExtension;\n            files.push({\n              path: relativePath,\n              file: file\n            });\n            break;\n          }\n        }\n      }\n    });\n    return files;\n  }\n\n  private findFileCaseInsensitive(zip: JSZip, path: string): JSZip.JSZipObject {\n    const caseInsensitiveFileName = new RegExp(escapeStringRegexp(path), \"i\");\n    const file = zip.file(caseInsensitiveFileName)[0];\n    if (file === undefined) {\n      throw new Error(`Could not find file ${path}.`);\n    }\n\n    return file;\n  }\n\n  private hasFolderCaseInsensitive(zip: JSZip, path: string): boolean {\n    const caseInsensitiveFolderName = new RegExp(escapeStringRegexp(path), \"i\");\n    return zip.folder(caseInsensitiveFolderName)[0] !== undefined;\n  }\n}\n","import * as log from \"loglevel\";\nimport Viewport from \"pixi-viewport\";\nimport {\n  Application,\n  MIPMAP_MODES,\n  Point,\n  Rectangle,\n  SCALE_MODES,\n  settings\n} from \"pixi.js\";\nimport FileSystem from \"./filesystem\";\nimport GameLoader from \"./game-loader\";\nimport AnimationRenderer from \"./game/animation-renderer\";\nimport ConfigLoader from \"./game/config-loader\";\nimport FontLoader from \"./game/font-loader\";\nimport GADRenderer from \"./game/gad-renderer\";\nimport IslandRenderer from \"./game/island-renderer\";\nimport IslandSpriteLoader from \"./game/island-sprite-loader\";\nimport MenuStructure from \"./game/menu-structure\";\nimport MusicPlayer from \"./game/music-player\";\nimport { islandFromSaveGame } from \"./game/world/island\";\nimport { Block } from \"./parsers/GAM/block\";\nimport GAMParser from \"./parsers/GAM/gam-parser\";\nimport IslandLoader from \"./parsers/GAM/island-loader\";\nimport SpriteLoader from \"./sprite-loader\";\nimport { loadTranslations } from \"./translation/translator\";\nimport UploadHandler from \"./upload\";\nimport { getQueryParameter } from \"./util/util\";\n\n// tslint:disable-next-line:no-floating-promises\n(async () => {\n  log.enableAll();\n\n  const style = document.createElement(\"style\");\n  style.innerText = `\n        body, html {\n            margin: 0;\n        }\n    `;\n  const game = document.createElement(\"div\");\n  game.id = \"game\";\n  const version = document.createElement(\"p\");\n  version.innerHTML = `Anno 2018, version ${__VERSION__},\n                         made by <a href=\"https://github.com/cmfcmf\">@cmfcmf</a>.\n                         The sourcecode can be found at <a href=\"https://github.com/cmfcmf/Anno2018\">GitHub</a>.`;\n\n  document.head.appendChild(style);\n  document.body.appendChild(game);\n  document.body.appendChild(version);\n\n  const fs = new FileSystem();\n  const FS_SIZE_MB = 2000;\n  await fs.init(1024 * 1024 * FS_SIZE_MB);\n  (window as any).fs = fs;\n\n  const uploadHandler = new UploadHandler(fs);\n  await uploadHandler.init();\n  uploadHandler.render(game);\n\n  if (!(await uploadHandler.isUploaded())) {\n    console.warn(\"Anno 1602 files not yet uploaded.\");\n    return;\n  }\n\n  // utils.skipHello();\n  settings.SCALE_MODE = SCALE_MODES.NEAREST;\n  settings.MIPMAP_TEXTURES = MIPMAP_MODES.OFF;\n  // settings.RENDER_OPTIONS.antialias = false;\n\n  const app = new Application({\n    width: window.innerWidth,\n    height: window.innerHeight - 120,\n    antialias: false,\n    transparent: false\n  });\n  game.insertAdjacentElement(\"afterbegin\", app.view);\n\n  const viewport = new Viewport({\n    screenWidth: app.screen.width,\n    screenHeight: app.screen.height,\n    passiveWheel: false\n  });\n  app.stage.addChild(viewport);\n\n  viewport\n    .drag({ direction: \"all\", wheel: false })\n    .wheel()\n    .mouseEdges({ distance: 20, speed: 15 });\n\n  const menuViewport = new Viewport({\n    screenWidth: app.screen.width,\n    screenHeight: app.screen.height,\n    worldWidth: 1024,\n    worldHeight: 768\n  });\n  app.stage.addChild(menuViewport);\n\n  await loadTranslations(fs);\n\n  const fontLoader = new FontLoader(fs);\n  await fontLoader.load();\n\n  const configLoader = new ConfigLoader(fs);\n  await configLoader.load();\n  console.log(`Finished loading config.`);\n\n  const musicPlayer = new MusicPlayer(fs);\n  await musicPlayer.load();\n  console.log(`Finished loading music.`);\n\n  const spriteLoader = new SpriteLoader(fs);\n  const islandLoader = new IslandLoader(fs, configLoader.getFieldData());\n\n  const gamParser = new GAMParser(islandLoader);\n  const worldFieldBuilder = new IslandSpriteLoader(\n    fs,\n    configLoader,\n    spriteLoader\n  );\n  const islandRenderer = new IslandRenderer(viewport, worldFieldBuilder);\n\n  const gameLoader = new GameLoader(\n    fs,\n    gamParser,\n    islandRenderer,\n    app,\n    viewport,\n    configLoader,\n    musicPlayer\n  );\n\n  const queryGameName = getQueryParameter(\"load\");\n  const gad = getQueryParameter(\"gad\");\n  const animationName = getQueryParameter(\"animation\");\n  const islandName = getQueryParameter(\"island\");\n  if (queryGameName !== null) {\n    await gameLoader.loadByName(queryGameName);\n    menuViewport.visible = false;\n  } else if (gad !== null) {\n    console.info(`Rendering \"${gad}\" screen.`);\n    const gadRenderer = new GADRenderer(menuViewport, spriteLoader);\n    const menuStructure = new MenuStructure(fs, gadRenderer, musicPlayer);\n    await menuStructure.renderScreen(gad);\n  } else if (animationName !== null) {\n    console.log(`Rendering animation \"${animationName}\".`);\n    const animationData = JSON.parse(\n      await fs.openAndGetContentAsText(\"/animations.json\")\n    );\n    const animationRenderer = new AnimationRenderer(\n      animationData,\n      spriteLoader\n    );\n    // await animationRenderer.renderAnimation(animation, viewport);\n    const animation = await animationRenderer.getAnimation(animationName);\n\n    const animIdx = 0;\n    const rotation = 1;\n\n    const sprite = animation[animIdx].sprites[rotation];\n    const config = animation[animIdx].config;\n    sprite.loop = true;\n    if (config.Kind !== \"ENDLESS\") {\n      let cnt = 0;\n      sprite.onLoop = () => {\n        cnt++;\n        console.log(cnt, config.AnimRept);\n        if (cnt === config.AnimRept) {\n          sprite.loop = false;\n        }\n      };\n    }\n\n    viewport.addChild(sprite);\n    sprite.play();\n  } else if (islandName !== null) {\n    console.info(`Rendering island \"${islandName}\".`);\n    const islandFile = await islandLoader.loadIslandFileByName(islandName);\n\n    const blocks: Block[] = [];\n    while (!islandFile.eof()) {\n      blocks.push(Block.fromStream(islandFile));\n    }\n    console.table(blocks);\n\n    const island = islandFromSaveGame(\n      blocks.find(block => [\"INSEL5\", \"INSEL4\", \"INSEL3\"].includes(block.type))!\n        .data\n    );\n    islandLoader.setIslandFields(island, [\n      blocks.find(block => block.type === \"INSELHAUS\")!\n    ]);\n    island.position = new Point(0, 0);\n    island.positionRect = new Rectangle(0, 0, island.size.x, island.size.y);\n\n    menuViewport.visible = false;\n    await islandRenderer.render([island]);\n  } else {\n    // menuViewport.fit(); // TODO: Makes usage of sliders harder\n    const gadRenderer = new GADRenderer(menuViewport, spriteLoader);\n    const menuStructure = new MenuStructure(fs, gadRenderer, musicPlayer);\n    menuStructure.on(\"load-game\", async (mission: string) => {\n      await gameLoader.load(mission);\n      menuViewport.visible = false;\n    });\n    await menuStructure.renderScreen(\"menu_main\");\n  }\n})();\n","let loadedFFmpeg: any;\n\nexport async function loadFFmpeg(): Promise<any> {\n  if (loadedFFmpeg) {\n    return loadedFFmpeg;\n  }\n\n  loadedFFmpeg = await doLoadFFmpeg();\n\n  await new Promise((resolve, reject) => {\n    loadedFFmpeg({\n      arguments: [\"-version\"],\n      returnCallback: resolve\n    });\n  });\n\n  return loadedFFmpeg;\n}\n\nasync function doLoadFFmpeg() {\n  console.log(\"Loading FFmpeg\");\n  let ffmpeg;\n\n  if (typeof window !== \"undefined\") {\n    ffmpeg = await loadFFmpegInBrowser();\n  } else {\n    // We can't write require() directly, because we don't want webpack to interpret it.\n    // It is only used when running this script under Node.js.\n    // tslint:disable-next-line:no-eval\n    ffmpeg = eval(\"require\")(\n      __dirname + \"/../../node_modules/smk2mp4/demo/ffmpeg.js\"\n    );\n  }\n  console.log(\"Finished loading FFmpeg\");\n  return ffmpeg;\n}\n\nasync function loadFFmpegInBrowser(): Promise<any> {\n  return new Promise<any>((resolve, reject) => {\n    const callback = () => {\n      const ffmpeg_run = (self as any).ffmpeg_run;\n      if (ffmpeg_run) {\n        resolve(ffmpeg_run);\n      } else {\n        reject(\"Could not load FFmpeg!\");\n      }\n    };\n\n    const head = document.getElementsByTagName(\"head\")[0];\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = \"ffmpeg.js\";\n    (script as any).onreadystatechange = callback;\n    script.onload = callback;\n\n    head.appendChild(script);\n  });\n}\n","import { JSZipObject } from \"jszip\";\n\nexport default class Stream {\n  public static async fromZipObject(zip: JSZipObject) {\n    const data = await zip.async(\"uint8array\");\n\n    return new Stream(data);\n  }\n\n  private pos: number;\n  private readonly data: Uint8Array;\n\n  public constructor(data: Uint8Array) {\n    this.pos = 0;\n    this.data = data;\n  }\n\n  get length(): number {\n    return this.data.length;\n  }\n\n  public position(): number {\n    return this.pos;\n  }\n\n  public seek(pos: number) {\n    this.pos = pos;\n  }\n\n  public readString(length: number) {\n    let result = \"\";\n    let done = false;\n    while (length--) {\n      const character = this.read8();\n      if (done || character === 0) {\n        done = true;\n        continue;\n      }\n      result += String.fromCharCode(character);\n    }\n\n    return result;\n  }\n\n  public readStringUnterminated(length: number) {\n    let result = \"\";\n    while (length--) {\n      result += String.fromCharCode(this.read8());\n    }\n\n    return result;\n  }\n\n  public read(length: number, size: number = 1) {\n    length *= size;\n    const result = [];\n    while (length > 0) {\n      result.push(this.readNBytes(size));\n      length -= size;\n    }\n    return result;\n  }\n\n  public slice(length: number) {\n    const data = this.data.slice(this.pos, this.pos + length);\n    this.pos += length;\n    return data;\n  }\n\n  public read16() {\n    return this.readNBytes(2);\n  }\n\n  public read24() {\n    return this.readNBytes(3);\n  }\n\n  public read32() {\n    return this.readNBytes(4);\n  }\n\n  public read32S(): number {\n    return this.readNBytes(4) >> 0;\n  }\n\n  public read64() {\n    return this.readNBytes(8);\n  }\n\n  public read8() {\n    return this.data[this.pos++];\n  }\n\n  public eof() {\n    return this.pos === this.length;\n  }\n\n  public read8Bool(): boolean {\n    return this.read8() !== 0;\n  }\n\n  private readNBytes(n: number) {\n    let result = 0;\n    for (let i = 0; i < n; i++) {\n      result += this.read8() * 2 ** (i * 8);\n    }\n    return result;\n  }\n}\n","import { decode as iconv_decode, encode as iconv_encode } from \"iconv-lite\";\nimport Stream from \"../stream\";\n\nexport default class CODParser {\n  private encoding = \"win1252\";\n\n  public decrypt(data: Stream): string {\n    const decryptedBytes = new Buffer(data.length);\n    for (let i = 0; i < data.length; i++) {\n      decryptedBytes[i] = 256 - data.read8();\n    }\n\n    // Decode the bytes using Windows 1252 \"Western\" encoding.\n    // The resulting string will then be written in UTF-8 format.\n    return iconv_decode(decryptedBytes, this.encoding);\n  }\n\n  public encrypt(content: string): Uint8Array {\n    const file = new Stream(iconv_encode(content, this.encoding));\n    const encryptedBytes = new Buffer(file.length);\n    for (let i = 0; i < file.length; i++) {\n      encryptedBytes[i] = 256 - file.read8();\n    }\n\n    return encryptedBytes;\n  }\n}\n","// https://stackoverflow.com/a/12713326/2560557\nimport JSZip from \"jszip\";\n\nexport function uInt8ToBase64(arr: Uint8Array): string {\n  const CHUNK_SIZE = 0x8000; // arbitrary number\n  let index = 0;\n  const length = arr.length;\n  let result = \"\";\n  while (index < length) {\n    const slice = arr.subarray(index, Math.min(index + CHUNK_SIZE, length));\n    result += String.fromCharCode.apply(null, slice);\n    index += CHUNK_SIZE;\n  }\n\n  // tslint:disable:no-eval\n  return typeof window !== \"undefined\"\n    ? btoa(result)\n    : eval(\"require\")(\"btoa\")(result);\n  // tslint:enable:no-eval\n}\n\n/**\n * Get the value of the first query parameter with the given name.\n *\n * Taken from https://stackoverflow.com/a/901144\n */\nexport function getQueryParameter(name: string): string | null {\n  const url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\");\n  const results = regex.exec(url);\n  if (!results) {\n    return null;\n  }\n  if (!results[2]) {\n    return \"\";\n  }\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nexport function findRootInZip(zip: JSZip): JSZip {\n  const gfxFolder = zip.filter(relativePath =>\n    (\"/\" + relativePath).endsWith(\"/GFX/\")\n  );\n  if (gfxFolder.length === 1) {\n    return zip.folder(gfxFolder[0].name.replace(\"GFX/\", \"\"));\n  }\n  throw new Error(\"Your ZIP file does not have the expected structure.\");\n}\n\nexport function make2DArray<T>(x: number, y: number): Array<Array<T | null>> {\n  return Array(x)\n    .fill(undefined)\n    .map(() => Array(y).fill(null));\n}\n"],"sourceRoot":""}